@import url("https://fonts.googleapis.com/css?family=Lato:300,400,400i,700");
* {
  margin: 0;
  padding: 0;
  outline: none;
  border: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

a {
  text-decoration: none;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
}

.page_wrapper {
  min-height: 100vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.page_wrapper > main {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
}

/* GRID */
.row {
  max-width: 1400px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin: auto;
  padding: 0 10px;
}

.space_between {
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.align_center {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

[class^="col"] {
  padding: 0 10px;
}

/* General */
.col_1 {
  width: 9.09091%;
}

.col_2 {
  width: 18.18182%;
}

.col_3 {
  width: 27.27273%;
}

.col_4 {
  width: 36.36364%;
}

.col_5 {
  width: 45.45455%;
}

.col_6 {
  width: 54.54545%;
}

.col_7 {
  width: 63.63636%;
}

.col_8 {
  width: 72.72727%;
}

.col_9 {
  width: 81.81818%;
}

.col_10 {
  width: 90.90909%;
}

.col_11 {
  width: 100%;
}

.push_0 {
  margin-left: 0%;
}

.push_1 {
  margin-left: 9.09091%;
}

.push_2 {
  margin-left: 18.18182%;
}

.push_3 {
  margin-left: 27.27273%;
}

.push_4 {
  margin-left: 36.36364%;
}

.push_5 {
  margin-left: 45.45455%;
}

.push_6 {
  margin-left: 54.54545%;
}

.push_7 {
  margin-left: 63.63636%;
}

.push_8 {
  margin-left: 72.72727%;
}

.push_9 {
  margin-left: 81.81818%;
}

.push_10 {
  margin-left: 90.90909%;
}

/* Phone */
@media screen and (max-width: 425px) {
  .col_sm_1 {
    width: 50%;
  }
  .col_sm_2 {
    width: 100%;
  }
  .push_sm_0 {
    margin-left: 0%;
  }
  .push_sm_1 {
    margin-left: 50%;
  }
}

/* Tablet */
@media screen and (min-width: 426px) {
  .col_md_1 {
    width: 25%;
  }
  .col_md_2 {
    width: 50%;
  }
  .col_md_3 {
    width: 75%;
  }
  .col_md_4 {
    width: 100%;
  }
  .push_md_0 {
    margin-left: 0%;
  }
  .push_md_1 {
    margin-left: 25%;
  }
  .push_md_2 {
    margin-left: 50%;
  }
  .push_md_3 {
    margin-left: 75%;
  }
}

/* Laptop */
@media screen and (min-width: 769px) {
  .col_lg_1 {
    width: 9.09091%;
  }
  .col_lg_2 {
    width: 18.18182%;
  }
  .col_lg_3 {
    width: 27.27273%;
  }
  .col_lg_4 {
    width: 36.36364%;
  }
  .col_lg_5 {
    width: 45.45455%;
  }
  .col_lg_6 {
    width: 54.54545%;
  }
  .col_lg_7 {
    width: 63.63636%;
  }
  .col_lg_8 {
    width: 72.72727%;
  }
  .col_lg_9 {
    width: 81.81818%;
  }
  .col_lg_10 {
    width: 90.90909%;
  }
  .col_lg_11 {
    width: 100%;
  }
  .push_lg_0 {
    margin-left: 0%;
  }
  .push_lg_1 {
    margin-left: 9.09091%;
  }
  .push_lg_2 {
    margin-left: 18.18182%;
  }
  .push_lg_3 {
    margin-left: 27.27273%;
  }
  .push_lg_4 {
    margin-left: 36.36364%;
  }
  .push_lg_5 {
    margin-left: 45.45455%;
  }
  .push_lg_6 {
    margin-left: 54.54545%;
  }
  .push_lg_7 {
    margin-left: 63.63636%;
  }
  .push_lg_8 {
    margin-left: 72.72727%;
  }
  .push_lg_9 {
    margin-left: 81.81818%;
  }
  .push_lg_10 {
    margin-left: 90.90909%;
  }
}

/* Desktop */
@media screen and (min-width: 1025px) {
  .col_xl_1 {
    width: 9.09091%;
  }
  .col_xl_2 {
    width: 18.18182%;
  }
  .col_xl_3 {
    width: 27.27273%;
  }
  .col_xl_4 {
    width: 36.36364%;
  }
  .col_xl_5 {
    width: 45.45455%;
  }
  .col_xl_6 {
    width: 54.54545%;
  }
  .col_xl_7 {
    width: 63.63636%;
  }
  .col_xl_8 {
    width: 72.72727%;
  }
  .col_xl_9 {
    width: 81.81818%;
  }
  .col_xl_10 {
    width: 90.90909%;
  }
  .col_xl_11 {
    width: 100%;
  }
  .push_xl_0 {
    margin-left: 0%;
  }
  .push_xl_1 {
    margin-left: 9.09091%;
  }
  .push_xl_2 {
    margin-left: 18.18182%;
  }
  .push_xl_3 {
    margin-left: 27.27273%;
  }
  .push_xl_4 {
    margin-left: 36.36364%;
  }
  .push_xl_5 {
    margin-left: 45.45455%;
  }
  .push_xl_6 {
    margin-left: 54.54545%;
  }
  .push_xl_7 {
    margin-left: 63.63636%;
  }
  .push_xl_8 {
    margin-left: 72.72727%;
  }
  .push_xl_9 {
    margin-left: 81.81818%;
  }
  .push_xl_10 {
    margin-left: 90.90909%;
  }
}

body,
input,
button {
  font-family: 'Lato', sans-serif;
}

.logo_path {
  fill: currentColor;
}

.site_logo {
  display: none;
}

.header {
  width: 100%;
  height: 70px;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1000;
  background: #C20000;
}

.header_logo {
  font-size: 1rem;
  line-height: 1em;
}

.header_logo a {
  height: 70px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  color: #FFFFFF;
}

.header_logo a:hover {
  opacity: 0.7;
}

.header_logo svg {
  width: 26px;
  height: 31px;
  margin-right: 7px;
}

@media screen and (min-width: 769px) {
  .header_logo {
    font-size: 1.5rem;
  }
  .header_logo svg {
    width: 36px;
    height: 42px;
    margin-right: 14px;
  }
}

.header_nav_button {
  width: 30px;
  height: 70px;
  position: relative;
  background-color: transparent;
  cursor: pointer;
  overflow: hidden;
  text-indent: -999999px;
  z-index: 10;
}

.header_nav_button span, .header_nav_button:before, .header_nav_button:after {
  width: 25px;
  height: 2px;
  position: absolute;
  top: 34px;
  right: 0;
  content: "";
  background: #FFFFFF;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
}

.header_nav_button:before {
  -webkit-transform: translateY(-9px);
          transform: translateY(-9px);
}

.header_nav_button:after {
  -webkit-transform: translateY(9px);
          transform: translateY(9px);
}

.menu_open .header_nav_button span {
  opacity: 0;
}

.menu_open .header_nav_button:before {
  -webkit-transform: translateY(0) rotate(45deg);
          transform: translateY(0) rotate(45deg);
}

.menu_open .header_nav_button:after {
  -webkit-transform: translateY(0) rotate(-45deg);
          transform: translateY(0) rotate(-45deg);
}

@media screen and (min-width: 769px) {
  .header_nav_button {
    width: 70px;
  }
  .header_nav_button span, .header_nav_button:before, .header_nav_button:after {
    width: 30px;
  }
}

.header_nav_menu {
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-transform: translateY(-100%);
          transform: translateY(-100%);
  -webkit-transition: all 0.6s;
  transition: all 0.6s;
}

.menu_open .header_nav_menu {
  -webkit-transform: translateY(0);
          transform: translateY(0);
}

.main_nav_wrapper {
  background: #C20000;
  color: #FFFFFF;
}

.main_nav_wrapper h2 {
  height: 70px;
  font-size: 1.5rem;
  padding: 20px 0;
}

.main {
  padding-top: 70px;
}

.hero_wrapper + .main {
  padding-top: 0;
}

.footer {
  background: #C20000;
  color: #FFFFFF;
}

.footer a {
  color: #FFFFFF;
  padding: 0 2px;
}

.footer a:hover {
  opacity: 0.6;
}

.footer_top {
  padding: 45px 0 64px;
}

.footer_top, .footer_top p, .footer_top h3, .footer_top h4, .footer_top h5, .footer_top h6 {
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5em;
}

@media screen and (max-width: 1024px) {
  .footer_top .row > div {
    padding-bottom: 20px;
  }
}

.footer_bottom {
  background: #8F0000;
  font-size: 0.875rem;
  padding: 21px 0;
}

.footer_utility_nav ul {
  list-style: none;
}

.footer_utility_nav li {
  display: inline-block;
}

.footer_utility_nav li + li:before {
  content: "|";
}

.footer_nav ul {
  display: grid;
  grid-template-columns: auto auto;
  grid-gap: 10px 20px;
  font-size: 1rem;
  font-weight: 300;
  list-style: none;
  text-transform: uppercase;
}

.footer_nav li {
  line-height: 1.2em;
}

.schema_name {
  position: absolute;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(1px 1px 1px 1px);
  clip: rect(1px, 1px, 1px, 1px);
}

.hero_wrapper {
  position: relative;
  z-index: 0;
}

.hero_item {
  position: relative;
}

@media screen and (min-width: 769px) {
  .hero_item {
    max-height: 600px;
    overflow: hidden;
  }
}

.hero_image {
  position: relative;
  z-index: 0;
}

.hero_image img {
  width: 100%;
  height: auto;
  display: block;
}

.hero_content {
  width: 100%;
}

@media screen and (min-width: 769px) {
  .hero_content {
    position: absolute;
    left: 0;
    bottom: 10px;
  }
}

@media screen and (min-width: 1440px) {
  .hero_content {
    bottom: 36px;
  }
}

.hero_copy {
  width: 100%;
  position: relative;
  background: #C20000;
  color: #FFFFFF;
  font-size: 1.5rem;
  margin-bottom: 10px;
  padding: 20px;
}

@media screen and (min-width: 769px) {
  .hero_copy {
    background: rgba(194, 0, 0, 0.75);
  }
}

@media screen and (min-width: 1025px) {
  .hero_copy {
    left: -20px;
    -webkit-box-sizing: content-box;
            box-sizing: content-box;
    font-size: 2.25rem;
  }
}

.hero_cta {
  font-weight: 300;
  letter-spacing: 0.001em;
  display: inline-block;
  font-size: 1.125rem;
  padding: 14px 20px;
  text-decoration: none;
  text-transform: uppercase;
  -webkit-transition: all 0.3;
  transition: all 0.3;
  background: rgba(194, 0, 0, 0.9);
  color: #FFFFFF;
}

.hero_cta:hover {
  background: rgba(194, 0, 0, 0.6);
}

@media screen and (min-width: 1025px) {
  .hero_cta {
    position: relative;
    left: -20px;
  }
}

/*
 *  Owl Carousel - Core
 */
.owl-carousel {
  display: none;
  width: 100%;
  -webkit-tap-highlight-color: transparent;
  /* position relative and z-index fix webkit rendering fonts issue */
  position: relative;
  z-index: 1;
}

.owl-carousel .owl-stage {
  position: relative;
  -ms-touch-action: pan-Y;
  touch-action: manipulation;
  -moz-backface-visibility: hidden;
  /* fix firefox animation glitch */
}

.owl-carousel .owl-stage:after {
  content: ".";
  display: block;
  clear: both;
  visibility: hidden;
  line-height: 0;
  height: 0;
}

.owl-carousel .owl-stage-outer {
  position: relative;
  overflow: hidden;
  /* fix for flashing background */
  -webkit-transform: translate3d(0px, 0px, 0px);
}

.owl-carousel .owl-wrapper,
.owl-carousel .owl-item {
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  -ms-backface-visibility: hidden;
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
}

.owl-carousel .owl-item {
  position: relative;
  min-height: 1px;
  float: left;
  -webkit-backface-visibility: hidden;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}

.owl-carousel .owl-item img {
  display: block;
  width: 100%;
}

.owl-carousel .owl-nav.disabled,
.owl-carousel .owl-dots.disabled {
  display: none;
}

.owl-carousel .owl-nav .owl-prev,
.owl-carousel .owl-nav .owl-next,
.owl-carousel .owl-dot {
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.owl-carousel .owl-nav button.owl-prev,
.owl-carousel .owl-nav button.owl-next,
.owl-carousel button.owl-dot {
  background: none;
  color: inherit;
  border: none;
  padding: 0 !important;
  font: inherit;
}

.owl-carousel.owl-loaded {
  display: block;
}

.owl-carousel.owl-loading {
  opacity: 0;
  display: block;
}

.owl-carousel.owl-hidden {
  opacity: 0;
}

.owl-carousel.owl-refresh .owl-item {
  visibility: hidden;
}

.owl-carousel.owl-drag .owl-item {
  -ms-touch-action: pan-y;
      touch-action: pan-y;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.owl-carousel.owl-grab {
  cursor: move;
  cursor: -webkit-grab;
  cursor: grab;
}

.owl-carousel.owl-rtl {
  direction: rtl;
}

.owl-carousel.owl-rtl .owl-item {
  float: right;
}

/* No Js */
.no-js .owl-carousel {
  display: block;
}

/*
 *  Owl Carousel - Animate Plugin
 */
.owl-carousel .animated {
  -webkit-animation-duration: 1000ms;
          animation-duration: 1000ms;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both;
}

.owl-carousel .owl-animated-in {
  z-index: 0;
}

.owl-carousel .owl-animated-out {
  z-index: 1;
}

.owl-carousel .fadeOut {
  -webkit-animation-name: fadeOut;
          animation-name: fadeOut;
}

@-webkit-keyframes fadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes fadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

/*
 * 	Owl Carousel - Auto Height Plugin
 */
.owl-height {
  -webkit-transition: height 500ms ease-in-out;
  transition: height 500ms ease-in-out;
}

/*
 * 	Owl Carousel - Lazy Load Plugin
 */
.owl-carousel .owl-item {
  /**
			This is introduced due to a bug in IE11 where lazy loading combined with autoheight plugin causes a wrong
			calculation of the height of the owl-item that breaks page layouts
		 */
}

.owl-carousel .owl-item .owl-lazy {
  opacity: 0;
  -webkit-transition: opacity 400ms ease;
  transition: opacity 400ms ease;
}

.owl-carousel .owl-item .owl-lazy[src^=""], .owl-carousel .owl-item .owl-lazy:not([src]) {
  max-height: 0;
}

.owl-carousel .owl-item img.owl-lazy {
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
}

/*
 * 	Owl Carousel - Video Plugin
 */
.owl-carousel .owl-video-wrapper {
  position: relative;
  height: 100%;
  background: #000;
}

.owl-carousel .owl-video-play-icon {
  position: absolute;
  height: 80px;
  width: 80px;
  left: 50%;
  top: 50%;
  margin-left: -40px;
  margin-top: -40px;
  background: url("owl.video.play.png") no-repeat;
  cursor: pointer;
  z-index: 1;
  -webkit-backface-visibility: hidden;
  -webkit-transition: -webkit-transform 100ms ease;
  transition: -webkit-transform 100ms ease;
  transition: transform 100ms ease;
  transition: transform 100ms ease, -webkit-transform 100ms ease;
}

.owl-carousel .owl-video-play-icon:hover {
  -webkit-transform: scale(1.3, 1.3);
          transform: scale(1.3, 1.3);
}

.owl-carousel .owl-video-playing .owl-video-tn,
.owl-carousel .owl-video-playing .owl-video-play-icon {
  display: none;
}

.owl-carousel .owl-video-tn {
  opacity: 0;
  height: 100%;
  background-position: center center;
  background-repeat: no-repeat;
  background-size: contain;
  -webkit-transition: opacity 400ms ease;
  transition: opacity 400ms ease;
}

.owl-carousel .owl-video-frame {
  position: relative;
  z-index: 1;
  height: 100%;
  width: 100%;
}

/*
 * 	Default theme - Owl Carousel CSS File
 */
.owl-theme .owl-nav {
  margin-top: 10px;
  text-align: center;
  -webkit-tap-highlight-color: transparent;
}

.owl-theme .owl-nav [class*='owl-'] {
  color: #FFF;
  font-size: 0.875rem;
  margin: 5px;
  padding: 4px 7px;
  background: #D6D6D6;
  display: inline-block;
  cursor: pointer;
  border-radius: 3px;
}

.owl-theme .owl-nav [class*='owl-']:hover {
  background: #869791;
  color: #FFF;
  text-decoration: none;
}

.owl-theme .owl-nav .disabled {
  opacity: 0.5;
  cursor: default;
}

.owl-theme .owl-nav.disabled + .owl-dots {
  margin-top: 10px;
}

.owl-theme .owl-dots {
  text-align: center;
  -webkit-tap-highlight-color: transparent;
}

.owl-theme .owl-dots .owl-dot {
  display: inline-block;
  zoom: 1;
  *display: inline;
}

.owl-theme .owl-dots .owl-dot span {
  width: 10px;
  height: 10px;
  margin: 5px 7px;
  background: #D6D6D6;
  display: block;
  -webkit-backface-visibility: visible;
  -webkit-transition: opacity 200ms ease;
  transition: opacity 200ms ease;
  border-radius: 30px;
}

.owl-theme .owl-dots .owl-dot.active span, .owl-theme .owl-dots .owl-dot:hover span {
  background: #869791;
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl90eXBlLnNjc3MiLCJfc2V0dXAuc2NzcyIsIm1haW4uY3NzIiwiX3ZhcmlhYmxlcy5zY3NzIiwiX2dyaWQuc2NzcyIsIl9sb2dvLnNjc3MiLCJfaGVhZGVyLnNjc3MiLCJfbmF2LnNjc3MiLCJfY29udGVudC5zY3NzIiwiX2Zvb3Rlci5zY3NzIiwiX2Jsb2NrX2NvbnRhY3Quc2NzcyIsIl9taXhpbnMuc2NzcyIsIl9ibG9ja19oZXJvLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvb3dsLmNhcm91c2VsL3NyYy9zY3NzL19jb3JlLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvb3dsLmNhcm91c2VsL3NyYy9zY3NzL19hbmltYXRlLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvb3dsLmNhcm91c2VsL3NyYy9zY3NzL19hdXRvaGVpZ2h0LnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvb3dsLmNhcm91c2VsL3NyYy9zY3NzL19sYXp5bG9hZC5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL293bC5jYXJvdXNlbC9zcmMvc2Nzcy9fdmlkZW8uc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9vd2wuY2Fyb3VzZWwvc3JjL3Njc3MvX3RoZW1lLmRlZmF1bHQuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9vd2wuY2Fyb3VzZWwvc3JjL3Njc3MvX3RoZW1lLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkVBQVk7QUNBWjtFQUNFLFVBQVM7RUFDVCxXQUFVO0VBQ1YsY0FBYTtFQUNiLFVBQVM7RUFDVCwrQkFBc0I7VUFDdkIsdUJBQUE7Q0NFQTs7QUFFRDtFREFFLHNCRVZVO0VGV1gsNkJBQUE7RUNFQyxxQkFBcUI7Q0RBdkI7O0FDR0E7RURBRSxrQkFBZ0I7RUFLakIscUJBQUE7RUNGQyxxQkFBcUI7RUROdkIsY0FLSTtFQUNBLDZCQUFZO0VBQ2IsOEJBQUE7TUNHRywyQkFBMkI7VUV2QnZCLHVCQUFBO0NBT1Y7O0FGb0JBO0VFaEJFLG9CQUFl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Q0Usb0JBQW9CO0NBQ3JCIiwiZmlsZSI6InRvLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9TGF0bzozMDAsNDAwLDQwMGksNzAwJyk7XG5ib2R5LFxuaW5wdXQsXG5idXR0b24ge1xuICBmb250LWZhbWlseTogJ0xhdG8nLCBzYW5zLXNlcmlmO1xufVxuIiwiKiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgb3V0bGluZTogbm9uZTtcbiAgYm9yZGVyOiAwO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0cmFuc2l0aW9uOiBhbGwgJHNwZWVkO1xufVxuXG4ucGFnZV93cmFwcGVyIHtcbiAgbWluLWhlaWdodDogMTAwdmg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cbiAgPiBtYWluIHtcbiAgICBmbGV4LWdyb3c6IDE7XG4gIH1cbn1cbiIsIkBpbXBvcnQgdXJsKFwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PUxhdG86MzAwLDQwMCw0MDBpLDcwMFwiKTtcbioge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJvcmRlcjogMDtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzO1xufVxuXG4ucGFnZV93cmFwcGVyIHtcbiAgbWluLWhlaWdodDogMTAwdmg7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4ucGFnZV93cmFwcGVyID4gbWFpbiB7XG4gIC13ZWJraXQtYm94LWZsZXg6IDE7XG4gICAgICAtbXMtZmxleC1wb3NpdGl2ZTogMTtcbiAgICAgICAgICBmbGV4LWdyb3c6IDE7XG59XG5cbi8qIEdSSUQgKi9cbi5yb3cge1xuICBtYXgtd2lkdGg6IDE0MDBweDtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZmxleC13cmFwOiB3cmFwO1xuICAgICAgZmxleC13cmFwOiB3cmFwO1xuICBtYXJnaW46IGF1dG87XG4gIHBhZGRpbmc6IDAgMTBweDtcbn1cblxuLnNwYWNlX2JldHdlZW4ge1xuICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5hbGlnbl9jZW50ZXIge1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG5bY2xhc3NePVwiY29sXCJdIHtcbiAgcGFkZGluZzogMCAxMHB4O1xufVxuXG4vKiBHZW5lcmFsICovXG4uY29sXzEge1xuICB3aWR0aDogOS4wOTA5MSU7XG59XG5cbi5jb2xfMiB7XG4gIHdpZHRoOiAxOC4xODE4MiU7XG59XG5cbi5jb2xfMyB7XG4gIHdpZHRoOiAyNy4yNzI3MyU7XG59XG5cbi5jb2xfNCB7XG4gIHdpZHRoOiAzNi4zNjM2NCU7XG59XG5cbi5jb2xfNSB7XG4gIHdpZHRoOiA0NS40NTQ1NSU7XG59XG5cbi5jb2xfNiB7XG4gIHdpZHRoOiA1NC41NDU0NSU7XG59XG5cbi5jb2xfNyB7XG4gIHdpZHRoOiA2My42MzYzNiU7XG59XG5cbi5jb2xfOCB7XG4gIHdpZHRoOiA3Mi43MjcyNyU7XG59XG5cbi5jb2xfOSB7XG4gIHdpZHRoOiA4MS44MTgxOCU7XG59XG5cbi5jb2xfMTAge1xuICB3aWR0aDogOTAuOTA5MDklO1xufVxuXG4uY29sXzExIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5wdXNoXzAge1xuICBtYXJnaW4tbGVmdDogMCU7XG59XG5cbi5wdXNoXzEge1xuICBtYXJnaW4tbGVmdDogOS4wOTA5MSU7XG59XG5cbi5wdXNoXzIge1xuICBtYXJnaW4tbGVmdDogMTguMTgxODIlO1xufVxuXG4ucHVzaF8zIHtcbiAgbWFyZ2luLWxlZnQ6IDI3LjI3MjczJTtcbn1cblxuLnB1c2hfNCB7XG4gIG1hcmdpbi1sZWZ0OiAzNi4zNjM2NCU7XG59XG5cbi5wdXNoXzUge1xuICBtYXJnaW4tbGVmdDogNDUuNDU0NTUlO1xufVxuXG4ucHVzaF82IHtcbiAgbWFyZ2luLWxlZnQ6IDU0LjU0NTQ1JTtcbn1cblxuLnB1c2hfNyB7XG4gIG1hcmdpbi1sZWZ0OiA2My42MzYzNiU7XG59XG5cbi5wdXNoXzgge1xuICBtYXJnaW4tbGVmdDogNzIuNzI3MjclO1xufVxuXG4ucHVzaF85IHtcbiAgbWFyZ2luLWxlZnQ6IDgxLjgxODE4JTtcbn1cblxuLnB1c2hfMTAge1xuICBtYXJnaW4tbGVmdDogOTAuOTA5MDklO1xufVxuXG4vKiBQaG9uZSAqL1xuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcbiAgLmNvbF9zbV8xIHtcbiAgICB3aWR0aDogNTAlO1xuICB9XG4gIC5jb2xfc21fMiB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgLnB1c2hfc21fMCB7XG4gICAgbWFyZ2luLWxlZnQ6IDAlO1xuICB9XG4gIC5wdXNoX3NtXzEge1xuICAgIG1hcmdpbi1sZWZ0OiA1MCU7XG4gIH1cbn1cblxuLyogVGFibGV0ICovXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0MjZweCkge1xuICAuY29sX21kXzEge1xuICAgIHdpZHRoOiAyNSU7XG4gIH1cbiAgLmNvbF9tZF8yIHtcbiAgICB3aWR0aDogNTAlO1xuICB9XG4gIC5jb2xfbWRfMyB7XG4gICAgd2lkdGg6IDc1JTtcbiAgfVxuICAuY29sX21kXzQge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5wdXNoX21kXzAge1xuICAgIG1hcmdpbi1sZWZ0OiAwJTtcbiAgfVxuICAucHVzaF9tZF8xIHtcbiAgICBtYXJnaW4tbGVmdDogMjUlO1xuICB9XG4gIC5wdXNoX21kXzIge1xuICAgIG1hcmdpbi1sZWZ0OiA1MCU7XG4gIH1cbiAgLnB1c2hfbWRfMyB7XG4gICAgbWFyZ2luLWxlZnQ6IDc1JTtcbiAgfVxufVxuXG4vKiBMYXB0b3AgKi9cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSB7XG4gIC5jb2xfbGdfMSB7XG4gICAgd2lkdGg6IDkuMDkwOTElO1xuICB9XG4gIC5jb2xfbGdfMiB7XG4gICAgd2lkdGg6IDE4LjE4MTgyJTtcbiAgfVxuICAuY29sX2xnXzMge1xuICAgIHdpZHRoOiAyNy4yNzI3MyU7XG4gIH1cbiAgLmNvbF9sZ180IHtcbiAgICB3aWR0aDogMzYuMzYzNjQlO1xuICB9XG4gIC5jb2xfbGdfNSB7XG4gICAgd2lkdGg6IDQ1LjQ1NDU1JTtcbiAgfVxuICAuY29sX2xnXzYge1xuICAgIHdpZHRoOiA1NC41NDU0NSU7XG4gIH1cbiAgLmNvbF9sZ183IHtcbiAgICB3aWR0aDogNjMuNjM2MzYlO1xuICB9XG4gIC5jb2xfbGdfOCB7XG4gICAgd2lkdGg6IDcyLjcyNzI3JTtcbiAgfVxuICAuY29sX2xnXzkge1xuICAgIHdpZHRoOiA4MS44MTgxOCU7XG4gIH1cbiAgLmNvbF9sZ18xMCB7XG4gICAgd2lkdGg6IDkwLjkwOTA5JTtcbiAgfVxuICAuY29sX2xnXzExIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAucHVzaF9sZ18wIHtcbiAgICBtYXJnaW4tbGVmdDogMCU7XG4gIH1cbiAgLnB1c2hfbGdfMSB7XG4gICAgbWFyZ2luLWxlZnQ6IDkuMDkwOTElO1xuICB9XG4gIC5wdXNoX2xnXzIge1xuICAgIG1hcmdpbi1sZWZ0OiAxOC4xODE4MiU7XG4gIH1cbiAgLnB1c2hfbGdfMyB7XG4gICAgbWFyZ2luLWxlZnQ6IDI3LjI3MjczJTtcbiAgfVxuICAucHVzaF9sZ180IHtcbiAgICBtYXJnaW4tbGVmdDogMzYuMzYzNjQlO1xuICB9XG4gIC5wdXNoX2xnXzUge1xuICAgIG1hcmdpbi1sZWZ0OiA0NS40NTQ1NSU7XG4gIH1cbiAgLnB1c2hfbGdfNiB7XG4gICAgbWFyZ2luLWxlZnQ6IDU0LjU0NTQ1JTtcbiAgfVxuICAucHVzaF9sZ183IHtcbiAgICBtYXJnaW4tbGVmdDogNjMuNjM2MzYlO1xuICB9XG4gIC5wdXNoX2xnXzgge1xuICAgIG1hcmdpbi1sZWZ0OiA3Mi43MjcyNyU7XG4gIH1cbiAgLnB1c2hfbGdfOSB7XG4gICAgbWFyZ2luLWxlZnQ6IDgxLjgxODE4JTtcbiAgfVxuICAucHVzaF9sZ18xMCB7XG4gICAgbWFyZ2luLWxlZnQ6IDkwLjkwOTA5JTtcbiAgfVxufVxuXG4vKiBEZXNrdG9wICovXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgLmNvbF94bF8xIHtcbiAgICB3aWR0aDogOS4wOTA5MSU7XG4gIH1cbiAgLmNvbF94bF8yIHtcbiAgICB3aWR0aDogMTguMTgxODIlO1xuICB9XG4gIC5jb2xfeGxfMyB7XG4gICAgd2lkdGg6IDI3LjI3MjczJTtcbiAgfVxuICAuY29sX3hsXzQge1xuICAgIHdpZHRoOiAzNi4zNjM2NCU7XG4gIH1cbiAgLmNvbF94bF81IHtcbiAgICB3aWR0aDogNDUuNDU0NTUlO1xuICB9XG4gIC5jb2xfeGxfNiB7XG4gICAgd2lkdGg6IDU0LjU0NTQ1JTtcbiAgfVxuICAuY29sX3hsXzcge1xuICAgIHdpZHRoOiA2My42MzYzNiU7XG4gIH1cbiAgLmNvbF94bF84IHtcbiAgICB3aWR0aDogNzIuNzI3MjclO1xuICB9XG4gIC5jb2xfeGxfOSB7XG4gICAgd2lkdGg6IDgxLjgxODE4JTtcbiAgfVxuICAuY29sX3hsXzEwIHtcbiAgICB3aWR0aDogOTAuOTA5MDklO1xuICB9XG4gIC5jb2xfeGxfMTEge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5wdXNoX3hsXzAge1xuICAgIG1hcmdpbi1sZWZ0OiAwJTtcbiAgfVxuICAucHVzaF94bF8xIHtcbiAgICBtYXJnaW4tbGVmdDogOS4wOTA5MSU7XG4gIH1cbiAgLnB1c2hfeGxfMiB7XG4gICAgbWFyZ2luLWxlZnQ6IDE4LjE4MTgyJTtcbiAgfVxuICAucHVzaF94bF8zIHtcbiAgICBtYXJnaW4tbGVmdDogMjcuMjcyNzMlO1xuICB9XG4gIC5wdXNoX3hsXzQge1xuICAgIG1hcmdpbi1sZWZ0OiAzNi4zNjM2NCU7XG4gIH1cbiAgLnB1c2hfeGxfNSB7XG4gICAgbWFyZ2luLWxlZnQ6IDQ1LjQ1NDU1JTtcbiAgfVxuICAucHVzaF94bF82IHtcbiAgICBtYXJnaW4tbGVmdDogNTQuNTQ1NDUlO1xuICB9XG4gIC5wdXNoX3hsXzcge1xuICAgIG1hcmdpbi1sZWZ0OiA2My42MzYzNiU7XG4gIH1cbiAgLnB1c2hfeGxfOCB7XG4gICAgbWFyZ2luLWxlZnQ6IDcyLjcyNzI3JTtcbiAgfVxuICAucHVzaF94bF85IHtcbiAgICBtYXJnaW4tbGVmdDogODEuODE4MTglO1xuICB9XG4gIC5wdXNoX3hsXzEwIHtcbiAgICBtYXJnaW4tbGVmdDogOTAuOTA5MDklO1xuICB9XG59XG5cbmJvZHksXG5pbnB1dCxcbmJ1dHRvbiB7XG4gIGZvbnQtZmFtaWx5OiAnTGF0bycsIHNhbnMtc2VyaWY7XG59XG5cbi5sb2dvX3BhdGgge1xuICBmaWxsOiBjdXJyZW50Q29sb3I7XG59XG5cbi5zaXRlX2xvZ28ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uaGVhZGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNzBweDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDEwMDA7XG4gIGJhY2tncm91bmQ6ICNDMjAwMDA7XG59XG5cbi5oZWFkZXJfbG9nbyB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDFlbTtcbn1cblxuLmhlYWRlcl9sb2dvIGEge1xuICBoZWlnaHQ6IDcwcHg7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY29sb3I6ICNGRkZGRkY7XG59XG5cbi5oZWFkZXJfbG9nbyBhOmhvdmVyIHtcbiAgb3BhY2l0eTogMC43O1xufVxuXG4uaGVhZGVyX2xvZ28gc3ZnIHtcbiAgd2lkdGg6IDI2cHg7XG4gIGhlaWdodDogMzFweDtcbiAgbWFyZ2luLXJpZ2h0OiA3cHg7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OXB4KSB7XG4gIC5oZWFkZXJfbG9nbyB7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICB9XG4gIC5oZWFkZXJfbG9nbyBzdmcge1xuICAgIHdpZHRoOiAzNnB4O1xuICAgIGhlaWdodDogNDJweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDE0cHg7XG4gIH1cbn1cblxuLmhlYWRlcl9uYXZfYnV0dG9uIHtcbiAgd2lkdGg6IDMwcHg7XG4gIGhlaWdodDogNzBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LWluZGVudDogLTk5OTk5OXB4O1xuICB6LWluZGV4OiAxMDtcbn1cblxuLmhlYWRlcl9uYXZfYnV0dG9uIHNwYW4sIC5oZWFkZXJfbmF2X2J1dHRvbjpiZWZvcmUsIC5oZWFkZXJfbmF2X2J1dHRvbjphZnRlciB7XG4gIHdpZHRoOiAyNXB4O1xuICBoZWlnaHQ6IDJweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDM0cHg7XG4gIHJpZ2h0OiAwO1xuICBjb250ZW50OiBcIlwiO1xuICBiYWNrZ3JvdW5kOiAjRkZGRkZGO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjNzO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcbn1cblxuLmhlYWRlcl9uYXZfYnV0dG9uOmJlZm9yZSB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC05cHgpO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtOXB4KTtcbn1cblxuLmhlYWRlcl9uYXZfYnV0dG9uOmFmdGVyIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoOXB4KTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoOXB4KTtcbn1cblxuLm1lbnVfb3BlbiAuaGVhZGVyX25hdl9idXR0b24gc3BhbiB7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5tZW51X29wZW4gLmhlYWRlcl9uYXZfYnV0dG9uOmJlZm9yZSB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHJvdGF0ZSg0NWRlZyk7XG59XG5cbi5tZW51X29wZW4gLmhlYWRlcl9uYXZfYnV0dG9uOmFmdGVyIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgcm90YXRlKC00NWRlZyk7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHJvdGF0ZSgtNDVkZWcpO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCkge1xuICAuaGVhZGVyX25hdl9idXR0b24ge1xuICAgIHdpZHRoOiA3MHB4O1xuICB9XG4gIC5oZWFkZXJfbmF2X2J1dHRvbiBzcGFuLCAuaGVhZGVyX25hdl9idXR0b246YmVmb3JlLCAuaGVhZGVyX25hdl9idXR0b246YWZ0ZXIge1xuICAgIHdpZHRoOiAzMHB4O1xuICB9XG59XG5cbi5oZWFkZXJfbmF2X21lbnUge1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDAlKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMCUpO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjZzO1xuICB0cmFuc2l0aW9uOiBhbGwgMC42cztcbn1cblxuLm1lbnVfb3BlbiAuaGVhZGVyX25hdl9tZW51IHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xufVxuXG4ubWFpbl9uYXZfd3JhcHBlciB7XG4gIGJhY2tncm91bmQ6ICNDMjAwMDA7XG4gIGNvbG9yOiAjRkZGRkZGO1xufVxuXG4ubWFpbl9uYXZfd3JhcHBlciBoMiB7XG4gIGhlaWdodDogNzBweDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBwYWRkaW5nOiAyMHB4IDA7XG59XG5cbi5tYWluIHtcbiAgcGFkZGluZy10b3A6IDcwcHg7XG59XG5cbi5oZXJvX3dyYXBwZXIgKyAubWFpbiB7XG4gIHBhZGRpbmctdG9wOiAwO1xufVxuXG4uZm9vdGVyIHtcbiAgYmFja2dyb3VuZDogI0MyMDAwMDtcbiAgY29sb3I6ICNGRkZGRkY7XG59XG5cbi5mb290ZXIgYSB7XG4gIGNvbG9yOiAjRkZGRkZGO1xuICBwYWRkaW5nOiAwIDJweDtcbn1cblxuLmZvb3RlciBhOmhvdmVyIHtcbiAgb3BhY2l0eTogMC42O1xufVxuXG4uZm9vdGVyX3RvcCB7XG4gIHBhZGRpbmc6IDQ1cHggMCA2NHB4O1xufVxuXG4uZm9vdGVyX3RvcCwgLmZvb3Rlcl90b3AgcCwgLmZvb3Rlcl90b3AgaDMsIC5mb290ZXJfdG9wIGg0LCAuZm9vdGVyX3RvcCBoNSwgLmZvb3Rlcl90b3AgaDYge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjVlbTtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5mb290ZXJfdG9wIC5yb3cgPiBkaXYge1xuICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICB9XG59XG5cbi5mb290ZXJfYm90dG9tIHtcbiAgYmFja2dyb3VuZDogIzhGMDAwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBwYWRkaW5nOiAyMXB4IDA7XG59XG5cbi5mb290ZXJfdXRpbGl0eV9uYXYgdWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG4uZm9vdGVyX3V0aWxpdHlfbmF2IGxpIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4uZm9vdGVyX3V0aWxpdHlfbmF2IGxpICsgbGk6YmVmb3JlIHtcbiAgY29udGVudDogXCJ8XCI7XG59XG5cbi5mb290ZXJfbmF2IHVsIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvIGF1dG87XG4gIGdyaWQtZ2FwOiAxMHB4IDIwcHg7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuLmZvb3Rlcl9uYXYgbGkge1xuICBsaW5lLWhlaWdodDogMS4yZW07XG59XG5cbi5zY2hlbWFfbmFtZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMXB4IDFweCAxcHggMXB4KTtcbiAgY2xpcDogcmVjdCgxcHgsIDFweCwgMXB4LCAxcHgpO1xufVxuXG4uaGVyb193cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAwO1xufVxuXG4uaGVyb19pdGVtIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCkge1xuICAuaGVyb19pdGVtIHtcbiAgICBtYXgtaGVpZ2h0OiA2MDBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICB9XG59XG5cbi5oZXJvX2ltYWdlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAwO1xufVxuXG4uaGVyb19pbWFnZSBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmhlcm9fY29udGVudCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjlweCkge1xuICAuaGVyb19jb250ZW50IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICBib3R0b206IDEwcHg7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTQ0MHB4KSB7XG4gIC5oZXJvX2NvbnRlbnQge1xuICAgIGJvdHRvbTogMzZweDtcbiAgfVxufVxuXG4uaGVyb19jb3B5IHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZDogI0MyMDAwMDtcbiAgY29sb3I6ICNGRkZGRkY7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgcGFkZGluZzogMjBweDtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpIHtcbiAgLmhlcm9fY29weSB7XG4gICAgYmFja2dyb3VuZDogcmdiYSgxOTQsIDAsIDAsIDAuNzUpO1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkge1xuICAuaGVyb19jb3B5IHtcbiAgICBsZWZ0OiAtMjBweDtcbiAgICAtd2Via2l0LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAgICAgICAgICAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gICAgZm9udC1zaXplOiAzNnB4O1xuICB9XG59XG5cbi5oZXJvX2N0YSB7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAwMWVtO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgcGFkZGluZzogMTRweCAyMHB4O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuMztcbiAgdHJhbnNpdGlvbjogYWxsIDAuMztcbiAgYmFja2dyb3VuZDogcmdiYSgxOTQsIDAsIDAsIDAuOSk7XG4gIGNvbG9yOiAjRkZGRkZGO1xufVxuXG4uaGVyb19jdGE6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDE5NCwgMCwgMCwgMC42KTtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gIC5oZXJvX2N0YSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGxlZnQ6IC0yMHB4O1xuICB9XG59XG5cbi8qXG4gKiAgT3dsIENhcm91c2VsIC0gQ29yZVxuICovXG4ub3dsLWNhcm91c2VsIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgd2lkdGg6IDEwMCU7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC8qIHBvc2l0aW9uIHJlbGF0aXZlIGFuZCB6LWluZGV4IGZpeCB3ZWJraXQgcmVuZGVyaW5nIGZvbnRzIGlzc3VlICovXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLXN0YWdlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAtbXMtdG91Y2gtYWN0aW9uOiBwYW4tWTtcbiAgdG91Y2gtYWN0aW9uOiBtYW5pcHVsYXRpb247XG4gIC1tb3otYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAvKiBmaXggZmlyZWZveCBhbmltYXRpb24gZ2xpdGNoICovXG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC1zdGFnZTphZnRlciB7XG4gIGNvbnRlbnQ6IFwiLlwiO1xuICBkaXNwbGF5OiBibG9jaztcbiAgY2xlYXI6IGJvdGg7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIGhlaWdodDogMDtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLXN0YWdlLW91dGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICAvKiBmaXggZm9yIGZsYXNoaW5nIGJhY2tncm91bmQgKi9cbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDBweCwgMHB4LCAwcHgpO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtd3JhcHBlcixcbi5vd2wtY2Fyb3VzZWwgLm93bC1pdGVtIHtcbiAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIC1tb3otYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtbXMtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC1pdGVtIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtaW4taGVpZ2h0OiAxcHg7XG4gIGZsb2F0OiBsZWZ0O1xuICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgLXdlYmtpdC10b3VjaC1jYWxsb3V0OiBub25lO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtaXRlbSBpbWcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC1uYXYuZGlzYWJsZWQsXG4ub3dsLWNhcm91c2VsIC5vd2wtZG90cy5kaXNhYmxlZCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC1uYXYgLm93bC1wcmV2LFxuLm93bC1jYXJvdXNlbCAub3dsLW5hdiAub3dsLW5leHQsXG4ub3dsLWNhcm91c2VsIC5vd2wtZG90IHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xuICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xuICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XG4gIHVzZXItc2VsZWN0OiBub25lO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtbmF2IGJ1dHRvbi5vd2wtcHJldixcbi5vd2wtY2Fyb3VzZWwgLm93bC1uYXYgYnV0dG9uLm93bC1uZXh0LFxuLm93bC1jYXJvdXNlbCBidXR0b24ub3dsLWRvdCB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBib3JkZXI6IG5vbmU7XG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbiAgZm9udDogaW5oZXJpdDtcbn1cblxuLm93bC1jYXJvdXNlbC5vd2wtbG9hZGVkIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5vd2wtY2Fyb3VzZWwub3dsLWxvYWRpbmcge1xuICBvcGFjaXR5OiAwO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLm93bC1jYXJvdXNlbC5vd2wtaGlkZGVuIHtcbiAgb3BhY2l0eTogMDtcbn1cblxuLm93bC1jYXJvdXNlbC5vd2wtcmVmcmVzaCAub3dsLWl0ZW0ge1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59XG5cbi5vd2wtY2Fyb3VzZWwub3dsLWRyYWcgLm93bC1pdGVtIHtcbiAgLW1zLXRvdWNoLWFjdGlvbjogcGFuLXk7XG4gICAgICB0b3VjaC1hY3Rpb246IHBhbi15O1xuICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xuICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xuICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XG4gIHVzZXItc2VsZWN0OiBub25lO1xufVxuXG4ub3dsLWNhcm91c2VsLm93bC1ncmFiIHtcbiAgY3Vyc29yOiBtb3ZlO1xuICBjdXJzb3I6IC13ZWJraXQtZ3JhYjtcbiAgY3Vyc29yOiBncmFiO1xufVxuXG4ub3dsLWNhcm91c2VsLm93bC1ydGwge1xuICBkaXJlY3Rpb246IHJ0bDtcbn1cblxuLm93bC1jYXJvdXNlbC5vd2wtcnRsIC5vd2wtaXRlbSB7XG4gIGZsb2F0OiByaWdodDtcbn1cblxuLyogTm8gSnMgKi9cbi5uby1qcyAub3dsLWNhcm91c2VsIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiAgT3dsIENhcm91c2VsIC0gQW5pbWF0ZSBQbHVnaW5cbiAqL1xuLm93bC1jYXJvdXNlbCAuYW5pbWF0ZWQge1xuICAtd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjogMTAwMG1zO1xuICAgICAgICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMTAwMG1zO1xuICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLWFuaW1hdGVkLWluIHtcbiAgei1pbmRleDogMDtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLWFuaW1hdGVkLW91dCB7XG4gIHotaW5kZXg6IDE7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLmZhZGVPdXQge1xuICAtd2Via2l0LWFuaW1hdGlvbi1uYW1lOiBmYWRlT3V0O1xuICAgICAgICAgIGFuaW1hdGlvbi1uYW1lOiBmYWRlT3V0O1xufVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgZmFkZU91dCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBmYWRlT3V0IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuXG4vKlxuICogXHRPd2wgQ2Fyb3VzZWwgLSBBdXRvIEhlaWdodCBQbHVnaW5cbiAqL1xuLm93bC1oZWlnaHQge1xuICAtd2Via2l0LXRyYW5zaXRpb246IGhlaWdodCA1MDBtcyBlYXNlLWluLW91dDtcbiAgdHJhbnNpdGlvbjogaGVpZ2h0IDUwMG1zIGVhc2UtaW4tb3V0O1xufVxuXG4vKlxuICogXHRPd2wgQ2Fyb3VzZWwgLSBMYXp5IExvYWQgUGx1Z2luXG4gKi9cbi5vd2wtY2Fyb3VzZWwgLm93bC1pdGVtIHtcbiAgLyoqXG5cdFx0XHRUaGlzIGlzIGludHJvZHVjZWQgZHVlIHRvIGEgYnVnIGluIElFMTEgd2hlcmUgbGF6eSBsb2FkaW5nIGNvbWJpbmVkIHdpdGggYXV0b2hlaWdodCBwbHVnaW4gY2F1c2VzIGEgd3Jvbmdcblx0XHRcdGNhbGN1bGF0aW9uIG9mIHRoZSBoZWlnaHQgb2YgdGhlIG93bC1pdGVtIHRoYXQgYnJlYWtzIHBhZ2UgbGF5b3V0c1xuXHRcdCAqL1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtaXRlbSAub3dsLWxhenkge1xuICBvcGFjaXR5OiAwO1xuICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgNDAwbXMgZWFzZTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSA0MDBtcyBlYXNlO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtaXRlbSAub3dsLWxhenlbc3JjXj1cIlwiXSwgLm93bC1jYXJvdXNlbCAub3dsLWl0ZW0gLm93bC1sYXp5Om5vdChbc3JjXSkge1xuICBtYXgtaGVpZ2h0OiAwO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtaXRlbSBpbWcub3dsLWxhenkge1xuICAtd2Via2l0LXRyYW5zZm9ybS1zdHlsZTogcHJlc2VydmUtM2Q7XG4gICAgICAgICAgdHJhbnNmb3JtLXN0eWxlOiBwcmVzZXJ2ZS0zZDtcbn1cblxuLypcbiAqIFx0T3dsIENhcm91c2VsIC0gVmlkZW8gUGx1Z2luXG4gKi9cbi5vd2wtY2Fyb3VzZWwgLm93bC12aWRlby13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQ6ICMwMDA7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC12aWRlby1wbGF5LWljb24ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGhlaWdodDogODBweDtcbiAgd2lkdGg6IDgwcHg7XG4gIGxlZnQ6IDUwJTtcbiAgdG9wOiA1MCU7XG4gIG1hcmdpbi1sZWZ0OiAtNDBweDtcbiAgbWFyZ2luLXRvcDogLTQwcHg7XG4gIGJhY2tncm91bmQ6IHVybChcIm93bC52aWRlby5wbGF5LnBuZ1wiKSBuby1yZXBlYXQ7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgei1pbmRleDogMTtcbiAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMTAwbXMgZWFzZTtcbiAgdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMTAwbXMgZWFzZTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDEwMG1zIGVhc2U7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAxMDBtcyBlYXNlLCAtd2Via2l0LXRyYW5zZm9ybSAxMDBtcyBlYXNlO1xufVxuXG4ub3dsLWNhcm91c2VsIC5vd2wtdmlkZW8tcGxheS1pY29uOmhvdmVyIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEuMywgMS4zKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMywgMS4zKTtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLXZpZGVvLXBsYXlpbmcgLm93bC12aWRlby10bixcbi5vd2wtY2Fyb3VzZWwgLm93bC12aWRlby1wbGF5aW5nIC5vd2wtdmlkZW8tcGxheS1pY29uIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLm93bC1jYXJvdXNlbCAub3dsLXZpZGVvLXRuIHtcbiAgb3BhY2l0eTogMDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSA0MDBtcyBlYXNlO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDQwMG1zIGVhc2U7XG59XG5cbi5vd2wtY2Fyb3VzZWwgLm93bC12aWRlby1mcmFtZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLypcbiAqIFx0RGVmYXVsdCB0aGVtZSAtIE93bCBDYXJvdXNlbCBDU1MgRmlsZVxuICovXG4ub3dsLXRoZW1lIC5vd2wtbmF2IHtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4ub3dsLXRoZW1lIC5vd2wtbmF2IFtjbGFzcyo9J293bC0nXSB7XG4gIGNvbG9yOiAjRkZGO1xuICBmb250LXNpemU6IDE0cHg7XG4gIG1hcmdpbjogNXB4O1xuICBwYWRkaW5nOiA0cHggN3B4O1xuICBiYWNrZ3JvdW5kOiAjRDZENkQ2O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xufVxuXG4ub3dsLXRoZW1lIC5vd2wtbmF2IFtjbGFzcyo9J293bC0nXTpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICM4Njk3OTE7XG4gIGNvbG9yOiAjRkZGO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5vd2wtdGhlbWUgLm93bC1uYXYgLmRpc2FibGVkIHtcbiAgb3BhY2l0eTogMC41O1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi5vd2wtdGhlbWUgLm93bC1uYXYuZGlzYWJsZWQgKyAub3dsLWRvdHMge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4ub3dsLXRoZW1lIC5vd2wtZG90cyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLm93bC10aGVtZSAub3dsLWRvdHMgLm93bC1kb3Qge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHpvb206IDE7XG4gICpkaXNwbGF5OiBpbmxpbmU7XG59XG5cbi5vd2wtdGhlbWUgLm93bC1kb3RzIC5vd2wtZG90IHNwYW4ge1xuICB3aWR0aDogMTBweDtcbiAgaGVpZ2h0OiAxMHB4O1xuICBtYXJnaW46IDVweCA3cHg7XG4gIGJhY2tncm91bmQ6ICNENkQ2RDY7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IHZpc2libGU7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAyMDBtcyBlYXNlO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDIwMG1zIGVhc2U7XG4gIGJvcmRlci1yYWRpdXM6IDMwcHg7XG59XG5cbi5vd2wtdGhlbWUgLm93bC1kb3RzIC5vd2wtZG90LmFjdGl2ZSBzcGFuLCAub3dsLXRoZW1lIC5vd2wtZG90cyAub3dsLWRvdDpob3ZlciBzcGFuIHtcbiAgYmFja2dyb3VuZDogIzg2OTc5MTtcbn1cblxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWJXRnBiaTVqYzNNaUxDSnpiM1Z5WTJWeklqcGJJbTFoYVc0dWMyTnpjeUlzSWw5MllYSnBZV0pzWlhNdWMyTnpjeUlzSWw5elpYUjFjQzV6WTNOeklpd2lYMjFwZUdsdWN5NXpZM056SWl3aVgyZHlhV1F1YzJOemN5SXNJbDkwZVhCbExuTmpjM01pTENKZmJHOW5ieTV6WTNOeklpd2lYMmhsWVdSbGNpNXpZM056SWl3aVgyNWhkaTV6WTNOeklpd2lYMk52Ym5SbGJuUXVjMk56Y3lJc0lsOW1iMjkwWlhJdWMyTnpjeUlzSWw5aWJHOWphMTlqYjI1MFlXTjBMbk5qYzNNaUxDSmZZbXh2WTJ0ZmFHVnlieTV6WTNOeklpd2lMaTR2TGk0dmJtOWtaVjl0YjJSMWJHVnpMMjkzYkM1allYSnZkWE5sYkM5emNtTXZjMk56Y3k5dmQyd3VZMkZ5YjNWelpXd3VjMk56Y3lJc0lpNHVMeTR1TDI1dlpHVmZiVzlrZFd4bGN5OXZkMnd1WTJGeWIzVnpaV3d2YzNKakwzTmpjM012WDJOdmNtVXVjMk56Y3lJc0lpNHVMeTR1TDI1dlpHVmZiVzlrZFd4bGN5OXZkMnd1WTJGeWIzVnpaV3d2YzNKakwzTmpjM012WDJGdWFXMWhkR1V1YzJOemN5SXNJaTR1THk0dUwyNXZaR1ZmYlc5a2RXeGxjeTl2ZDJ3dVkyRnliM1Z6Wld3dmMzSmpMM05qYzNNdlgyRjFkRzlvWldsbmFIUXVjMk56Y3lJc0lpNHVMeTR1TDI1dlpHVmZiVzlrZFd4bGN5OXZkMnd1WTJGeWIzVnpaV3d2YzNKakwzTmpjM012WDJ4aGVubHNiMkZrTG5OamMzTWlMQ0l1TGk4dUxpOXViMlJsWDIxdlpIVnNaWE12YjNkc0xtTmhjbTkxYzJWc0wzTnlZeTl6WTNOekwxOTJhV1JsYnk1elkzTnpJaXdpTGk0dkxpNHZibTlrWlY5dGIyUjFiR1Z6TDI5M2JDNWpZWEp2ZFhObGJDOXpjbU12YzJOemN5OXZkMnd1ZEdobGJXVXVaR1ZtWVhWc2RDNXpZM056SWl3aUxpNHZMaTR2Ym05a1pWOXRiMlIxYkdWekwyOTNiQzVqWVhKdmRYTmxiQzl6Y21NdmMyTnpjeTlmZEdobGJXVXVaR1ZtWVhWc2RDNXpZM056SWl3aUxpNHZMaTR2Ym05a1pWOXRiMlIxYkdWekwyOTNiQzVqWVhKdmRYTmxiQzl6Y21NdmMyTnpjeTlmZEdobGJXVXVjMk56Y3lKZExDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SkFhVzF3YjNKMElGd2lkbUZ5YVdGaWJHVnpYQ0k3WEc1QWFXMXdiM0owSUZ3aWMyVjBkWEJjSWp0Y2JrQnBiWEJ2Y25RZ1hDSnRhWGhwYm5OY0lqdGNia0JwYlhCdmNuUWdYQ0puY21sa1hDSTdYRzVBYVcxd2IzSjBJRndpZEhsd1pWd2lPMXh1UUdsdGNHOXlkQ0JjSW14dloyOWNJanRjYmtCcGJYQnZjblFnWENKb1pXRmtaWEpjSWp0Y2JrQnBiWEJ2Y25RZ1hDSnVZWFpjSWp0Y2JrQnBiWEJ2Y25RZ1hDSmpiMjUwWlc1MFhDSTdYRzVBYVcxd2IzSjBJRndpWm05dmRHVnlYQ0k3WEc1Y2JpOHZJRUpzYjJOcmMxeHVRR2x0Y0c5eWRDQmNJbUpzYjJOclgyTnZiblJoWTNSY0lqdGNia0JwYlhCdmNuUWdYQ0ppYkc5amExOW9aWEp2WENJN1hHNWNiaTh2SUVSbGNHVnVaR1Z1WTJsbGMxeHVRR2x0Y0c5eWRDQmNJaTR1THk0dUwyNXZaR1ZmYlc5a2RXeGxjeTl2ZDJ3dVkyRnliM1Z6Wld3dmMzSmpMM05qYzNNdmIzZHNMbU5oY205MWMyVnNMbk5qYzNOY0lqdGNia0JwYlhCdmNuUWdYQ0l1TGk4dUxpOXViMlJsWDIxdlpIVnNaWE12YjNkc0xtTmhjbTkxYzJWc0wzTnlZeTl6WTNOekwyOTNiQzUwYUdWdFpTNWtaV1poZFd4MExuTmpjM05jSWp0Y2JpSXNJaVJ6Y0dWbFpEb2dNQzR6Y3p0Y2JseHVMeThnUTI5c2IzSnpYRzRrY21Wa09pQWpRekl3TURBd08xeHVKSEpsWkY5a2F6b2dJemhHTURBd01EdGNibHh1Skhkb2FYUmxPaUFqUmtaR1JrWkdPMXh1SkdKc1lXTnJPaUFqTURBd01EQXdPMXh1WEc0dkx5QkdiMjUwSUZkbGFXZG9kSE5jYmlSc2FXZG9kRG9nTXpBd08xeHVKRzV2Y20xaGJEb2dOREF3TzF4dUpHSnZiR1E2SURjd01EdGNibHh1THk4Z1RXVmthV0VnVVhWbGNtbGxjMXhjWEc0a2JXbHVVMDA2SUZ3aWMyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUEwTWpad2VDbGNJanRjYmlSdGFXNU5SRG9nWENKelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJRGMyT1hCNEtWd2lPMXh1SkcxcGJreEhPaUJjSW5OamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dNVEF5TlhCNEtWd2lPMXh1SkcxcGJsaE1PaUJjSW5OamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dNVFEwTUhCNEtWd2lPMXh1WEc0a2JXRjRVMDA2SUZ3aWMyTnlaV1Z1SUdGdVpDQW9iV0Y0TFhkcFpIUm9PaUEwTWpWd2VDbGNJanRjYmlSdFlYaE5SRG9nWENKelkzSmxaVzRnWVc1a0lDaHRZWGd0ZDJsa2RHZzZJRGMyT0hCNEtWd2lPMXh1SkcxaGVFeEhPaUJjSW5OamNtVmxiaUJoYm1RZ0tHMWhlQzEzYVdSMGFEb2dNVEF5TkhCNEtWd2lPMXh1SkcxaGVGaE1PaUJjSW5OamNtVmxiaUJoYm1RZ0tHMWhlQzEzYVdSMGFEb2dNVFF6T1hCNEtWd2lPMXh1WEc0a2FHVmhaR1Z5U0dWcFoyaDBPaUEzTUhCNE8xeHVJaXdpS2lCN1hHNGdJRzFoY21kcGJqb2dNRHRjYmlBZ2NHRmtaR2x1WnpvZ01EdGNiaUFnYjNWMGJHbHVaVG9nYm05dVpUdGNiaUFnWW05eVpHVnlPaUF3TzF4dUlDQmliM2d0YzJsNmFXNW5PaUJpYjNKa1pYSXRZbTk0TzF4dWZWeHVYRzVoSUh0Y2JpQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsTzF4dUlDQjBjbUZ1YzJsMGFXOXVPaUJoYkd3Z0pITndaV1ZrTzF4dWZWeHVYRzR1Y0dGblpWOTNjbUZ3Y0dWeUlIdGNiaUFnYldsdUxXaGxhV2RvZERvZ01UQXdkbWc3WEc0Z0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCamIyeDFiVzQ3WEc1Y2JpQWdQaUJ0WVdsdUlIdGNiaUFnSUNCbWJHVjRMV2R5YjNjNklERTdYRzRnSUgxY2JuMWNiaUlzSWtCdGFYaHBiaUIyYVhOMVlXeHNlVjlvYVdSbElIdGNiaUFnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQjNhV1IwYURvZ01YQjRPMXh1SUNCb1pXbG5hSFE2SURGd2VEdGNiaUFnYjNabGNtWnNiM2M2SUdocFpHUmxianRjYmlBZ1kyeHBjRG9nY21WamRDZ3hjSGdnTVhCNElERndlQ0F4Y0hncE8xeHVJQ0JqYkdsd09pQnlaV04wS0RGd2VDd2dNWEI0TENBeGNIZ3NJREZ3ZUNrN1hHNTlYRzVjYmtCdGFYaHBiaUJwYldkZllteHZZMnNnZTF4dUlDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ2FHVnBaMmgwT2lCaGRYUnZPMXh1SUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYm4xY2JseHVMeThnVkhsd1pWeHVRRzFwZUdsdUlHWjNYMnhwWjJoMElIdGNiaUFnWm05dWRDMTNaV2xuYUhRNklETXdNRHRjYm4xY2JseHVRRzFwZUdsdUlHWjNYM0psWnlCN1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lBME1EQTdYRzU5WEc1Y2JrQnRhWGhwYmlCbWQxOWliMnhrSUh0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SURjd01EdGNibjFjYmx4dVFHMXBlR2x1SUd4bGRIUmxjbk53WVdObEtDUjBjbUZqYXpvZ01Da2dlMXh1SUNCc1pYUjBaWEl0YzNCaFkybHVaem9nS0NSMGNtRmpheUF2SURFd01EQXBJQ29nTVdWdE8xeHVmVnh1WEc1Y2JpOHZJRUoxZEhSdmJuTmNia0J0YVhocGJpQmlkRzVmWW1GelpTQjdYRzRnSUVCcGJtTnNkV1JsSUdaM1gyeHBaMmgwTzF4dUlDQkFhVzVqYkhWa1pTQnNaWFIwWlhKemNHRmpaU2d4S1R0Y2JpQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yTzF4dUlDQm1iMjUwTFhOcGVtVTZJREU0Y0hnN1hHNGdJSEJoWkdScGJtYzZJREUwY0hnZ0pHZDFkSFJsY2p0Y2JpQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsTzF4dUlDQjBaWGgwTFhSeVlXNXpabTl5YlRvZ2RYQndaWEpqWVhObE8xeHVJQ0IwY21GdWMybDBhVzl1T2lCaGJHd2dNQzR6TzF4dWZWeHVYRzVBYldsNGFXNGdZblJ1WDNKbGRtVnljMlVnZTF4dUlDQkFhVzVqYkhWa1pTQmlkRzVmWW1GelpUdGNiaUFnWW1GamEyZHliM1Z1WkRvZ2NtZGlZU2drY21Wa0xEQXVPU2s3WEc0Z0lHTnZiRzl5T2lBa2QyaHBkR1U3WEc1Y2JpQWdKanBvYjNabGNpQjdYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2djbWRpWVNna2NtVmtMREF1TmlrN1hHNGdJSDFjYm4xY2JpSXNJaThxSUVkU1NVUWdLaTljYmlSamIyeDFiVzV6T2lBeE1UdGNiaVJqYjJ4MWJXNXpUVVE2SURRN1hHNGtZMjlzZFcxdWMxTk5PaUF5TzF4dUpHZDFkSFJsY2pvZ01qQndlRHRjYmlSdFlYZ3RkMmxrZEdnNklERTBNREJ3ZUR0Y2JseHVMbkp2ZHlCN1hHNGdJRzFoZUMxM2FXUjBhRG9nSkcxaGVDMTNhV1IwYUR0Y2JseHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0JtYkdWNExYZHlZWEE2SUhkeVlYQTdYRzVjYmlBZ2JXRnlaMmx1T2lCaGRYUnZPMXh1SUNCd1lXUmthVzVuT2lBd0lDUm5kWFIwWlhJZ0x5QXlPMXh1ZlZ4dVhHNHVjM0JoWTJWZlltVjBkMlZsYmlCN1hHNGdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2djM0JoWTJVdFltVjBkMlZsYmp0Y2JuMWNibHh1TG1Gc2FXZHVYMk5sYm5SbGNpQjdYRzRnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hHNTlYRzVjYmx0amJHRnpjMTQ5WENKamIyeGNJbDBnZTF4dUlDQXZMMlpzWlhndFozSnZkem9nTVR0Y2JpQWdjR0ZrWkdsdVp6b2dNQ0FrWjNWMGRHVnlJQzhnTWp0Y2JuMWNibHh1THlvZ1IyVnVaWEpoYkNBcUwxeHVRR1p2Y2lBa2FTQm1jbTl0SURFZ2RHaHliM1ZuYUNBa1kyOXNkVzF1Y3lCN1hHNGdJQzVqYjJ4Zkkzc2thWDBnZTF4dUlDQWdJSGRwWkhSb09pQW9KR2tnTHlBa1kyOXNkVzF1Y3lrZ0tpQXhNREFsTzF4dUlDQjlYRzU5WEc1Y2JrQm1iM0lnSkdrZ1puSnZiU0F3SUhSb2NtOTFaMmdnSkdOdmJIVnRibk1nTFNBeElIdGNiaUFnTG5CMWMyaGZJM3NrYVgwZ2UxeHVJQ0FnSUcxaGNtZHBiaTFzWldaME9pQW9KR2tnTHlBa1kyOXNkVzF1Y3lrZ0tpQXhNREFsTzF4dUlDQjlYRzU5WEc1Y2JpOHFJRkJvYjI1bElDb3ZYRzVBYldWa2FXRWdJM3NrYldGNFUwMTlJSHRjYmlBZ1FHWnZjaUFrYVNCbWNtOXRJREVnZEdoeWIzVm5hQ0FrWTI5c2RXMXVjMU5OSUh0Y2JpQWdJQ0F1WTI5c1gzTnRYeU43SkdsOUlIdGNiaUFnSUNBZ0lIZHBaSFJvT2lBb0pHa2dMeUFrWTI5c2RXMXVjMU5OS1NBcUlERXdNQ1U3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnUUdadmNpQWthU0JtY205dElEQWdkR2h5YjNWbmFDQWtZMjlzZFcxdWMxTk5JQzBnTVNCN1hHNGdJQ0FnTG5CMWMyaGZjMjFmSTNza2FYMGdlMXh1SUNBZ0lDQWdiV0Z5WjJsdUxXeGxablE2SUNna2FTQXZJQ1JqYjJ4MWJXNXpVMDBwSUNvZ01UQXdKVHRjYmlBZ0lDQjlYRzRnSUgxY2JuMWNibHh1THlvZ1ZHRmliR1YwSUNvdlhHNUFiV1ZrYVdFZ0kzc2tiV2x1VTAxOUlIdGNiaUFnUUdadmNpQWthU0JtY205dElERWdkR2h5YjNWbmFDQWtZMjlzZFcxdWMwMUVJSHRjYmlBZ0lDQXVZMjlzWDIxa1h5TjdKR2w5SUh0Y2JpQWdJQ0FnSUhkcFpIUm9PaUFvSkdrZ0x5QWtZMjlzZFcxdWMwMUVLU0FxSURFd01DVTdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdRR1p2Y2lBa2FTQm1jbTl0SURBZ2RHaHliM1ZuYUNBa1kyOXNkVzF1YzAxRUlDMGdNU0I3WEc0Z0lDQWdMbkIxYzJoZmJXUmZJM3NrYVgwZ2UxeHVJQ0FnSUNBZ2JXRnlaMmx1TFd4bFpuUTZJQ2drYVNBdklDUmpiMngxYlc1elRVUXBJQ29nTVRBd0pUdGNiaUFnSUNCOVhHNGdJSDFjYm4xY2JseHVMeW9nVEdGd2RHOXdJQ292WEc1QWJXVmthV0VnSTNza2JXbHVUVVI5SUh0Y2JpQWdRR1p2Y2lBa2FTQm1jbTl0SURFZ2RHaHliM1ZuYUNBa1kyOXNkVzF1Y3lCN1hHNGdJQ0FnTG1OdmJGOXNaMThqZXlScGZTQjdYRzRnSUNBZ0lDQjNhV1IwYURvZ0tDUnBJQzhnSkdOdmJIVnRibk1wSUNvZ01UQXdKVHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0JBWm05eUlDUnBJR1p5YjIwZ01DQjBhSEp2ZFdkb0lDUmpiMngxYlc1eklDMGdNU0I3WEc0Z0lDQWdMbkIxYzJoZmJHZGZJM3NrYVgwZ2UxeHVJQ0FnSUNBZ2JXRnlaMmx1TFd4bFpuUTZJQ2drYVNBdklDUmpiMngxYlc1ektTQXFJREV3TUNVN1hHNGdJQ0FnZlZ4dUlDQjlYRzU5WEc1Y2JpOHFJRVJsYzJ0MGIzQWdLaTljYmtCdFpXUnBZU0FqZXlSdGFXNU1SMzBnZTF4dUlDQkFabTl5SUNScElHWnliMjBnTVNCMGFISnZkV2RvSUNSamIyeDFiVzV6SUh0Y2JpQWdJQ0F1WTI5c1gzaHNYeU43SkdsOUlIdGNiaUFnSUNBZ0lIZHBaSFJvT2lBb0pHa2dMeUFrWTI5c2RXMXVjeWtnS2lBeE1EQWxPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJRUJtYjNJZ0pHa2dabkp2YlNBd0lIUm9jbTkxWjJnZ0pHTnZiSFZ0Ym5NZ0xTQXhJSHRjYmlBZ0lDQXVjSFZ6YUY5NGJGOGpleVJwZlNCN1hHNGdJQ0FnSUNCdFlYSm5hVzR0YkdWbWREb2dLQ1JwSUM4Z0pHTnZiSFZ0Ym5NcElDb2dNVEF3SlR0Y2JpQWdJQ0I5WEc0Z0lIMWNibjFjYmx4dUx5OGdhSFIwY0hNNkx5OWtaWFpsYkc5d1pYSXViVzk2YVd4c1lTNXZjbWN2Wlc0dFZWTXZaRzlqY3k5WFpXSXZRMU5UTDBOVFUxOUhjbWxrWDB4aGVXOTFkQzlTWldGc2FYcHBibWRmWTI5dGJXOXVYMnhoZVc5MWRITmZkWE5wYm1kZlExTlRYMGR5YVdSZlRHRjViM1YwWEc0aUxDSkFhVzF3YjNKMElIVnliQ2duYUhSMGNITTZMeTltYjI1MGN5NW5iMjluYkdWaGNHbHpMbU52YlM5amMzTS9abUZ0YVd4NVBVeGhkRzg2TXpBd0xEUXdNQ3cwTURCcExEY3dNQ2NwTzF4dVltOWtlU3hjYm1sdWNIVjBMRnh1WW5WMGRHOXVJSHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJQ2RNWVhSdkp5d2djMkZ1Y3kxelpYSnBaanRjYm4xY2JpSXNJaTVzYjJkdlgzQmhkR2dnZTF4dUlDQm1hV3hzT2lCamRYSnlaVzUwUTI5c2IzSTdYRzU5WEc1Y2JpNXphWFJsWDJ4dloyOGdlMXh1SUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1ZlZ4dUlpd2lYRzR1YUdWaFpHVnlJSHRjYmlBZ2QybGtkR2c2SURFd01DVTdYRzRnSUdobGFXZG9kRG9nSkdobFlXUmxja2hsYVdkb2REdGNibHh1SUNCd2IzTnBkR2x2YmpvZ1ptbDRaV1E3WEc0Z0lIUnZjRG9nTUR0Y2JpQWdiR1ZtZERvZ01EdGNiaUFnZWkxcGJtUmxlRG9nTVRBd01EdGNibHh1SUNCaVlXTnJaM0p2ZFc1a09pQWtjbVZrTzF4dWZWeHVYRzR1YUdWaFpHVnlYMnh2WjI4Z2UxeHVJQ0JtYjI1MExYTnBlbVU2SURFMmNIZzdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXhaVzA3WEc1Y2JpQWdZU0I3WEc0Z0lDQWdhR1ZwWjJoME9pQWthR1ZoWkdWeVNHVnBaMmgwTzF4dVhHNGdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnSUNCaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHVYRzRnSUNBZ1kyOXNiM0k2SUNSM2FHbDBaVHRjYmx4dUlDQWdJQ1k2YUc5MlpYSWdlMXh1SUNBZ0lDQWdiM0JoWTJsMGVUb2dNQzQzTzF4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUhOMlp5QjdYRzRnSUNBZ2QybGtkR2c2SURJMmNIZzdYRzRnSUNBZ2FHVnBaMmgwT2lBek1YQjRPMXh1SUNBZ0lHMWhjbWRwYmkxeWFXZG9kRG9nTjNCNE8xeHVJQ0I5WEc1Y2JpQWdRRzFsWkdsaElDTjdKRzFwYmsxRWZTQjdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXlOSEI0TzF4dVhHNGdJQ0FnYzNabklIdGNiaUFnSUNBZ0lIZHBaSFJvT2lBek5uQjRPMXh1SUNBZ0lDQWdhR1ZwWjJoME9pQTBNbkI0TzF4dUlDQWdJQ0FnYldGeVoybHVMWEpwWjJoME9pQXhOSEI0TzF4dUlDQWdJSDFjYmlBZ2ZWeHVmVnh1SWl3aUxtaGxZV1JsY2w5dVlYWmZZblYwZEc5dUlIdGNiaUFnZDJsa2RHZzZJRE13Y0hnN1hHNGdJR2hsYVdkb2REb2dKR2hsWVdSbGNraGxhV2RvZER0Y2JseHVJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc1Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dkSEpoYm5Od1lYSmxiblE3WEc0Z0lHTjFjbk52Y2pvZ2NHOXBiblJsY2p0Y2JpQWdiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNiaUFnZEdWNGRDMXBibVJsYm5RNklDMDVPVGs1T1Rsd2VEdGNiaUFnZWkxcGJtUmxlRG9nTVRBN1hHNWNiaUFnYzNCaGJpeGNiaUFnSmpwaVpXWnZjbVVzWEc0Z0lDWTZZV1owWlhJZ2UxeHVJQ0FnSUhkcFpIUm9PaUF5TlhCNE8xeHVJQ0FnSUdobGFXZG9kRG9nTW5CNE8xeHVYRzRnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUhSdmNEb2dNelJ3ZUR0Y2JpQWdJQ0J5YVdkb2REb2dNRHRjYmx4dUlDQWdJR052Ym5SbGJuUTZJRndpWENJN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ0pIZG9hWFJsTzF4dUlDQWdJSFJ5WVc1emFYUnBiMjQ2SUdGc2JDQWtjM0JsWldRN1hHNGdJSDFjYmx4dUlDQW1PbUpsWm05eVpTQjdYRzRnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVlpLQzA1Y0hncE8xeHVJQ0I5WEc1Y2JpQWdKanBoWm5SbGNpQjdYRzRnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVlpLRGx3ZUNrN1hHNGdJSDFjYmx4dUlDQXViV1Z1ZFY5dmNHVnVJQ1lnZTF4dUlDQWdJSE53WVc0Z2UxeHVJQ0FnSUNBZ2IzQmhZMmwwZVRvZ01EdGNiaUFnSUNCOVhHNWNiaUFnSUNBbU9tSmxabTl5WlNCN1hHNGdJQ0FnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWa29NQ2tnY205MFlYUmxLRFExWkdWbktUdGNiaUFnSUNCOVhHNWNiaUFnSUNBbU9tRm1kR1Z5SUh0Y2JpQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdTZ3dLU0J5YjNSaGRHVW9MVFExWkdWbktUdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQkFiV1ZrYVdFZ0kzc2tiV2x1VFVSOUlIdGNiaUFnSUNCM2FXUjBhRG9nSkdobFlXUmxja2hsYVdkb2REdGNibHh1SUNBZ0lITndZVzRzWEc0Z0lDQWdKanBpWldadmNtVXNYRzRnSUNBZ0pqcGhablJsY2lCN1hHNGdJQ0FnSUNCM2FXUjBhRG9nTXpCd2VEdGNiaUFnSUNCOVhHNGdJSDFjYm4xY2JseHVYRzR1YUdWaFpHVnlYMjVoZGw5dFpXNTFJSHRjYmlBZ2QybGtkR2c2SURFd01DVTdYRzVjYmlBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0IwYjNBNklEQTdYRzRnSUd4bFpuUTZJREE3WEc1Y2JpQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZaS0MweE1EQWxLVHRjYmlBZ2RISmhibk5wZEdsdmJqb2dZV3hzSUNSemNHVmxaQ0FxSURJN1hHNWNiaUFnTG0xbGJuVmZiM0JsYmlBbUlIdGNiaUFnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWa29NQ2s3WEc0Z0lIMWNibjFjYmx4dVhHNHViV0ZwYmw5dVlYWmZkM0poY0hCbGNpQjdYRzRnSUdKaFkydG5jbTkxYm1RNklDUnlaV1E3WEc0Z0lHTnZiRzl5T2lBa2QyaHBkR1U3WEc1Y2JpQWdhRElnZTF4dUlDQWdJR2hsYVdkb2REb2dKR2hsWVdSbGNraGxhV2RvZER0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURJMGNIZzdYRzRnSUNBZ2NHRmtaR2x1WnpvZ01qQndlQ0F3TzF4dUlDQjlYRzU5WEc0aUxDSXViV0ZwYmlCN1hHNGdJSEJoWkdScGJtY3RkRzl3T2lBa2FHVmhaR1Z5U0dWcFoyaDBPMXh1WEc0Z0lDNW9aWEp2WDNkeVlYQndaWElnS3lBbUlIdGNiaUFnSUNCd1lXUmthVzVuTFhSdmNEb2dNRHRjYmlBZ2ZWeHVmVnh1SWl3aUxtWnZiM1JsY2lCN1hHNGdJR0poWTJ0bmNtOTFibVE2SUNSeVpXUTdYRzRnSUdOdmJHOXlPaUFrZDJocGRHVTdYRzVjYmlBZ1lTQjdYRzRnSUNBZ1kyOXNiM0k2SUNSM2FHbDBaVHRjYmlBZ0lDQndZV1JrYVc1bk9pQXdJREp3ZUR0Y2JseHVJQ0FnSUNZNmFHOTJaWElnZTF4dUlDQWdJQ0FnYjNCaFkybDBlVG9nTUM0Mk8xeHVJQ0FnSUgxY2JpQWdmVnh1ZlZ4dVhHNHVabTl2ZEdWeVgzUnZjQ0I3WEc0Z0lDWXNjQ3hvTXl4b05DeG9OU3hvTmlCN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBeE5uQjRPMXh1SUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUFrYm05eWJXRnNPMXh1SUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF4TGpWbGJUdGNiaUFnZlZ4dVhHNGdJSEJoWkdScGJtYzZJRFExY0hnZ01DQTJOSEI0TzF4dVhHNGdJRUJ0WldScFlTQWpleVJ0WVhoTVIzMGdlMXh1SUNBZ0lDNXliM2NnUGlCa2FYWWdlMXh1SUNBZ0lDQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklDUm5kWFIwWlhJN1hHNGdJQ0FnZlZ4dUlDQjlYRzU5WEc1Y2JpNW1iMjkwWlhKZlltOTBkRzl0SUh0Y2JpQWdZbUZqYTJkeWIzVnVaRG9nSkhKbFpGOWthenRjYmlBZ1ptOXVkQzF6YVhwbE9pQXhOSEI0TzF4dUlDQndZV1JrYVc1bk9pQXlNWEI0SURBN1hHNTlYRzVjYmk1bWIyOTBaWEpmZFhScGJHbDBlVjl1WVhZZ2UxeHVJQ0IxYkNCN1hHNGdJQ0FnYkdsemRDMXpkSGxzWlRvZ2JtOXVaVHRjYmlBZ2ZWeHVYRzRnSUd4cElIdGNiaUFnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYRzVjYmlBZ0lDQXJJR3hwT21KbFptOXlaU0I3WEc0Z0lDQWdJQ0JqYjI1MFpXNTBPaUJjSW54Y0lqdGNiaUFnSUNCOVhHNGdJSDFjYm4xY2JseHVMbVp2YjNSbGNsOXVZWFlnZTF4dUlDQjFiQ0I3WEc0Z0lDQWdaR2x6Y0d4aGVUb2daM0pwWkR0Y2JpQWdJQ0JuY21sa0xYUmxiWEJzWVhSbExXTnZiSFZ0Ym5NNklHRjFkRzhnWVhWMGJ6dGNiaUFnSUNCbmNtbGtMV2RoY0RvZ0pHZDFkSFJsY2lBdklESWdKR2QxZEhSbGNqdGNibHh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNVFp3ZUR0Y2JpQWdJQ0JtYjI1MExYZGxhV2RvZERvZ0pHeHBaMmgwTzF4dUlDQWdJR3hwYzNRdGMzUjViR1U2SUc1dmJtVTdYRzRnSUNBZ2RHVjRkQzEwY21GdWMyWnZjbTA2SUhWd2NHVnlZMkZ6WlR0Y2JpQWdmVnh1WEc0Z0lHeHBJSHRjYmlBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTVM0eVpXMDdYRzRnSUgxY2JuMWNiaUlzSWk1elkyaGxiV0ZmYm1GdFpTQjdYRzRnSUVCcGJtTnNkV1JsSUhacGMzVmhiR3g1WDJocFpHVTdYRzU5WEc0aUxDSXVhR1Z5YjE5M2NtRndjR1Z5SUh0Y2JpQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNCNkxXbHVaR1Y0T2lBd08xeHVmVnh1WEc0dWFHVnlieUI3WEc1Y2JuMWNibHh1TG1obGNtOWZhWFJsYlNCN1hHNGdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ1FHMWxaR2xoSUNON0pHMXBiazFFZlNCN1hHNGdJQ0FnYldGNExXaGxhV2RvZERvZ05qQXdjSGc3WEc0Z0lDQWdiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNiaUFnZlZ4dWZWeHVYRzR1YUdWeWIxOXBiV0ZuWlNCN1hHNGdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ2VpMXBibVJsZURvZ01EdGNibHh1SUNCcGJXY2dlMXh1SUNBZ0lFQnBibU5zZFdSbElHbHRaMTlpYkc5amF6dGNiaUFnZlZ4dWZWeHVYRzR1YUdWeWIxOWpiMjUwWlc1MElIdGNiaUFnZDJsa2RHZzZJREV3TUNVN1hHNWNiaUFnUUcxbFpHbGhJQ043SkcxcGJrMUVmU0I3WEc0Z0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lHeGxablE2SURBN1hHNGdJQ0FnWW05MGRHOXRPaUF4TUhCNE8xeHVJQ0I5WEc1Y2JpQWdRRzFsWkdsaElDTjdKRzFwYmxoTWZTQjdYRzRnSUNBZ1ltOTBkRzl0T2lBek5uQjRPMXh1SUNCOVhHNTlYRzVjYmk1b1pYSnZYMk52Y0hrZ2UxeHVJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JseHVJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc1Y2JpQWdZbUZqYTJkeWIzVnVaRG9nSkhKbFpEdGNiaUFnWTI5c2IzSTZJQ1IzYUdsMFpUdGNiaUFnWm05dWRDMXphWHBsT2lBeU5IQjRPMXh1SUNCdFlYSm5hVzR0WW05MGRHOXRPaUF4TUhCNE8xeHVJQ0J3WVdSa2FXNW5PaUFrWjNWMGRHVnlPMXh1WEc0Z0lFQnRaV1JwWVNBamV5UnRhVzVOUkgwZ2UxeHVJQ0FnSUdKaFkydG5jbTkxYm1RNklISm5ZbUVvSkhKbFpDd3dMamMxS1R0Y2JpQWdmVnh1WEc0Z0lFQnRaV1JwWVNBamV5UnRhVzVNUjMwZ2UxeHVJQ0FnSUd4bFpuUTZJQ1JuZFhSMFpYSWdLaUF0TVR0Y2JpQWdJQ0JpYjNndGMybDZhVzVuT2lCamIyNTBaVzUwTFdKdmVEdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklETTJjSGc3WEc0Z0lIMWNibjFjYmx4dUxtaGxjbTlmWTNSaElIdGNiaUFnUUdsdVkyeDFaR1VnWW5SdVgzSmxkbVZ5YzJVN1hHNWNiaUFnUUcxbFpHbGhJQ043SkcxcGJreEhmU0I3WEc0Z0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNBZ0lHeGxablE2SUNSbmRYUjBaWElnS2lBdE1UdGNiaUFnZlZ4dWZWeHVJaXdpUUdsdGNHOXlkQ0FuWTI5eVpTYzdYRzVBYVcxd2IzSjBJQ2RoYm1sdFlYUmxKenRjYmtCcGJYQnZjblFnSjJGMWRHOW9aV2xuYUhRbk8xeHVRR2x0Y0c5eWRDQW5iR0Y2ZVd4dllXUW5PMXh1UUdsdGNHOXlkQ0FuZG1sa1pXOG5PMXh1SWl3aUx5cGNiaUFxSUNCUGQyd2dRMkZ5YjNWelpXd2dMU0JEYjNKbFhHNGdLaTljYmk1dmQyd3RZMkZ5YjNWelpXd2dlMXh1WEhSa2FYTndiR0Y1T2lCdWIyNWxPMXh1WEhSM2FXUjBhRG9nTVRBd0pUdGNibHgwTFhkbFltdHBkQzEwWVhBdGFHbG5hR3hwWjJoMExXTnZiRzl5T2lCMGNtRnVjM0JoY21WdWREdGNibHgwTHlvZ2NHOXphWFJwYjI0Z2NtVnNZWFJwZG1VZ1lXNWtJSG90YVc1a1pYZ2dabWw0SUhkbFltdHBkQ0J5Wlc1a1pYSnBibWNnWm05dWRITWdhWE56ZFdVZ0tpOWNibHgwY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dVhIUjZMV2x1WkdWNE9pQXhPMXh1WEc1Y2RDNXZkMnd0YzNSaFoyVWdlMXh1WEhSY2RIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNibHgwWEhRdGJYTXRkRzkxWTJndFlXTjBhVzl1T2lCd1lXNHRXVHRjYmx4MFhIUjBiM1ZqYUMxaFkzUnBiMjQ2SUcxaGJtbHdkV3hoZEdsdmJqdGNibHgwWEhRdGJXOTZMV0poWTJ0bVlXTmxMWFpwYzJsaWFXeHBkSGs2SUdocFpHUmxianNnTHlvZ1ptbDRJR1pwY21WbWIzZ2dZVzVwYldGMGFXOXVJR2RzYVhSamFDQXFMMXh1WEhSOVhHNWNibHgwTG05M2JDMXpkR0ZuWlRwaFpuUmxjaUI3WEc1Y2RGeDBZMjl1ZEdWdWREb2dYQ0l1WENJN1hHNWNkRngwWkdsemNHeGhlVG9nWW14dlkyczdYRzVjZEZ4MFkyeGxZWEk2SUdKdmRHZzdYRzVjZEZ4MGRtbHphV0pwYkdsMGVUb2dhR2xrWkdWdU8xeHVYSFJjZEd4cGJtVXRhR1ZwWjJoME9pQXdPMXh1WEhSY2RHaGxhV2RvZERvZ01EdGNibHgwZlZ4dVhHNWNkQzV2ZDJ3dGMzUmhaMlV0YjNWMFpYSWdlMXh1WEhSY2RIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNibHgwWEhSdmRtVnlabXh2ZHpvZ2FHbGtaR1Z1TzF4dVhIUmNkQzhxSUdacGVDQm1iM0lnWm14aGMyaHBibWNnWW1GamEyZHliM1Z1WkNBcUwxeHVYSFJjZEMxM1pXSnJhWFF0ZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdVelpDZ3djSGdzSURCd2VDd2dNSEI0S1R0Y2JseDBmVnh1WEc1Y2RDNXZkMnd0ZDNKaGNIQmxjaXhjYmx4MExtOTNiQzFwZEdWdGUxeHVYSFJjZEMxM1pXSnJhWFF0WW1GamEyWmhZMlV0ZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1TzF4dVhIUmNkQzF0YjNvdFltRmphMlpoWTJVdGRtbHphV0pwYkdsMGVUb2dhR2xrWkdWdU8xeHVYSFJjZEMxdGN5MWlZV05yWm1GalpTMTJhWE5wWW1sc2FYUjVPaUJvYVdSa1pXNDdYRzVjZEZ4MExYZGxZbXRwZEMxMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpUTmtLREFzTUN3d0tUdGNibHgwWEhRdGJXOTZMWFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsTTJRb01Dd3dMREFwTzF4dVhIUmNkQzF0Y3kxMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpUTmtLREFzTUN3d0tUdGNibHgwZlZ4dVhHNWNkQzV2ZDJ3dGFYUmxiU0I3WEc1Y2RGeDBjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1WEhSY2RHMXBiaTFvWldsbmFIUTZJREZ3ZUR0Y2JseDBYSFJtYkc5aGREb2diR1ZtZER0Y2JseDBYSFF0ZDJWaWEybDBMV0poWTJ0bVlXTmxMWFpwYzJsaWFXeHBkSGs2SUdocFpHUmxianRjYmx4MFhIUXRkMlZpYTJsMExYUmhjQzFvYVdkb2JHbG5hSFF0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwTzF4dVhIUmNkQzEzWldKcmFYUXRkRzkxWTJndFkyRnNiRzkxZERvZ2JtOXVaVHRjYmx4MGZWeHVYSFF1YjNkc0xXbDBaVzBnYVcxbklIdGNibHgwWEhSa2FYTndiR0Y1T2lCaWJHOWphenRjYmx4MFhIUjNhV1IwYURvZ01UQXdKVHRjYmx4MGZWeHVYRzVjZEM1dmQyd3RibUYyTG1ScGMyRmliR1ZrTEZ4dVhIUXViM2RzTFdSdmRITXVaR2x6WVdKc1pXUWdlMXh1WEhSY2RHUnBjM0JzWVhrNklHNXZibVU3WEc1Y2RIMWNibHh1WEhRdWIzZHNMVzVoZGlBdWIzZHNMWEJ5WlhZc1hHNWNkQzV2ZDJ3dGJtRjJJQzV2ZDJ3dGJtVjRkQ3hjYmx4MExtOTNiQzFrYjNRZ2UxeHVYSFJjZEdOMWNuTnZjam9nY0c5cGJuUmxjanRjYmx4MFhIUXRkMlZpYTJsMExYVnpaWEl0YzJWc1pXTjBPaUJ1YjI1bE8xeHVYSFJjZEMxcmFIUnRiQzExYzJWeUxYTmxiR1ZqZERvZ2JtOXVaVHRjYmx4MFhIUXRiVzk2TFhWelpYSXRjMlZzWldOME9pQnViMjVsTzF4dVhIUmNkQzF0Y3kxMWMyVnlMWE5sYkdWamREb2dibTl1WlR0Y2JseDBYSFIxYzJWeUxYTmxiR1ZqZERvZ2JtOXVaVHRjYmx4MGZWeHVYRzVjZEM1dmQyd3RibUYySUdKMWRIUnZiaTV2ZDJ3dGNISmxkaXhjYmx4MExtOTNiQzF1WVhZZ1luVjBkRzl1TG05M2JDMXVaWGgwTEZ4dVhIUmlkWFIwYjI0dWIzZHNMV1J2ZENCN1hHNWNkRngwWW1GamEyZHliM1Z1WkRvZ2JtOXVaVHRjYmx4MFhIUmpiMnh2Y2pvZ2FXNW9aWEpwZER0Y2JseDBYSFJpYjNKa1pYSTZJRzV2Ym1VN1hHNWNkRngwY0dGa1pHbHVaem93SVdsdGNHOXlkR0Z1ZER0Y2JseDBYSFJtYjI1ME9pQnBibWhsY21sME8xeHVYSFI5WEc1Y2JseDBKaTV2ZDJ3dGJHOWhaR1ZrSUh0Y2JseDBYSFJrYVhOd2JHRjVPaUJpYkc5amF6dGNibHgwZlZ4dVhHNWNkQ1l1YjNkc0xXeHZZV1JwYm1jZ2UxeHVYSFJjZEc5d1lXTnBkSGs2SURBN1hHNWNkRngwWkdsemNHeGhlVG9nWW14dlkyczdYRzVjZEgxY2JseHVYSFFtTG05M2JDMW9hV1JrWlc0Z2UxeHVYSFJjZEc5d1lXTnBkSGs2SURBN1hHNWNkSDFjYmx4dVhIUW1MbTkzYkMxeVpXWnlaWE5vSUM1dmQyd3RhWFJsYlNCN1hHNWNkRngwZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1TzF4dVhIUjlYRzVjYmx4MEppNXZkMnd0WkhKaFp5QXViM2RzTFdsMFpXMGdlMXh1WEhSY2RIUnZkV05vTFdGamRHbHZiam9nY0dGdUxYazdYRzVjZEZ4MExYZGxZbXRwZEMxMWMyVnlMWE5sYkdWamREb2dibTl1WlR0Y2JseDBYSFF0Ylc5NkxYVnpaWEl0YzJWc1pXTjBPaUJ1YjI1bE8xeHVYSFJjZEMxdGN5MTFjMlZ5TFhObGJHVmpkRG9nYm05dVpUdGNibHgwWEhSMWMyVnlMWE5sYkdWamREb2dibTl1WlR0Y2JseDBmVnh1WEc1Y2RDWXViM2RzTFdkeVlXSWdlMXh1WEhSY2RHTjFjbk52Y2pvZ2JXOTJaVHRjYmx4MFhIUmpkWEp6YjNJNklHZHlZV0k3WEc1Y2RIMWNibHh1WEhRbUxtOTNiQzF5ZEd3Z2UxeHVYSFJjZEdScGNtVmpkR2x2YmpvZ2NuUnNPMXh1WEhSOVhHNWNibHgwSmk1dmQyd3RjblJzSUM1dmQyd3RhWFJsYlNCN1hHNWNkRngwWm14dllYUTZJSEpwWjJoME8xeHVYSFI5WEc1OVhHNWNiaThxSUU1dklFcHpJQ292WEc0dWJtOHRhbk1nTG05M2JDMWpZWEp2ZFhObGJDQjdYRzVjZEdScGMzQnNZWGs2SUdKc2IyTnJPMXh1ZlZ4dUlpd2lMeXBjYmlBcUlDQlBkMndnUTJGeWIzVnpaV3dnTFNCQmJtbHRZWFJsSUZCc2RXZHBibHh1SUNvdlhHNHViM2RzTFdOaGNtOTFjMlZzZTF4dVhIUXVZVzVwYldGMFpXUWdlMXh1WEhSY2RHRnVhVzFoZEdsdmJpMWtkWEpoZEdsdmJqb2dNVEF3TUcxek8xeHVYSFJjZEdGdWFXMWhkR2x2YmkxbWFXeHNMVzF2WkdVNklHSnZkR2c3WEc1Y2RIMWNibHgwTG05M2JDMWhibWx0WVhSbFpDMXBiaUI3WEc1Y2RGeDBlaTFwYm1SbGVEb2dNRHRjYmx4MGZWeHVYSFF1YjNkc0xXRnVhVzFoZEdWa0xXOTFkQ0I3WEc1Y2RGeDBlaTFwYm1SbGVEb2dNVHRjYmx4MGZWeHVYSFF1Wm1Ga1pVOTFkQ0I3WEc1Y2RGeDBZVzVwYldGMGFXOXVMVzVoYldVNklHWmhaR1ZQZFhRN1hHNWNkSDFjYm4xY2JseHVRR3RsZVdaeVlXMWxjeUJtWVdSbFQzVjBJSHRjYmx4ME1DVWdlMXh1WEhSY2RHOXdZV05wZEhrNklERTdYRzVjZEgxY2JseHVYSFF4TURBbElIdGNibHgwWEhSdmNHRmphWFI1T2lBd08xeHVYSFI5WEc1OVhHNGlMQ0l2S2x4dUlDb2dYSFJQZDJ3Z1EyRnliM1Z6Wld3Z0xTQkJkWFJ2SUVobGFXZG9kQ0JRYkhWbmFXNWNiaUFxTDF4dVhHNHViM2RzTFdobGFXZG9kQ0I3WEc1Y2RIUnlZVzV6YVhScGIyNDZJR2hsYVdkb2RDQTFNREJ0Y3lCbFlYTmxMV2x1TFc5MWREdGNibjFjYmlJc0lpOHFYRzRnS2lCY2RFOTNiQ0JEWVhKdmRYTmxiQ0F0SUV4aGVua2dURzloWkNCUWJIVm5hVzVjYmlBcUwxeHVYRzR1YjNkc0xXTmhjbTkxYzJWc0lIdGNibHgwTG05M2JDMXBkR1Z0SUh0Y2JseDBYSFF1YjNkc0xXeGhlbmtnZTF4dVhIUmNkRngwWEhSdmNHRmphWFI1T2lBd08xeHVYSFJjZEZ4MFhIUjBjbUZ1YzJsMGFXOXVPaUJ2Y0dGamFYUjVJRFF3TUcxeklHVmhjMlU3WEc1Y2RGeDBmVnh1WEc1Y2RGeDBMeW9xWEc1Y2RGeDBYSFJVYUdseklHbHpJR2x1ZEhKdlpIVmpaV1FnWkhWbElIUnZJR0VnWW5WbklHbHVJRWxGTVRFZ2QyaGxjbVVnYkdGNmVTQnNiMkZrYVc1bklHTnZiV0pwYm1Wa0lIZHBkR2dnWVhWMGIyaGxhV2RvZENCd2JIVm5hVzRnWTJGMWMyVnpJR0VnZDNKdmJtZGNibHgwWEhSY2RHTmhiR04xYkdGMGFXOXVJRzltSUhSb1pTQm9aV2xuYUhRZ2IyWWdkR2hsSUc5M2JDMXBkR1Z0SUhSb1lYUWdZbkpsWVd0eklIQmhaMlVnYkdGNWIzVjBjMXh1WEhSY2RDQXFMMXh1WEhSY2RDNXZkMnd0YkdGNmVWdHpjbU5lUFZ3aVhDSmRMQ0F1YjNkc0xXeGhlbms2Ym05MEtGdHpjbU5kS1NCN1hHNWNkRngwWEhSdFlYZ3RhR1ZwWjJoME9pQXdPMXh1WEhSY2RIMWNibHh1WEhSY2RHbHRaeTV2ZDJ3dGJHRjZlU0I3WEc1Y2RGeDBYSFIwY21GdWMyWnZjbTB0YzNSNWJHVTZJSEJ5WlhObGNuWmxMVE5rTzF4dVhIUmNkSDFjYmx4MGZWeHVmVnh1WEc0aUxDSWtiM2RzTFdsdFlXZGxMWEJoZEdnNklGd2lYQ0lnSVdSbFptRjFiSFE3WEc1Y2JpOHFYRzRnS2lCY2RFOTNiQ0JEWVhKdmRYTmxiQ0F0SUZacFpHVnZJRkJzZFdkcGJseHVJQ292WEc1Y2JpNXZkMnd0WTJGeWIzVnpaV3g3WEc1Y2RDNXZkMnd0ZG1sa1pXOHRkM0poY0hCbGNpQjdYRzVjZEZ4MGNHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVYSFJjZEdobGFXZG9kRG9nTVRBd0pUdGNibHgwWEhSaVlXTnJaM0p2ZFc1a09pQWpNREF3TzF4dVhIUjlYRzVjYmx4MExtOTNiQzEyYVdSbGJ5MXdiR0Y1TFdsamIyNGdlMXh1WEhSY2RIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNibHgwWEhSb1pXbG5hSFE2SURnd2NIZzdYRzVjZEZ4MGQybGtkR2c2SURnd2NIZzdYRzVjZEZ4MGJHVm1kRG9nTlRBbE8xeHVYSFJjZEhSdmNEb2dOVEFsTzF4dVhIUmNkRzFoY21kcGJpMXNaV1owT2lBdE5EQndlRHRjYmx4MFhIUnRZWEpuYVc0dGRHOXdPaUF0TkRCd2VEdGNibHgwWEhSaVlXTnJaM0p2ZFc1a09pQjFjbXdvWENJamV5UnZkMnd0YVcxaFoyVXRjR0YwYUgxdmQyd3VkbWxrWlc4dWNHeGhlUzV3Ym1kY0lpa2dibTh0Y21Wd1pXRjBPMXh1WEhSY2RHTjFjbk52Y2pvZ2NHOXBiblJsY2p0Y2JseDBYSFI2TFdsdVpHVjRPaUF4TzF4dVhIUmNkQzEzWldKcmFYUXRZbUZqYTJaaFkyVXRkbWx6YVdKcGJHbDBlVG9nYUdsa1pHVnVPMXh1WEhSY2RIUnlZVzV6YVhScGIyNDZJSFJ5WVc1elptOXliU0F4TURCdGN5QmxZWE5sTzF4dVhIUjlYRzVjYmx4MExtOTNiQzEyYVdSbGJ5MXdiR0Y1TFdsamIyNDZhRzkyWlhJZ2UxeHVYSFJjZEhSeVlXNXpabTl5YlRvZ2MyTmhiR1VvTVM0ekxDQXhMak1wTzF4dVhIUjlYRzVjYmx4MExtOTNiQzEyYVdSbGJ5MXdiR0Y1YVc1bklDNXZkMnd0ZG1sa1pXOHRkRzRzWEc1Y2RDNXZkMnd0ZG1sa1pXOHRjR3hoZVdsdVp5QXViM2RzTFhacFpHVnZMWEJzWVhrdGFXTnZiaUI3WEc1Y2RGeDBaR2x6Y0d4aGVUb2dibTl1WlR0Y2JseDBmVnh1WEc1Y2RDNXZkMnd0ZG1sa1pXOHRkRzRnZTF4dVhIUmNkRzl3WVdOcGRIazZJREE3WEc1Y2RGeDBhR1ZwWjJoME9pQXhNREFsTzF4dVhIUmNkR0poWTJ0bmNtOTFibVF0Y0c5emFYUnBiMjQ2SUdObGJuUmxjaUJqWlc1MFpYSTdYRzVjZEZ4MFltRmphMmR5YjNWdVpDMXlaWEJsWVhRNklHNXZMWEpsY0dWaGREdGNibHgwWEhSaVlXTnJaM0p2ZFc1a0xYTnBlbVU2SUdOdmJuUmhhVzQ3WEc1Y2RGeDBkSEpoYm5OcGRHbHZiam9nYjNCaFkybDBlU0EwTURCdGN5QmxZWE5sTzF4dVhIUjlYRzVjYmx4MExtOTNiQzEyYVdSbGJ5MW1jbUZ0WlNCN1hHNWNkRngwY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dVhIUmNkSG90YVc1a1pYZzZJREU3WEc1Y2RGeDBhR1ZwWjJoME9pQXhNREFsTzF4dVhIUmNkSGRwWkhSb09pQXhNREFsTzF4dVhIUjlYRzU5WEc0aUxDSkFhVzF3YjNKMElGd2lkR2hsYldVdVpHVm1ZWFZzZEZ3aU95SXNJaThxWEc0Z0tpQmNkRVJsWm1GMWJIUWdkR2hsYldVZ0xTQlBkMndnUTJGeWIzVnpaV3dnUTFOVElFWnBiR1ZjYmlBcUwxeHVYRzRrWTI5c2IzSXRZbUZ6WlRwY2RGeDBYSFFqT0RZNU56a3hJQ0ZrWldaaGRXeDBPMXh1SkdOdmJHOXlMWGRvYVhSbE9seDBYSFJjZENOR1JrWWdJV1JsWm1GMWJIUTdYRzRrWTI5c2IzSXRaM0poZVRwY2RGeDBYSFFqUkRaRU5rUTJJQ0ZrWldaaGRXeDBPMXh1WEc0dkwyNWhkbHh1WEc0a2JtRjJMV052Ykc5eU9pQmNkRngwWEhRa1kyOXNiM0l0ZDJocGRHVWdJV1JsWm1GMWJIUTdYRzRrYm1GMkxXTnZiRzl5TFdodmRtVnlPbHgwWEhRa1kyOXNiM0l0ZDJocGRHVWdJV1JsWm1GMWJIUTdYRzRrYm1GMkxXWnZiblF0YzJsNlpUb2dYSFJjZERFMGNIZ2dJV1JsWm1GMWJIUTdYRzRrYm1GMkxYSnZkVzVrWldRNklGeDBYSFJjZEROd2VDQWhaR1ZtWVhWc2REdGNiaVJ1WVhZdGJXRnlaMmx1T2lCY2RGeDBYSFExY0hnZ0lXUmxabUYxYkhRN1hHNGtibUYyTFhCaFpHUnBibWM2SUZ4MFhIUmNkRFJ3ZUNBM2NIZ2dJV1JsWm1GMWJIUTdYRzRrYm1GMkxXSmhZMnRuY205MWJtUTZJRngwWEhRa1kyOXNiM0l0WjNKaGVTQWhaR1ZtWVhWc2REdGNiaVJ1WVhZdFltRmphMmR5YjNWdVpDMW9iM1psY2pwY2RDUmpiMnh2Y2kxaVlYTmxJQ0ZrWldaaGRXeDBPMXh1Skc1aGRpMWthWE5oWW14bFpDMXZjR0ZqYVhSNU9pQmNkREF1TlNBaFpHVm1ZWFZzZER0Y2JseHVMeTlrYjNSelhHNWNiaVJrYjNRdGQybGtkR2c2WEhSY2RGeDBYSFF4TUhCNElDRmtaV1poZFd4ME8xeHVKR1J2ZEMxb1pXbG5hSFE2WEhSY2RGeDBNVEJ3ZUNBaFpHVm1ZWFZzZER0Y2JpUmtiM1F0Y205MWJtUmxaRHBjZEZ4MFhIUXpNSEI0SUNGa1pXWmhkV3gwTzF4dUpHUnZkQzF0WVhKbmFXNDZJRngwWEhSY2REVndlQ0EzY0hnZ0lXUmxabUYxYkhRN1hHNGtaRzkwTFdKaFkydG5jbTkxYm1RNlhIUmNkQ1JqYjJ4dmNpMW5jbUY1SUNGa1pXWmhkV3gwTzF4dUpHUnZkQzFpWVdOclozSnZkVzVrTFdGamRHbDJaVHBjZENSamIyeHZjaTFpWVhObElDRmtaV1poZFd4ME8xeHVYRzVBYVcxd2IzSjBJQ2QwYUdWdFpTYzdYRzRpTENKY2JpNXZkMnd0ZEdobGJXVWdlMXh1WEhRdkx5QlRkSGxzYVc1bklFNWxlSFFnWVc1a0lGQnlaWFlnWW5WMGRHOXVjMXh1WEhRdWIzZHNMVzVoZGlCN1hHNWNkRngwYldGeVoybHVMWFJ2Y0RvZ01UQndlRHRjYmx4MFhIUjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYRzVjZEZ4MExYZGxZbXRwZEMxMFlYQXRhR2xuYUd4cFoyaDBMV052Ykc5eU9pQjBjbUZ1YzNCaGNtVnVkRHRjYmx4dVhIUmNkRnRqYkdGemN5bzlKMjkzYkMwblhTQjdYRzVjZEZ4MFhIUmpiMnh2Y2pvZ0pHNWhkaTFqYjJ4dmNqdGNibHgwWEhSY2RHWnZiblF0YzJsNlpUb2dKRzVoZGkxbWIyNTBMWE5wZW1VN1hHNWNkRngwWEhSdFlYSm5hVzQ2SUNSdVlYWXRiV0Z5WjJsdU8xeHVYSFJjZEZ4MGNHRmtaR2x1WnpvZ0pHNWhkaTF3WVdSa2FXNW5PMXh1WEhSY2RGeDBZbUZqYTJkeWIzVnVaRG9nSkc1aGRpMWlZV05yWjNKdmRXNWtPMXh1WEhSY2RGeDBaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yTzF4dVhIUmNkRngwWTNWeWMyOXlPaUJ3YjJsdWRHVnlPMXh1WEhSY2RGeDBZbTl5WkdWeUxYSmhaR2wxY3pvZ00zQjRPMXh1WEc1Y2RGeDBYSFFtT21odmRtVnlJSHRjYmx4MFhIUmNkRngwWW1GamEyZHliM1Z1WkRvZ0pHNWhkaTFpWVdOclozSnZkVzVrTFdodmRtVnlPMXh1WEhSY2RGeDBYSFJqYjJ4dmNqb2tibUYyTFdOdmJHOXlMV2h2ZG1WeU8xeHVYSFJjZEZ4MFhIUjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3WEc1Y2RGeDBYSFI5WEc1Y2RGeDBmVnh1WEhSY2RDNWthWE5oWW14bFpDQjdYRzVjZEZ4MFhIUnZjR0ZqYVhSNU9pQWtibUYyTFdScGMyRmliR1ZrTFc5d1lXTnBkSGs3WEc1Y2RGeDBYSFJqZFhKemIzSTZJR1JsWm1GMWJIUTdYRzVjZEZ4MGZWeHVYSFI5WEc1Y2JseDBMeThnVTNSNWJHbHVaeUJrYjNSelhHNWNkQzV2ZDJ3dGJtRjJMbVJwYzJGaWJHVmtJQ3NnTG05M2JDMWtiM1J6SUh0Y2JseDBYSFJ0WVhKbmFXNHRkRzl3T2lBeE1IQjRPMXh1WEhSOVhHNWNibHgwTG05M2JDMWtiM1J6SUh0Y2JseDBYSFIwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEc1Y2RGeDBMWGRsWW10cGRDMTBZWEF0YUdsbmFHeHBaMmgwTFdOdmJHOXlPaUIwY21GdWMzQmhjbVZ1ZER0Y2JseHVYSFJjZEM1dmQyd3RaRzkwSUh0Y2JseDBYSFJjZEdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amF6dGNibHgwWEhSY2RIcHZiMjA2SURFN1hHNWNkRngwWEhRcVpHbHpjR3hoZVRvZ2FXNXNhVzVsTzF4dVhHNWNkRngwWEhSemNHRnVJSHRjYmx4MFhIUmNkRngwZDJsa2RHZzZJQ1JrYjNRdGQybGtkR2c3WEc1Y2RGeDBYSFJjZEdobGFXZG9kRG9nSkdSdmRDMW9aV2xuYUhRN1hHNWNkRngwWEhSY2RHMWhjbWRwYmpvZ0pHUnZkQzF0WVhKbmFXNDdYRzVjZEZ4MFhIUmNkR0poWTJ0bmNtOTFibVE2SUNSa2IzUXRZbUZqYTJkeWIzVnVaRHRjYmx4MFhIUmNkRngwWkdsemNHeGhlVG9nWW14dlkyczdYRzVjZEZ4MFhIUmNkQzEzWldKcmFYUXRZbUZqYTJaaFkyVXRkbWx6YVdKcGJHbDBlVG9nZG1semFXSnNaVHRjYmx4MFhIUmNkRngwZEhKaGJuTnBkR2x2YmpvZ2IzQmhZMmwwZVNBeU1EQnRjeUJsWVhObE8xeHVYSFJjZEZ4MFhIUmliM0prWlhJdGNtRmthWFZ6T2lBa1pHOTBMWEp2ZFc1a1pXUTdYRzVjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkQ1l1WVdOMGFYWmxMRnh1WEhSY2RGeDBKanBvYjNabGNpQjdYRzVjZEZ4MFhIUmNkSE53WVc0Z2UxeHVYSFJjZEZ4MFhIUmNkR0poWTJ0bmNtOTFibVE2SUNSa2IzUXRZbUZqYTJkeWIzVnVaQzFoWTNScGRtVTdYRzVjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkSDFjYmx4MFhIUjlYRzVjZEgxY2JuMWNiaUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVXRCUVN4UFFVRlBMRU5CUVVNc2IwVkJRVWs3UVVoQldpeEJRVUZCTEVOQlFVTXNRMEZCUXp0RlFVTkJMRTFCUVUwc1JVRkJSU3hEUVVGRE8wVkJRMVFzVDBGQlR5eEZRVUZGTEVOQlFVTTdSVUZEVml4UFFVRlBMRVZCUVVVc1NVRkJTVHRGUVVOaUxFMUJRVTBzUlVGQlJTeERRVUZETzBWQlExUXNWVUZCVlN4RlFVRkZMRlZCUVZVN1EwRkRka0k3TzBGQlJVUXNRVUZCUVN4RFFVRkRMRU5CUVVNN1JVRkRRU3hsUVVGbExFVkJRVVVzU1VGQlNUdEZRVU55UWl4VlFVRlZMRVZCUVVVc1IwRkJSeXhEUkZaVUxFbEJRVWs3UTBOWFdEczdRVUZGUkN4QlFVRkJMR0ZCUVdFc1EwRkJRenRGUVVOYUxGVkJRVlVzUlVGQlJTeExRVUZMTzBWQlEycENMRTlCUVU4c1JVRkJSU3hKUVVGSk8wVkJRMklzWTBGQll5eEZRVUZGTEUxQlFVMDdRMEZMZGtJN08wRkJVa1FzUVVGTFJTeGhRVXhYTEVkQlMxUXNTVUZCU1N4RFFVRkRPMFZCUTB3c1UwRkJVeXhGUVVGRkxFTkJRVU03UTBGRFlqczdRVVZ3UWtnc1ZVRkJWVHRCUVU5V0xFRkJRVUVzU1VGQlNTeERRVUZETzBWQlEwZ3NVMEZCVXl4RlFVaERMRTFCUVUwN1JVRkxhRUlzVDBGQlR5eEZRVUZGTEVsQlFVazdSVUZEWWl4VFFVRlRMRVZCUVVVc1NVRkJTVHRGUVVWbUxFMUJRVTBzUlVGQlJTeEpRVUZKTzBWQlExb3NUMEZCVHl4RlFVRkZMRU5CUVVNc1EwRkJReXhKUVVGWE8wTkJRM1pDT3p0QlFVVkVMRUZCUVVFc1kwRkJZeXhEUVVGRE8wVkJRMklzWlVGQlpTeEZRVUZGTEdGQlFXRTdRMEZETDBJN08wRkJSVVFzUVVGQlFTeGhRVUZoTEVOQlFVTTdSVUZEV2l4WFFVRlhMRVZCUVVVc1RVRkJUVHREUVVOd1FqczdRMEZGUkN4QlFVRkJMRUZCUVVFc1MwRkJReXhGUVVGUExFdEJRVXNzUVVGQldpeEZRVUZqTzBWQlJXSXNUMEZCVHl4RlFVRkZMRU5CUVVNc1EwRkJReXhKUVVGWE8wTkJRM1pDT3p0QlFVVkVMR0ZCUVdFN1FVRkZXQ3hCUVVGQkxFMUJRVTBzUTBGQlN6dEZRVU5VTEV0QlFVc3NSVUZCUlN4UlFVRnpRanREUVVNNVFqczdRVUZHUkN4QlFVRkJMRTFCUVUwc1EwRkJTenRGUVVOVUxFdEJRVXNzUlVGQlJTeFRRVUZ6UWp0RFFVTTVRanM3UVVGR1JDeEJRVUZCTEUxQlFVMHNRMEZCU3p0RlFVTlVMRXRCUVVzc1JVRkJSU3hUUVVGelFqdERRVU01UWpzN1FVRkdSQ3hCUVVGQkxFMUJRVTBzUTBGQlN6dEZRVU5VTEV0QlFVc3NSVUZCUlN4VFFVRnpRanREUVVNNVFqczdRVUZHUkN4QlFVRkJMRTFCUVUwc1EwRkJTenRGUVVOVUxFdEJRVXNzUlVGQlJTeFRRVUZ6UWp0RFFVTTVRanM3UVVGR1JDeEJRVUZCTEUxQlFVMHNRMEZCU3p0RlFVTlVMRXRCUVVzc1JVRkJSU3hUUVVGelFqdERRVU01UWpzN1FVRkdSQ3hCUVVGQkxFMUJRVTBzUTBGQlN6dEZRVU5VTEV0QlFVc3NSVUZCUlN4VFFVRnpRanREUVVNNVFqczdRVUZHUkN4QlFVRkJMRTFCUVUwc1EwRkJTenRGUVVOVUxFdEJRVXNzUlVGQlJTeFRRVUZ6UWp0RFFVTTVRanM3UVVGR1JDeEJRVUZCTEUxQlFVMHNRMEZCU3p0RlFVTlVMRXRCUVVzc1JVRkJSU3hUUVVGelFqdERRVU01UWpzN1FVRkdSQ3hCUVVGQkxFOUJRVThzUTBGQlNUdEZRVU5VTEV0QlFVc3NSVUZCUlN4VFFVRnpRanREUVVNNVFqczdRVUZHUkN4QlFVRkJMRTlCUVU4c1EwRkJTVHRGUVVOVUxFdEJRVXNzUlVGQlJTeEpRVUZ6UWp0RFFVTTVRanM3UVVGSlJDeEJRVUZCTEU5QlFVOHNRMEZCU3p0RlFVTldMRmRCUVZjc1JVRkJSU3hGUVVGelFqdERRVU53UXpzN1FVRkdSQ3hCUVVGQkxFOUJRVThzUTBGQlN6dEZRVU5XTEZkQlFWY3NSVUZCUlN4UlFVRnpRanREUVVOd1F6czdRVUZHUkN4QlFVRkJMRTlCUVU4c1EwRkJTenRGUVVOV0xGZEJRVmNzUlVGQlJTeFRRVUZ6UWp0RFFVTndRenM3UVVGR1JDeEJRVUZCTEU5QlFVOHNRMEZCU3p0RlFVTldMRmRCUVZjc1JVRkJSU3hUUVVGelFqdERRVU53UXpzN1FVRkdSQ3hCUVVGQkxFOUJRVThzUTBGQlN6dEZRVU5XTEZkQlFWY3NSVUZCUlN4VFFVRnpRanREUVVOd1F6czdRVUZHUkN4QlFVRkJMRTlCUVU4c1EwRkJTenRGUVVOV0xGZEJRVmNzUlVGQlJTeFRRVUZ6UWp0RFFVTndRenM3UVVGR1JDeEJRVUZCTEU5QlFVOHNRMEZCU3p0RlFVTldMRmRCUVZjc1JVRkJSU3hUUVVGelFqdERRVU53UXpzN1FVRkdSQ3hCUVVGQkxFOUJRVThzUTBGQlN6dEZRVU5XTEZkQlFWY3NSVUZCUlN4VFFVRnpRanREUVVOd1F6czdRVUZHUkN4QlFVRkJMRTlCUVU4c1EwRkJTenRGUVVOV0xGZEJRVmNzUlVGQlJTeFRRVUZ6UWp0RFFVTndRenM3UVVGR1JDeEJRVUZCTEU5QlFVOHNRMEZCU3p0RlFVTldMRmRCUVZjc1JVRkJSU3hUUVVGelFqdERRVU53UXpzN1FVRkdSQ3hCUVVGQkxGRkJRVkVzUTBGQlNUdEZRVU5XTEZkQlFWY3NSVUZCUlN4VFFVRnpRanREUVVOd1F6czdRVUZIU0N4WFFVRlhPMEZCUTFnc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlFVVXZRaXhCUVVGQkxGTkJRVk1zUTBGQlN6dEpRVU5hTEV0QlFVc3NSVUZCUlN4SFFVRjNRanRIUVVOb1F6dEZRVVpFTEVGQlFVRXNVMEZCVXl4RFFVRkxPMGxCUTFvc1MwRkJTeXhGUVVGRkxFbEJRWGRDTzBkQlEyaERPMFZCU1VRc1FVRkJRU3hWUVVGVkxFTkJRVXM3U1VGRFlpeFhRVUZYTEVWQlFVVXNSVUZCZDBJN1IwRkRkRU03UlVGR1JDeEJRVUZCTEZWQlFWVXNRMEZCU3p0SlFVTmlMRmRCUVZjc1JVRkJSU3hIUVVGM1FqdEhRVU4wUXpzN08wRkJTVXdzV1VGQldUdEJRVU5hTEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGRkwwSXNRVUZCUVN4VFFVRlRMRU5CUVVzN1NVRkRXaXhMUVVGTExFVkJRVVVzUjBGQmQwSTdSMEZEYUVNN1JVRkdSQ3hCUVVGQkxGTkJRVk1zUTBGQlN6dEpRVU5hTEV0QlFVc3NSVUZCUlN4SFFVRjNRanRIUVVOb1F6dEZRVVpFTEVGQlFVRXNVMEZCVXl4RFFVRkxPMGxCUTFvc1MwRkJTeXhGUVVGRkxFZEJRWGRDTzBkQlEyaERPMFZCUmtRc1FVRkJRU3hUUVVGVExFTkJRVXM3U1VGRFdpeExRVUZMTEVWQlFVVXNTVUZCZDBJN1IwRkRhRU03UlVGSlJDeEJRVUZCTEZWQlFWVXNRMEZCU3p0SlFVTmlMRmRCUVZjc1JVRkJSU3hGUVVGM1FqdEhRVU4wUXp0RlFVWkVMRUZCUVVFc1ZVRkJWU3hEUVVGTE8wbEJRMklzVjBGQlZ5eEZRVUZGTEVkQlFYZENPMGRCUTNSRE8wVkJSa1FzUVVGQlFTeFZRVUZWTEVOQlFVczdTVUZEWWl4WFFVRlhMRVZCUVVVc1IwRkJkMEk3UjBGRGRFTTdSVUZHUkN4QlFVRkJMRlZCUVZVc1EwRkJTenRKUVVOaUxGZEJRVmNzUlVGQlJTeEhRVUYzUWp0SFFVTjBRenM3TzBGQlNVd3NXVUZCV1R0QlFVTmFMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUZGTDBJc1FVRkJRU3hUUVVGVExFTkJRVXM3U1VGRFdpeExRVUZMTEVWQlFVVXNVVUZCYzBJN1IwRkRPVUk3UlVGR1JDeEJRVUZCTEZOQlFWTXNRMEZCU3p0SlFVTmFMRXRCUVVzc1JVRkJSU3hUUVVGelFqdEhRVU01UWp0RlFVWkVMRUZCUVVFc1UwRkJVeXhEUVVGTE8wbEJRMW9zUzBGQlN5eEZRVUZGTEZOQlFYTkNPMGRCUXpsQ08wVkJSa1FzUVVGQlFTeFRRVUZUTEVOQlFVczdTVUZEV2l4TFFVRkxMRVZCUVVVc1UwRkJjMEk3UjBGRE9VSTdSVUZHUkN4QlFVRkJMRk5CUVZNc1EwRkJTenRKUVVOYUxFdEJRVXNzUlVGQlJTeFRRVUZ6UWp0SFFVTTVRanRGUVVaRUxFRkJRVUVzVTBGQlV5eERRVUZMTzBsQlExb3NTMEZCU3l4RlFVRkZMRk5CUVhOQ08wZEJRemxDTzBWQlJrUXNRVUZCUVN4VFFVRlRMRU5CUVVzN1NVRkRXaXhMUVVGTExFVkJRVVVzVTBGQmMwSTdSMEZET1VJN1JVRkdSQ3hCUVVGQkxGTkJRVk1zUTBGQlN6dEpRVU5hTEV0QlFVc3NSVUZCUlN4VFFVRnpRanRIUVVNNVFqdEZRVVpFTEVGQlFVRXNVMEZCVXl4RFFVRkxPMGxCUTFvc1MwRkJTeXhGUVVGRkxGTkJRWE5DTzBkQlF6bENPMFZCUmtRc1FVRkJRU3hWUVVGVkxFTkJRVWs3U1VGRFdpeExRVUZMTEVWQlFVVXNVMEZCYzBJN1IwRkRPVUk3UlVGR1JDeEJRVUZCTEZWQlFWVXNRMEZCU1R0SlFVTmFMRXRCUVVzc1JVRkJSU3hKUVVGelFqdEhRVU01UWp0RlFVbEVMRUZCUVVFc1ZVRkJWU3hEUVVGTE8wbEJRMklzVjBGQlZ5eEZRVUZGTEVWQlFYTkNPMGRCUTNCRE8wVkJSa1FzUVVGQlFTeFZRVUZWTEVOQlFVczdTVUZEWWl4WFFVRlhMRVZCUVVVc1VVRkJjMEk3UjBGRGNFTTdSVUZHUkN4QlFVRkJMRlZCUVZVc1EwRkJTenRKUVVOaUxGZEJRVmNzUlVGQlJTeFRRVUZ6UWp0SFFVTndRenRGUVVaRUxFRkJRVUVzVlVGQlZTeERRVUZMTzBsQlEySXNWMEZCVnl4RlFVRkZMRk5CUVhOQ08wZEJRM0JETzBWQlJrUXNRVUZCUVN4VlFVRlZMRU5CUVVzN1NVRkRZaXhYUVVGWExFVkJRVVVzVTBGQmMwSTdSMEZEY0VNN1JVRkdSQ3hCUVVGQkxGVkJRVlVzUTBGQlN6dEpRVU5pTEZkQlFWY3NSVUZCUlN4VFFVRnpRanRIUVVOd1F6dEZRVVpFTEVGQlFVRXNWVUZCVlN4RFFVRkxPMGxCUTJJc1YwRkJWeXhGUVVGRkxGTkJRWE5DTzBkQlEzQkRPMFZCUmtRc1FVRkJRU3hWUVVGVkxFTkJRVXM3U1VGRFlpeFhRVUZYTEVWQlFVVXNVMEZCYzBJN1IwRkRjRU03UlVGR1JDeEJRVUZCTEZWQlFWVXNRMEZCU3p0SlFVTmlMRmRCUVZjc1JVRkJSU3hUUVVGelFqdEhRVU53UXp0RlFVWkVMRUZCUVVFc1ZVRkJWU3hEUVVGTE8wbEJRMklzVjBGQlZ5eEZRVUZGTEZOQlFYTkNPMGRCUTNCRE8wVkJSa1FzUVVGQlFTeFhRVUZYTEVOQlFVazdTVUZEWWl4WFFVRlhMRVZCUVVVc1UwRkJjMEk3UjBGRGNFTTdPenRCUVVsTUxHRkJRV0U3UVVGRFlpeE5RVUZOTEVOQlFVTXNUVUZCVFN4TlFVRk5MRk5CUVZNc1JVRkJSU3hOUVVGTk8wVkJSV2hETEVGQlFVRXNVMEZCVXl4RFFVRkxPMGxCUTFvc1MwRkJTeXhGUVVGRkxGRkJRWE5DTzBkQlF6bENPMFZCUmtRc1FVRkJRU3hUUVVGVExFTkJRVXM3U1VGRFdpeExRVUZMTEVWQlFVVXNVMEZCYzBJN1IwRkRPVUk3UlVGR1JDeEJRVUZCTEZOQlFWTXNRMEZCU3p0SlFVTmFMRXRCUVVzc1JVRkJSU3hUUVVGelFqdEhRVU01UWp0RlFVWkVMRUZCUVVFc1UwRkJVeXhEUVVGTE8wbEJRMW9zUzBGQlN5eEZRVUZGTEZOQlFYTkNPMGRCUXpsQ08wVkJSa1FzUVVGQlFTeFRRVUZUTEVOQlFVczdTVUZEV2l4TFFVRkxMRVZCUVVVc1UwRkJjMEk3UjBGRE9VSTdSVUZHUkN4QlFVRkJMRk5CUVZNc1EwRkJTenRKUVVOYUxFdEJRVXNzUlVGQlJTeFRRVUZ6UWp0SFFVTTVRanRGUVVaRUxFRkJRVUVzVTBGQlV5eERRVUZMTzBsQlExb3NTMEZCU3l4RlFVRkZMRk5CUVhOQ08wZEJRemxDTzBWQlJrUXNRVUZCUVN4VFFVRlRMRU5CUVVzN1NVRkRXaXhMUVVGTExFVkJRVVVzVTBGQmMwSTdSMEZET1VJN1JVRkdSQ3hCUVVGQkxGTkJRVk1zUTBGQlN6dEpRVU5hTEV0QlFVc3NSVUZCUlN4VFFVRnpRanRIUVVNNVFqdEZRVVpFTEVGQlFVRXNWVUZCVlN4RFFVRkpPMGxCUTFvc1MwRkJTeXhGUVVGRkxGTkJRWE5DTzBkQlF6bENPMFZCUmtRc1FVRkJRU3hWUVVGVkxFTkJRVWs3U1VGRFdpeExRVUZMTEVWQlFVVXNTVUZCYzBJN1IwRkRPVUk3UlVGSlJDeEJRVUZCTEZWQlFWVXNRMEZCU3p0SlFVTmlMRmRCUVZjc1JVRkJSU3hGUVVGelFqdEhRVU53UXp0RlFVWkVMRUZCUVVFc1ZVRkJWU3hEUVVGTE8wbEJRMklzVjBGQlZ5eEZRVUZGTEZGQlFYTkNPMGRCUTNCRE8wVkJSa1FzUVVGQlFTeFZRVUZWTEVOQlFVczdTVUZEWWl4WFFVRlhMRVZCUVVVc1UwRkJjMEk3UjBGRGNFTTdSVUZHUkN4QlFVRkJMRlZCUVZVc1EwRkJTenRKUVVOaUxGZEJRVmNzUlVGQlJTeFRRVUZ6UWp0SFFVTndRenRGUVVaRUxFRkJRVUVzVlVGQlZTeERRVUZMTzBsQlEySXNWMEZCVnl4RlFVRkZMRk5CUVhOQ08wZEJRM0JETzBWQlJrUXNRVUZCUVN4VlFVRlZMRU5CUVVzN1NVRkRZaXhYUVVGWExFVkJRVVVzVTBGQmMwSTdSMEZEY0VNN1JVRkdSQ3hCUVVGQkxGVkJRVlVzUTBGQlN6dEpRVU5pTEZkQlFWY3NSVUZCUlN4VFFVRnpRanRIUVVOd1F6dEZRVVpFTEVGQlFVRXNWVUZCVlN4RFFVRkxPMGxCUTJJc1YwRkJWeXhGUVVGRkxGTkJRWE5DTzBkQlEzQkRPMFZCUmtRc1FVRkJRU3hWUVVGVkxFTkJRVXM3U1VGRFlpeFhRVUZYTEVWQlFVVXNVMEZCYzBJN1IwRkRjRU03UlVGR1JDeEJRVUZCTEZWQlFWVXNRMEZCU3p0SlFVTmlMRmRCUVZjc1JVRkJSU3hUUVVGelFqdEhRVU53UXp0RlFVWkVMRUZCUVVFc1YwRkJWeXhEUVVGSk8wbEJRMklzVjBGQlZ5eEZRVUZGTEZOQlFYTkNPMGRCUTNCRE96czdRVU5zUjB3c1FVRkJRU3hKUVVGSk8wRkJRMG9zUzBGQlN6dEJRVU5NTEUxQlFVMHNRMEZCUXp0RlFVTk1MRmRCUVZjc1JVRkJSU3hyUWtGQmEwSTdRMEZEYUVNN08wRkRURVFzUVVGQlFTeFZRVUZWTEVOQlFVTTdSVUZEVkN4SlFVRkpMRVZCUVVVc1dVRkJXVHREUVVOdVFqczdRVUZGUkN4QlFVRkJMRlZCUVZVc1EwRkJRenRGUVVOVUxFOUJRVThzUlVGQlJTeEpRVUZKTzBOQlEyUTdPMEZEVEVRc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRFRpeExRVUZMTEVWQlFVVXNTVUZCU1R0RlFVTllMRTFCUVUwc1JVNXpRazhzU1VGQlNUdEZUWEJDYWtJc1VVRkJVU3hGUVVGRkxFdEJRVXM3UlVGRFppeEhRVUZITEVWQlFVVXNRMEZCUXp0RlFVTk9MRWxCUVVrc1JVRkJSU3hEUVVGRE8wVkJRMUFzVDBGQlR5eEZRVUZGTEVsQlFVazdSVUZGWWl4VlFVRlZMRVZPVUU0c1QwRkJUenREVFZGYU96dEJRVVZFTEVGQlFVRXNXVUZCV1N4RFFVRkRPMFZCUTFnc1UwRkJVeXhGUVVGRkxFbEJRVWs3UlVGRFppeFhRVUZYTEVWQlFVVXNSMEZCUnp0RFFUaENha0k3TzBGQmFFTkVMRUZCU1VVc1dVRktWU3hEUVVsV0xFTkJRVU1zUTBGQlF6dEZRVU5CTEUxQlFVMHNSVTVQU3l4SlFVRkpPMFZOVEdZc1QwRkJUeXhGUVVGRkxFbEJRVWs3UlVGRFlpeFhRVUZYTEVWQlFVVXNUVUZCVFR0RlFVVnVRaXhMUVVGTExFVk9ha0pFTEU5QlFVODdRMDF6UWxvN08wRkJaa2dzUVVGWlNTeFpRVnBSTEVOQlNWWXNRMEZCUXl4QlFWRkZMRTFCUVUwc1EwRkJRenRGUVVOT0xFOUJRVThzUlVGQlJTeEhRVUZITzBOQlEySTdPMEZCWkV3c1FVRnBRa1VzV1VGcVFsVXNRMEZwUWxZc1IwRkJSeXhEUVVGRE8wVkJRMFlzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxGbEJRVmtzUlVGQlJTeEhRVUZITzBOQlEyeENPenRCUVVWRUxFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRjJRbkpETEVGQlFVRXNXVUZCV1N4RFFVRkRPMGxCZDBKVUxGTkJRVk1zUlVGQlJTeEpRVUZKTzBkQlVXeENPMFZCYUVORUxFRkJNRUpKTEZsQk1VSlJMRU5CTUVKU0xFZEJRVWNzUTBGQlF6dEpRVU5HTEV0QlFVc3NSVUZCUlN4SlFVRkpPMGxCUTFnc1RVRkJUU3hGUVVGRkxFbEJRVWs3U1VGRFdpeFpRVUZaTEVWQlFVVXNTVUZCU1R0SFFVTnVRanM3TzBGRE0wTk1MRUZCUVVFc2EwSkJRV3RDTEVOQlFVTTdSVUZEYWtJc1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeE5RVUZOTEVWUWRVSlBMRWxCUVVrN1JVOXlRbXBDTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUld4Q0xHZENRVUZuUWl4RlFVRkZMRmRCUVZjN1JVRkROMElzVFVGQlRTeEZRVUZGTEU5QlFVODdSVUZEWml4UlFVRlJMRVZCUVVVc1RVRkJUVHRGUVVOb1FpeFhRVUZYTEVWQlFVVXNVMEZCVXp0RlFVTjBRaXhQUVVGUExFVkJRVVVzUlVGQlJUdERRV2RFV2pzN1FVRXhSRVFzUVVGWlJTeHJRa0ZhWjBJc1EwRlphRUlzU1VGQlNTeEZRVnBPTEd0Q1FVRnJRaXhCUVdGbUxFOUJRVThzUlVGaVZpeHJRa0ZCYTBJc1FVRmpaaXhOUVVGTkxFTkJRVU03UlVGRFRpeExRVUZMTEVWQlFVVXNTVUZCU1R0RlFVTllMRTFCUVUwc1JVRkJSU3hIUVVGSE8wVkJSVmdzVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1IwRkJSeXhGUVVGRkxFbEJRVWs3UlVGRFZDeExRVUZMTEVWQlFVVXNRMEZCUXp0RlFVVlNMRTlCUVU4c1JVRkJSU3hGUVVGRk8wVkJRMWdzVlVGQlZTeEZVR3BDVGl4UFFVRlBPMFZQYTBKWUxGVkJRVlVzUlVGQlJTeEhRVUZITEVOUWVFSllMRWxCUVVrN1EwOTVRbFE3TzBGQmVrSklMRUZCTWtKRkxHdENRVE5DWjBJc1FVRXlRbVlzVDBGQlR5eERRVUZETzBWQlExQXNVMEZCVXl4RlFVRkZMR2RDUVVGblFqdERRVU0xUWpzN1FVRTNRa2dzUVVFclFrVXNhMEpCTDBKblFpeEJRU3RDWml4TlFVRk5MRU5CUVVNN1JVRkRUaXhUUVVGVExFVkJRVVVzWlVGQlpUdERRVU16UWpzN1FVRkZSQ3hCUVVORkxGVkJSRkVzUTBGdVExb3NhMEpCUVd0Q0xFTkJiME5rTEVsQlFVa3NRMEZCUXp0RlFVTklMRTlCUVU4c1JVRkJSU3hEUVVGRE8wTkJRMWc3TzBGQlNFZ3NRVUZMUlN4VlFVeFJMRU5CYmtOYUxHdENRVUZyUWl4QlFYZERZaXhQUVVGUExFTkJRVU03UlVGRFVDeFRRVUZUTEVWQlFVVXNZVUZCWVN4RFFVRkRMR0ZCUVdFN1EwRkRka003TzBGQlVFZ3NRVUZUUlN4VlFWUlJMRU5CYmtOYUxHdENRVUZyUWl4QlFUUkRZaXhOUVVGTkxFTkJRVU03UlVGRFRpeFRRVUZUTEVWQlFVVXNZVUZCWVN4RFFVRkRMR05CUVdNN1EwRkRlRU03TzBGQlIwZ3NUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzUzBGQlN6dEZRV3BFY2tNc1FVRkJRU3hyUWtGQmEwSXNRMEZCUXp0SlFXdEVaaXhMUVVGTExFVlFla0pOTEVsQlFVazdSMDlwUTJ4Q08wVkJNVVJFTEVGQmIwUkpMR3RDUVhCRVl5eERRVzlFWkN4SlFVRkpMRVZCY0VSU0xHdENRVUZyUWl4QlFYRkVZaXhQUVVGUExFVkJja1JhTEd0Q1FVRnJRaXhCUVhORVlpeE5RVUZOTEVOQlFVTTdTVUZEVGl4TFFVRkxMRVZCUVVVc1NVRkJTVHRIUVVOYU96czdRVUZMVEN4QlFVRkJMR2RDUVVGblFpeERRVUZETzBWQlEyWXNTMEZCU3l4RlFVRkZMRWxCUVVrN1JVRkZXQ3hSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4SFFVRkhMRVZCUVVVc1EwRkJRenRGUVVOT0xFbEJRVWtzUlVGQlJTeERRVUZETzBWQlJWQXNVMEZCVXl4RlFVRkZMR2xDUVVGcFFqdEZRVU0xUWl4VlFVRlZMRVZCUVVVc1IwRkJSeXhEUVVGRExFbEJRVlU3UTBGTE0wSTdPMEZCU0VNc1FVRkJRU3hWUVVGVkxFTkJWbG9zWjBKQlFXZENMRU5CVlVRN1JVRkRXQ3hUUVVGVExFVkJRVVVzWVVGQllUdERRVU42UWpzN1FVRkpTQ3hCUVVGQkxHbENRVUZwUWl4RFFVRkRPMFZCUTJoQ0xGVkJRVlVzUlZBelJVNHNUMEZCVHp0RlR6UkZXQ3hMUVVGTExFVlFla1ZETEU5QlFVODdRMDluUm1RN08wRkJWRVFzUVVGSlJTeHBRa0ZLWlN4RFFVbG1MRVZCUVVVc1EwRkJRenRGUVVORUxFMUJRVTBzUlZCNlJFc3NTVUZCU1R0RlR6QkVaaXhUUVVGVExFVkJRVVVzU1VGQlNUdEZRVU5tTEU5QlFVOHNSVUZCUlN4TlFVRk5PME5CUTJoQ096dEJRM0pHU0N4QlFVRkJMRXRCUVVzc1EwRkJRenRGUVVOS0xGZEJRVmNzUlZKM1FrVXNTVUZCU1R0RFVXNUNiRUk3TzBGQlNFTXNRVUZCUVN4aFFVRmhMRWRCU0dZc1MwRkJTeXhEUVVkbE8wVkJRMmhDTEZkQlFWY3NSVUZCUlN4RFFVRkRPME5CUTJZN08wRkRURWdzUVVGQlFTeFBRVUZQTEVOQlFVTTdSVUZEVGl4VlFVRlZMRVZVUlU0c1QwRkJUenRGVTBSWUxFdEJRVXNzUlZSSlF5eFBRVUZQTzBOVFRXUTdPMEZCV2tRc1FVRkpSU3hQUVVwTExFTkJTVXdzUTBGQlF5eERRVUZETzBWQlEwRXNTMEZCU3l4RlZFTkVMRTlCUVU4N1JWTkJXQ3hQUVVGUExFVkJRVVVzUzBGQlN6dERRVXRtT3p0QlFWaElMRUZCVVVrc1QwRlNSeXhEUVVsTUxFTkJRVU1zUVVGSlJTeE5RVUZOTEVOQlFVTTdSVUZEVGl4UFFVRlBMRVZCUVVVc1IwRkJSenREUVVOaU96dEJRVWxNTEVGQlFVRXNWMEZCVnl4RFFVRkRPMFZCVDFZc1QwRkJUeXhGUVVGRkxGZEJRVmM3UTBGUGNrSTdPMEZCWkVRc1FVRkRSU3hYUVVSVExFVkJRVmdzVjBGQlZ5eERRVU5RTEVOQlFVTXNSVUZFVEN4WFFVRlhMRU5CUTB3c1JVRkJSU3hGUVVSU0xGZEJRVmNzUTBGRFJpeEZRVUZGTEVWQlJGZ3NWMEZCVnl4RFFVTkRMRVZCUVVVc1JVRkVaQ3hYUVVGWExFTkJRMGtzUlVGQlJTeERRVUZETzBWQlEyUXNVMEZCVXl4RlFVRkZMRWxCUVVrN1JVRkRaaXhYUVVGWExFVlVUazRzUjBGQlJ6dEZVMDlTTEZkQlFWY3NSVUZCUlN4TFFVRkxPME5CUTI1Q096dEJRVWxFTEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFMUJRVTA3UlVGVWRFTXNRVUZWU1N4WFFWWlBMRU5CVlZBc1NVRkJTU3hIUVVGSExFZEJRVWNzUTBGQlF6dEpRVU5VTEdOQlFXTXNSVTV5UWxnc1NVRkJTVHRIVFhOQ1VqczdPMEZCU1V3c1FVRkJRU3hqUVVGakxFTkJRVU03UlVGRFlpeFZRVUZWTEVWVU0wSklMRTlCUVU4N1JWTTBRbVFzVTBGQlV5eEZRVUZGTEVsQlFVazdSVUZEWml4UFFVRlBMRVZCUVVVc1RVRkJUVHREUVVOb1FqczdRVUZGUkN4QlFVTkZMRzFDUVVScFFpeERRVU5xUWl4RlFVRkZMRU5CUVVNN1JVRkRSQ3hWUVVGVkxFVkJRVVVzU1VGQlNUdERRVU5xUWpzN1FVRklTQ3hCUVV0RkxHMUNRVXhwUWl4RFFVdHFRaXhGUVVGRkxFTkJRVU03UlVGRFJDeFBRVUZQTEVWQlFVVXNXVUZCV1R0RFFVdDBRanM3UVVGWVNDeEJRVkZKTEcxQ1FWSmxMRU5CUzJwQ0xFVkJRVVVzUjBGSFJTeEZRVUZGTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCUTFZc1QwRkJUeXhGUVVGRkxFZEJRVWM3UTBGRFlqczdRVUZKVEN4QlFVTkZMRmRCUkZNc1EwRkRWQ3hGUVVGRkxFTkJRVU03UlVGRFJDeFBRVUZQTEVWQlFVVXNTVUZCU1R0RlFVTmlMSEZDUVVGeFFpeEZRVUZGTEZOQlFWTTdSVUZEYUVNc1VVRkJVU3hGUVVGRkxFbEJRVmNzUTA1c1JHaENMRWxCUVVrN1JVMXZSRlFzVTBGQlV5eEZRVUZGTEVsQlFVazdSVUZEWml4WFFVRlhMRVZVTDBOUUxFZEJRVWM3UlZOblJGQXNWVUZCVlN4RlFVRkZMRWxCUVVrN1JVRkRhRUlzWTBGQll5eEZRVUZGTEZOQlFWTTdRMEZETVVJN08wRkJWa2dzUVVGWlJTeFhRVnBUTEVOQldWUXNSVUZCUlN4RFFVRkRPMFZCUTBRc1YwRkJWeXhGUVVGRkxFdEJRVXM3UTBGRGJrSTdPMEZEYUVWSUxFRkJRVUVzV1VGQldTeERRVUZETzBWU1ExZ3NVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzUzBGQlN5eEZRVUZGTEVkQlFVYzdSVUZEVml4TlFVRk5MRVZCUVVVc1IwRkJSenRGUVVOWUxGRkJRVkVzUlVGQlJTeE5RVUZOTzBWQlEyaENMRWxCUVVrc1JVRkJSU3h4UWtGQmNVSTdSVUZETTBJc1NVRkJTU3hGUVVGRkxIZENRVUYzUWp0RFVVb3ZRanM3UVVOR1JDeEJRVUZCTEdGQlFXRXNRMEZCUXp0RlFVTmFMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEU5QlFVOHNSVUZCUlN4RFFVRkRPME5CUTFnN08wRkJUVVFzUVVGQlFTeFZRVUZWTEVOQlFVTTdSVUZEVkN4UlFVRlJMRVZCUVVVc1VVRkJVVHREUVV0dVFqczdRVUZLUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQlJuSkRMRUZCUVVFc1ZVRkJWU3hEUVVGRE8wbEJSMUFzVlVGQlZTeEZRVUZGTEV0QlFVczdTVUZEYWtJc1VVRkJVU3hGUVVGRkxFMUJRVTA3UjBGRmJrSTdPenRCUVVWRUxFRkJRVUVzVjBGQlZ5eERRVUZETzBWQlExWXNVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzVDBGQlR5eEZRVUZGTEVOQlFVTTdRMEZMV0RzN1FVRlFSQ3hCUVVsRkxGZEJTbE1zUTBGSlZDeEhRVUZITEVOQlFVTTdSVlJZU2l4TFFVRkxMRVZCUVVVc1NVRkJTVHRGUVVOWUxFMUJRVTBzUlVGQlJTeEpRVUZKTzBWQlExb3NUMEZCVHl4RlFVRkZMRXRCUVVzN1ExTlhZanM3UVVGSFNDeEJRVUZCTEdGQlFXRXNRMEZCUXp0RlFVTmFMRXRCUVVzc1JVRkJSU3hKUVVGSk8wTkJWMW83TzBGQlZFTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzUzBGQlN6dEZRVWh5UXl4QlFVRkJMR0ZCUVdFc1EwRkJRenRKUVVsV0xGRkJRVkVzUlVGQlJTeFJRVUZSTzBsQlEyeENMRWxCUVVrc1JVRkJSU3hEUVVGRE8wbEJRMUFzVFVGQlRTeEZRVUZGTEVsQlFVazdSMEZOWmpzN08wRkJTRU1zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1RVRkJUVHRGUVZSMFF5eEJRVUZCTEdGQlFXRXNRMEZCUXp0SlFWVldMRTFCUVUwc1JVRkJSU3hKUVVGSk8wZEJSV1k3T3p0QlFVVkVMRUZCUVVFc1ZVRkJWU3hEUVVGRE8wVkJRMVFzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZGV0N4UlFVRlJMRVZCUVVVc1VVRkJVVHRGUVVWc1FpeFZRVUZWTEVWWU1VTk9MRTlCUVU4N1JWY3lRMWdzUzBGQlN5eEZXSGhEUXl4UFFVRlBPMFZYZVVOaUxGTkJRVk1zUlVGQlJTeEpRVUZKTzBWQlEyWXNZVUZCWVN4RlFVRkZMRWxCUVVrN1JVRkRia0lzVDBGQlR5eEZVamREUVN4SlFVRkpPME5SZDBSYU96dEJRVlJETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGWWNrTXNRVUZCUVN4VlFVRlZMRU5CUVVNN1NVRlpVQ3hWUVVGVkxFVllha1JTTEhGQ1FVRlBPMGRYZVVSYU96czdRVUZNUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeE5RVUZOTzBWQlpuUkRMRUZCUVVFc1ZVRkJWU3hEUVVGRE8wbEJaMEpRTEVsQlFVa3NSVUZCUlN4TFFVRlpPMGxCUTJ4Q0xGVkJRVlVzUlVGQlJTeFhRVUZYTzBsQlEzWkNMRk5CUVZNc1JVRkJSU3hKUVVGSk8wZEJSV3hDT3pzN1FVRkZSQ3hCUVVGQkxGTkJRVk1zUTBGQlF6dEZWRGREVWl4WFFVRlhMRVZCUVVVc1IwRkJSenRGUVZsb1FpeGpRVUZqTEVWQlFVVXNUMEZCY1VJN1JVRlJja01zVDBGQlR5eEZRVUZGTEZsQlFWazdSVUZEY2tJc1UwRkJVeXhGUVVGRkxFbEJRVWs3UlVGRFppeFBRVUZQTEVWQlFVVXNTVUZCU1N4RFEyNURUaXhKUVVGSk8wVkViME5ZTEdWQlFXVXNSVUZCUlN4SlFVRkpPMFZCUTNKQ0xHTkJRV01zUlVGQlJTeFRRVUZUTzBWQlEzcENMRlZCUVZVc1JVRkJSU3hQUVVGUE8wVkJTMjVDTEZWQlFWVXNSVVkxUTA0c2IwSkJRVTg3UlVVMlExZ3NTMEZCU3l4RlJqRkRReXhQUVVGUE8wTlhLMFJrT3p0QlFWQkVMRUZVV2tVc1UxTlpUeXhCVkZwT0xFMUJRVTBzUTBGQlF6dEZRVU5PTEZWQlFWVXNSVVpvUkZJc2IwSkJRVTg3UTBWcFJGWTdPMEZUWVVRc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNUVUZCVFR0RlFVaDBReXhCUVVGQkxGTkJRVk1zUTBGQlF6dEpRVWxPTEZGQlFWRXNSVUZCUlN4UlFVRlJPMGxCUTJ4Q0xFbEJRVWtzUlVGQlJTeExRVUZaTzBkQlJYSkNPenM3UVVWeVJVUTdPMGRCUlVjN1FVRkRTQ3hCUVVGQkxHRkJRV0VzUTBGQlF6dEZRVU5pTEU5QlFVOHNSVUZCUlN4SlFVRkpPMFZCUTJJc1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDd3lRa0ZCTWtJc1JVRkJSU3hYUVVGWE8wVkJRM2hETEc5RlFVRnZSVHRGUVVOd1JTeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhQUVVGUExFVkJRVVVzUTBGQlF6dERRU3RIVmpzN1FVRnlTRVFzUVVGUlF5eGhRVkpaTEVOQlVWb3NWVUZCVlN4RFFVRkRPMFZCUTFZc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNaMEpCUVdkQ0xFVkJRVVVzUzBGQlN6dEZRVU4yUWl4WlFVRlpMRVZCUVVVc1dVRkJXVHRGUVVNeFFpeDNRa0ZCZDBJc1JVRkJSU3hOUVVGTk8wVkJRVVVzYTBOQlFXdERPME5CUTNCRk96dEJRV0pHTEVGQlpVTXNZVUZtV1N4RFFXVmFMRlZCUVZVc1FVRkJRU3hOUVVGTkxFTkJRVU03UlVGRGFFSXNUMEZCVHl4RlFVRkZMRWRCUVVjN1JVRkRXaXhQUVVGUExFVkJRVVVzUzBGQlN6dEZRVU5rTEV0QlFVc3NSVUZCUlN4SlFVRkpPMFZCUTFnc1ZVRkJWU3hGUVVGRkxFMUJRVTA3UlVGRGJFSXNWMEZCVnl4RlFVRkZMRU5CUVVNN1JVRkRaQ3hOUVVGTkxFVkJRVVVzUTBGQlF6dERRVU5VT3p0QlFYUkNSaXhCUVhkQ1F5eGhRWGhDV1N4RFFYZENXaXhuUWtGQlowSXNRMEZCUXp0RlFVTm9RaXhSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4UlFVRlJMRVZCUVVVc1RVRkJUVHRGUVVOb1FpeHBRMEZCYVVNN1JVRkRha01zYVVKQlFXbENMRVZCUVVVc01FSkJRVEJDTzBOQlF6ZERPenRCUVRkQ1JpeEJRU3RDUXl4aFFTOUNXU3hEUVN0Q1dpeFpRVUZaTzBGQkwwSmlMR0ZCUVdFc1EwRm5RMW9zVTBGQlV5eERRVUZCTzBWQlExSXNNa0pCUVRKQ0xFVkJRVVVzVFVGQlRUdEZRVU51UXl4M1FrRkJkMElzUlVGQlJTeE5RVUZOTzBWQlEyaERMSFZDUVVGMVFpeEZRVUZGTEUxQlFVMDdSVUZETDBJc2FVSkJRV2xDTEVWQlFVVXNiMEpCUVd0Q08wVkJRM0pETEdOQlFXTXNSVUZCUlN4dlFrRkJhMEk3UlVGRGJFTXNZVUZCWVN4RlFVRkZMRzlDUVVGclFqdERRVU5xUXpzN1FVRjJRMFlzUVVGNVEwTXNZVUY2UTFrc1EwRjVRMW9zVTBGQlV5eERRVUZETzBWQlExUXNVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzVlVGQlZTeEZRVUZGTEVkQlFVYzdSVUZEWml4TFFVRkxMRVZCUVVVc1NVRkJTVHRGUVVOWUxESkNRVUV5UWl4RlFVRkZMRTFCUVUwN1JVRkRia01zTWtKQlFUSkNMRVZCUVVVc1YwRkJWenRGUVVONFF5eHhRa0ZCY1VJc1JVRkJSU3hKUVVGSk8wTkJRek5DT3p0QlFXaEVSaXhCUVdsRVF5eGhRV3BFV1N4RFFXbEVXaXhUUVVGVExFTkJRVU1zUjBGQlJ5eERRVUZETzBWQlEySXNUMEZCVHl4RlFVRkZMRXRCUVVzN1JVRkRaQ3hMUVVGTExFVkJRVVVzU1VGQlNUdERRVU5ZT3p0QlFYQkVSaXhCUVhORVF5eGhRWFJFV1N4RFFYTkVXaXhSUVVGUkxFRkJRVUVzVTBGQlV6dEJRWFJFYkVJc1lVRkJZU3hEUVhWRVdpeFRRVUZUTEVGQlFVRXNVMEZCVXl4RFFVRkRPMFZCUTJ4Q0xFOUJRVThzUlVGQlJTeEpRVUZKTzBOQlEySTdPMEZCZWtSR0xFRkJNa1JETEdGQk0wUlpMRU5CTWtSYUxGRkJRVkVzUTBGQlF5eFRRVUZUTzBGQk0wUnVRaXhoUVVGaExFTkJORVJhTEZGQlFWRXNRMEZCUXl4VFFVRlRPMEZCTlVSdVFpeGhRVUZoTEVOQk5rUmFMRkZCUVZFc1EwRkJRenRGUVVOU0xFMUJRVTBzUlVGQlJTeFBRVUZQTzBWQlEyWXNiVUpCUVcxQ0xFVkJRVVVzU1VGQlNUdEZRVU42UWl4clFrRkJhMElzUlVGQlJTeEpRVUZKTzBWQlEzaENMR2RDUVVGblFpeEZRVUZGTEVsQlFVazdSVUZEZEVJc1pVRkJaU3hGUVVGRkxFbEJRVWs3UlVGRGNrSXNWMEZCVnl4RlFVRkZMRWxCUVVrN1EwRkRha0k3TzBGQmNFVkdMRUZCYzBWRExHRkJkRVZaTEVOQmMwVmFMRkZCUVZFc1EwRkJReXhOUVVGTkxFRkJRVUVzVTBGQlV6dEJRWFJGZWtJc1lVRkJZU3hEUVhWRldpeFJRVUZSTEVOQlFVTXNUVUZCVFN4QlFVRkJMRk5CUVZNN1FVRjJSWHBDTEdGQlFXRXNRMEYzUlZvc1RVRkJUU3hCUVVGQkxGRkJRVkVzUTBGQlF6dEZRVU5rTEZWQlFWVXNSVUZCUlN4SlFVRkpPMFZCUTJoQ0xFdEJRVXNzUlVGQlJTeFBRVUZQTzBWQlEyUXNUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhQUVVGUExFVkJRVU1zUTBGQlF5eERRVUZCTEZWQlFWVTdSVUZEYmtJc1NVRkJTU3hGUVVGRkxFOUJRVTg3UTBGRFlqczdRVUU1UlVZc1FVRm5Sa01zWVVGb1Jsa3NRVUZuUmxnc1YwRkJWeXhEUVVGRE8wVkJRMW9zVDBGQlR5eEZRVUZGTEV0QlFVczdRMEZEWkRzN1FVRnNSa1lzUVVGdlJrTXNZVUZ3Umxrc1FVRnZSbGdzV1VGQldTeERRVUZETzBWQlEySXNUMEZCVHl4RlFVRkZMRU5CUVVNN1JVRkRWaXhQUVVGUExFVkJRVVVzUzBGQlN6dERRVU5rT3p0QlFYWkdSaXhCUVhsR1F5eGhRWHBHV1N4QlFYbEdXQ3hYUVVGWExFTkJRVU03UlVGRFdpeFBRVUZQTEVWQlFVVXNRMEZCUXp0RFFVTldPenRCUVROR1JpeEJRVFpHUXl4aFFUZEdXU3hCUVRaR1dDeFpRVUZaTEVOQlFVTXNVMEZCVXl4RFFVRkRPMFZCUTNaQ0xGVkJRVlVzUlVGQlJTeE5RVUZOTzBOQlEyeENPenRCUVM5R1JpeEJRV2xIUXl4aFFXcEhXU3hCUVdsSFdDeFRRVUZUTEVOQlFVTXNVMEZCVXl4RFFVRkRPMFZCUTNCQ0xGbEJRVmtzUlVGQlJTeExRVUZMTzBWQlEyNUNMRzFDUVVGdFFpeEZRVUZGTEVsQlFVazdSVUZEZWtJc1owSkJRV2RDTEVWQlFVVXNTVUZCU1R0RlFVTjBRaXhsUVVGbExFVkJRVVVzU1VGQlNUdEZRVU55UWl4WFFVRlhMRVZCUVVVc1NVRkJTVHREUVVOcVFqczdRVUYyUjBZc1FVRjVSME1zWVVGNlIxa3NRVUY1UjFnc1UwRkJVeXhEUVVGRE8wVkJRMVlzVFVGQlRTeEZRVUZGTEVsQlFVazdSVUZEV2l4TlFVRk5MRVZCUVVVc1NVRkJTVHREUVVOYU96dEJRVFZIUml4QlFUaEhReXhoUVRsSFdTeEJRVGhIV0N4UlFVRlJMRU5CUVVNN1JVRkRWQ3hUUVVGVExFVkJRVVVzUjBGQlJ6dERRVU5rT3p0QlFXaElSaXhCUVd0SVF5eGhRV3hJV1N4QlFXdElXQ3hSUVVGUkxFTkJRVU1zVTBGQlV5eERRVUZETzBWQlEyNUNMRXRCUVVzc1JVRkJSU3hMUVVGTE8wTkJRMW83TzBGQlIwWXNWMEZCVnp0QlFVTllMRUZCUVVFc1RVRkJUU3hEUVVGRExHRkJRV0VzUTBGQlF6dEZRVU53UWl4UFFVRlBMRVZCUVVVc1MwRkJTenREUVVOa096dEJRemRJUkRzN1IwRkZSenRCUVVOSUxFRkJRME1zWVVGRVdTeERRVU5hTEZOQlFWTXNRMEZCUXp0RlFVTlVMR3RDUVVGclFpeEZRVUZGTEUxQlFVMDdSVUZETVVJc2JVSkJRVzFDTEVWQlFVVXNTVUZCU1R0RFFVTjZRanM3UVVGS1JpeEJRVXRETEdGQlRGa3NRMEZMV2l4blFrRkJaMElzUTBGQlF6dEZRVU5vUWl4UFFVRlBMRVZCUVVVc1EwRkJRenREUVVOV096dEJRVkJHTEVGQlVVTXNZVUZTV1N4RFFWRmFMR2xDUVVGcFFpeERRVUZETzBWQlEycENMRTlCUVU4c1JVRkJSU3hEUVVGRE8wTkJRMVk3TzBGQlZrWXNRVUZYUXl4aFFWaFpMRU5CVjFvc1VVRkJVU3hEUVVGRE8wVkJRMUlzWTBGQll5eEZRVUZGTEU5QlFVODdRMEZEZGtJN08wRkJSMFlzVlVGQlZTeERRVUZXTEU5QlFWVTdSVUZEVkN4RlFVRkZPMGxCUTBRc1QwRkJUeXhGUVVGRkxFTkJRVU03TzBWQlIxZ3NTVUZCU1R0SlFVTklMRTlCUVU4c1JVRkJSU3hEUVVGRE96czdPMEZEZWtKYU96dEhRVVZITzBGQlJVZ3NRVUZCUVN4WFFVRlhMRU5CUVVNN1JVRkRXQ3hWUVVGVkxFVkJRVVVzZDBKQlFYZENPME5CUTNCRE96dEJRMDVFT3p0SFFVVkhPMEZCUlVnc1FVRkRReXhoUVVSWkxFTkJRMW9zVTBGQlV5eERRVUZETzBWQlRWUTdPenRMUVVkSE8wTkJVVWc3TzBGQmJFSkdMRUZCUlVVc1lVRkdWeXhEUVVOYUxGTkJRVk1zUTBGRFVpeFRRVUZUTEVOQlFVTTdSVUZEVWl4UFFVRlBMRVZCUVVVc1EwRkJRenRGUVVOV0xGVkJRVlVzUlVGQlJTeHJRa0ZCYTBJN1EwRkRMMEk3TzBGQlRFZ3NRVUZYUlN4aFFWaFhMRU5CUTFvc1UwRkJVeXhEUVZWU0xGTkJRVk1zUTBGQlFTeEJRVUZCTEVkQlFVTXNSVUZCU3l4RlFVRkZMRUZCUVZBc1IwRllXaXhoUVVGaExFTkJRMW9zVTBGQlV5eERRVlZaTEZOQlFWTXNRVUZCUVN4SlFVRkxMRVZCUVVFc1FVRkJRU3hIUVVGRExFRkJRVUVzUjBGQlRUdEZRVU40UXl4VlFVRlZMRVZCUVVVc1EwRkJRenREUVVOaU96dEJRV0pJTEVGQlpVVXNZVUZtVnl4RFFVTmFMRk5CUVZNc1EwRmpVaXhIUVVGSExFRkJRVUVzVTBGQlV5eERRVUZETzBWQlExb3NaVUZCWlN4RlFVRkZMRmRCUVZjN1EwRkROVUk3TzBGRGJrSklPenRIUVVWSE8wRkJSVWdzUVVGRFF5eGhRVVJaTEVOQlExb3NhMEpCUVd0Q0xFTkJRVU03UlVGRGJFSXNVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzVFVGQlRTeEZRVUZGTEVsQlFVazdSVUZEV2l4VlFVRlZMRVZCUVVVc1NVRkJTVHREUVVOb1FqczdRVUZNUml4QlFVOURMR0ZCVUZrc1EwRlBXaXh2UWtGQmIwSXNRMEZCUXp0RlFVTndRaXhSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4TlFVRk5MRVZCUVVVc1NVRkJTVHRGUVVOYUxFdEJRVXNzUlVGQlJTeEpRVUZKTzBWQlExZ3NTVUZCU1N4RlFVRkZMRWRCUVVjN1JVRkRWQ3hIUVVGSExFVkJRVVVzUjBGQlJ6dEZRVU5TTEZkQlFWY3NSVUZCUlN4TFFVRkxPMFZCUTJ4Q0xGVkJRVlVzUlVGQlJTeExRVUZMTzBWQlEycENMRlZCUVZVc1JVRkJSU3g1UWtGQk1rTXNRMEZCUXl4VFFVRlRPMFZCUTJwRkxFMUJRVTBzUlVGQlJTeFBRVUZQTzBWQlEyWXNUMEZCVHl4RlFVRkZMRU5CUVVNN1JVRkRWaXd5UWtGQk1rSXNSVUZCUlN4TlFVRk5PMFZCUTI1RExGVkJRVlVzUlVGQlJTeHZRa0ZCYjBJN1EwRkRhRU03TzBGQmNFSkdMRUZCYzBKRExHRkJkRUpaTEVOQmMwSmFMRzlDUVVGdlFpeEJRVUZCTEUxQlFVMHNRMEZCUXp0RlFVTXhRaXhUUVVGVExFVkJRVVVzWlVGQlpUdERRVU14UWpzN1FVRjRRa1lzUVVFd1FrTXNZVUV4UWxrc1EwRXdRbG9zYTBKQlFXdENMRU5CUVVNc1lVRkJZVHRCUVRGQ2FrTXNZVUZCWVN4RFFUSkNXaXhyUWtGQmEwSXNRMEZCUXl4dlFrRkJiMElzUTBGQlF6dEZRVU4yUXl4UFFVRlBMRVZCUVVVc1NVRkJTVHREUVVOaU96dEJRVGRDUml4QlFTdENReXhoUVM5Q1dTeERRU3RDV2l4aFFVRmhMRU5CUVVNN1JVRkRZaXhQUVVGUExFVkJRVVVzUTBGQlF6dEZRVU5XTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc2JVSkJRVzFDTEVWQlFVVXNZVUZCWVR0RlFVTnNReXhwUWtGQmFVSXNSVUZCUlN4VFFVRlRPMFZCUXpWQ0xHVkJRV1VzUlVGQlJTeFBRVUZQTzBWQlEzaENMRlZCUVZVc1JVRkJSU3hyUWtGQmEwSTdRMEZET1VJN08wRkJkRU5HTEVGQmQwTkRMR0ZCZUVOWkxFTkJkME5hTEdkQ1FVRm5RaXhEUVVGRE8wVkJRMmhDTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xFOUJRVThzUlVGQlJTeERRVUZETzBWQlExWXNUVUZCVFN4RlFVRkZMRWxCUVVrN1JVRkRXaXhMUVVGTExFVkJRVVVzU1VGQlNUdERRVU5ZT3p0QlJXNUVSanM3UjBGRlJ6dEJRMFJJTEVGQlJVTXNWVUZHVXl4RFFVVlVMRkZCUVZFc1EwRkJRenRGUVVOU0xGVkJRVlVzUlVGQlJTeEpRVUZKTzBWQlEyaENMRlZCUVZVc1JVRkJSU3hOUVVGTk8wVkJRMnhDTERKQ1FVRXlRaXhGUVVGRkxGZEJRVmM3UTBGelFuaERPenRCUVROQ1JpeEJRVTlGTEZWQlVGRXNRMEZGVkN4UlFVRlJMRVZCUzFBc1FVRkJRU3hMUVVGRExFVkJRVThzVFVGQlRTeEJRVUZpTEVWQlFXVTdSVUZEWml4TFFVRkxMRVZFU2xFc1NVRkJTVHRGUTB0cVFpeFRRVUZUTEVWRVJVMHNTVUZCU1R0RlEwUnVRaXhOUVVGTkxFVkVSMDhzUjBGQlJ6dEZRMFpvUWl4UFFVRlBMRVZFUjA4c1IwRkJSeXhEUVVGRExFZEJRVWM3UlVOR2NrSXNWVUZCVlN4RlJGQkZMRTlCUVU4N1JVTlJia0lzVDBGQlR5eEZRVUZGTEZsQlFWazdSVUZEY2tJc1RVRkJUU3hGUVVGRkxFOUJRVTg3UlVGRFppeGhRVUZoTEVWQlFVVXNSMEZCUnp0RFFVOXNRanM3UVVGMFFrZ3NRVUZwUWtjc1ZVRnFRazhzUTBGRlZDeFJRVUZSTEVWQlMxQXNRVUZCUVN4TFFVRkRMRVZCUVU4c1RVRkJUU3hCUVVGaUxFTkJWVU1zVFVGQlRTeERRVUZETzBWQlExQXNWVUZCVlN4RlJHWkRMRTlCUVU4N1JVTm5RbXhDTEV0QlFVc3NSVVJtVHl4SlFVRkpPMFZEWjBKb1FpeGxRVUZsTEVWQlFVVXNTVUZCU1R0RFFVTnlRanM3UVVGeVFrb3NRVUYxUWtVc1ZVRjJRbEVzUTBGRlZDeFJRVUZSTEVOQmNVSlFMRk5CUVZNc1EwRkJRenRGUVVOVUxFOUJRVThzUlVSUVl5eEhRVUZITzBWRFVYaENMRTFCUVUwc1JVRkJSU3hQUVVGUE8wTkJRMlk3TzBGQk1VSklMRUZCT0VKRExGVkJPVUpUTEVOQk9FSlVMRkZCUVZFc1FVRkJRU3hUUVVGVExFZEJRVWNzVTBGQlV5eERRVUZETzBWQlF6ZENMRlZCUVZVc1JVRkJSU3hKUVVGSk8wTkJRMmhDT3p0QlFXaERSaXhCUVd0RFF5eFZRV3hEVXl4RFFXdERWQ3hUUVVGVExFTkJRVU03UlVGRFZDeFZRVUZWTEVWQlFVVXNUVUZCVFR0RlFVTnNRaXd5UWtGQk1rSXNSVUZCUlN4WFFVRlhPME5CZVVKNFF6czdRVUUzUkVZc1FVRnpRMFVzVlVGMFExRXNRMEZyUTFRc1UwRkJVeXhEUVVsU0xGRkJRVkVzUTBGQlF6dEZRVU5TTEU5QlFVOHNSVUZCUlN4WlFVRlpPMFZCUTNKQ0xFbEJRVWtzUlVGQlJTeERRVUZETzBWQlExQXNVVUZCVVN4RlFVRkZMRTFCUVUwN1EwRnRRbWhDT3p0QlFUVkVTQ3hCUVRKRFJ5eFZRVE5EVHl4RFFXdERWQ3hUUVVGVExFTkJTVklzVVVGQlVTeERRVXRRTEVsQlFVa3NRMEZCUXp0RlFVTktMRXRCUVVzc1JVUjJRazBzU1VGQlNUdEZRM2RDWml4TlFVRk5MRVZFZGtKTExFbEJRVWs3UlVOM1FtWXNUVUZCVFN4RlJIUkNUU3hIUVVGSExFTkJRVU1zUjBGQlJ6dEZRM1ZDYmtJc1ZVRkJWU3hGUkRGRFF5eFBRVUZQTzBWRE1rTnNRaXhQUVVGUExFVkJRVVVzUzBGQlN6dEZRVU5rTERKQ1FVRXlRaXhGUVVGRkxFOUJRVTg3UlVGRGNFTXNWVUZCVlN4RlFVRkZMR3RDUVVGclFqdEZRVU01UWl4aFFVRmhMRVZFTlVKRUxFbEJRVWs3UTBNMlFtaENPenRCUVhCRVNpeEJRWGRFU1N4VlFYaEVUU3hEUVd0RFZDeFRRVUZUTEVOQlNWSXNVVUZCVVN4QlFXZENUaXhQUVVGUExFTkJSVkFzU1VGQlNTeEZRWGhFVWl4VlFVRlZMRU5CYTBOVUxGTkJRVk1zUTBGSlVpeFJRVUZSTEVGQmFVSk9MRTFCUVUwc1EwRkRUaXhKUVVGSkxFTkJRVU03UlVGRFNpeFZRVUZWTEVWRWRFUkJMRTlCUVU4N1EwTjFSR3BDSW4wPSAqL1xuIiwiJHNwZWVkOiAwLjNzO1xuXG4vLyBDb2xvcnNcbiRyZWQ6ICNDMjAwMDA7XG4kcmVkX2RrOiAjOEYwMDAwO1xuXG4kd2hpdGU6ICNGRkZGRkY7XG4kYmxhY2s6ICMwMDAwMDA7XG5cbi8vIEZvbnQgV2VpZ2h0c1xuJGxpZ2h0OiAzMDA7XG4kbm9ybWFsOiA0MDA7XG4kYm9sZDogNzAwO1xuXG4vLyBNZWRpYSBRdWVyaWVzXFxcbiRtaW5TTTogXCJzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQyNnB4KVwiO1xuJG1pbk1EOiBcInNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpXCI7XG4kbWluTEc6IFwic2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpXCI7XG4kbWluWEw6IFwic2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNDQwcHgpXCI7XG5cbiRtYXhTTTogXCJzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KVwiO1xuJG1heE1EOiBcInNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpXCI7XG4kbWF4TEc6IFwic2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpXCI7XG4kbWF4WEw6IFwic2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxNDM5cHgpXCI7XG5cbiRoZWFkZXJIZWlnaHQ6IDcwcHg7XG4iLCIvKiBHUklEICovXG4kY29sdW1uczogMTE7XG4kY29sdW1uc01EOiA0O1xuJGNvbHVtbnNTTTogMjtcbiRndXR0ZXI6IDIwcHg7XG4kbWF4LXdpZHRoOiAxNDAwcHg7XG5cbi5yb3cge1xuICBtYXgtd2lkdGg6ICRtYXgtd2lkdGg7XG5cbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuXG4gIG1hcmdpbjogYXV0bztcbiAgcGFkZGluZzogMCAkZ3V0dGVyIC8gMjtcbn1cblxuLnNwYWNlX2JldHdlZW4ge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5hbGlnbl9jZW50ZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG5bY2xhc3NePVwiY29sXCJdIHtcbiAgLy9mbGV4LWdyb3c6IDE7XG4gIHBhZGRpbmc6IDAgJGd1dHRlciAvIDI7XG59XG5cbi8qIEdlbmVyYWwgKi9cbkBmb3IgJGkgZnJvbSAxIHRocm91Z2ggJGNvbHVtbnMge1xuICAuY29sXyN7JGl9IHtcbiAgICB3aWR0aDogKCRpIC8gJGNvbHVtbnMpICogMTAwJTtcbiAgfVxufVxuXG5AZm9yICRpIGZyb20gMCB0aHJvdWdoICRjb2x1bW5zIC0gMSB7XG4gIC5wdXNoXyN7JGl9IHtcbiAgICBtYXJnaW4tbGVmdDogKCRpIC8gJGNvbHVtbnMpICogMTAwJTtcbiAgfVxufVxuXG4vKiBQaG9uZSAqL1xuQG1lZGlhICN7JG1heFNNfSB7XG4gIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggJGNvbHVtbnNTTSB7XG4gICAgLmNvbF9zbV8jeyRpfSB7XG4gICAgICB3aWR0aDogKCRpIC8gJGNvbHVtbnNTTSkgKiAxMDAlO1xuICAgIH1cbiAgfVxuXG4gIEBmb3IgJGkgZnJvbSAwIHRocm91Z2ggJGNvbHVtbnNTTSAtIDEge1xuICAgIC5wdXNoX3NtXyN7JGl9IHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAoJGkgLyAkY29sdW1uc1NNKSAqIDEwMCU7XG4gICAgfVxuICB9XG59XG5cbi8qIFRhYmxldCAqL1xuQG1lZGlhICN7JG1pblNNfSB7XG4gIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggJGNvbHVtbnNNRCB7XG4gICAgLmNvbF9tZF8jeyRpfSB7XG4gICAgICB3aWR0aDogKCRpIC8gJGNvbHVtbnNNRCkgKiAxMDAlO1xuICAgIH1cbiAgfVxuXG4gIEBmb3IgJGkgZnJvbSAwIHRocm91Z2ggJGNvbHVtbnNNRCAtIDEge1xuICAgIC5wdXNoX21kXyN7JGl9IHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAoJGkgLyAkY29sdW1uc01EKSAqIDEwMCU7XG4gICAgfVxuICB9XG59XG5cbi8qIExhcHRvcCAqL1xuQG1lZGlhICN7JG1pbk1EfSB7XG4gIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggJGNvbHVtbnMge1xuICAgIC5jb2xfbGdfI3skaX0ge1xuICAgICAgd2lkdGg6ICgkaSAvICRjb2x1bW5zKSAqIDEwMCU7XG4gICAgfVxuICB9XG5cbiAgQGZvciAkaSBmcm9tIDAgdGhyb3VnaCAkY29sdW1ucyAtIDEge1xuICAgIC5wdXNoX2xnXyN7JGl9IHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAoJGkgLyAkY29sdW1ucykgKiAxMDAlO1xuICAgIH1cbiAgfVxufVxuXG4vKiBEZXNrdG9wICovXG5AbWVkaWEgI3skbWluTEd9IHtcbiAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAkY29sdW1ucyB7XG4gICAgLmNvbF94bF8jeyRpfSB7XG4gICAgICB3aWR0aDogKCRpIC8gJGNvbHVtbnMpICogMTAwJTtcbiAgICB9XG4gIH1cblxuICBAZm9yICRpIGZyb20gMCB0aHJvdWdoICRjb2x1bW5zIC0gMSB7XG4gICAgLnB1c2hfeGxfI3skaX0ge1xuICAgICAgbWFyZ2luLWxlZnQ6ICgkaSAvICRjb2x1bW5zKSAqIDEwMCU7XG4gICAgfVxuICB9XG59XG5cbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0NTUy9DU1NfR3JpZF9MYXlvdXQvUmVhbGl6aW5nX2NvbW1vbl9sYXlvdXRzX3VzaW5nX0NTU19HcmlkX0xheW91dFxuIiwiLmxvZ29fcGF0aCB7XG4gIGZpbGw6IGN1cnJlbnRDb2xvcjtcbn1cblxuLnNpdGVfbG9nbyB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4iLCJcbi5oZWFkZXIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAkaGVhZGVySGVpZ2h0O1xuXG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiAxMDAwO1xuXG4gIGJhY2tncm91bmQ6ICRyZWQ7XG59XG5cbi5oZWFkZXJfbG9nbyB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDFlbTtcblxuICBhIHtcbiAgICBoZWlnaHQ6ICRoZWFkZXJIZWlnaHQ7XG5cbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgICBjb2xvcjogJHdoaXRlO1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBvcGFjaXR5OiAwLjc7XG4gICAgfVxuICB9XG5cbiAgc3ZnIHtcbiAgICB3aWR0aDogMjZweDtcbiAgICBoZWlnaHQ6IDMxcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiA3cHg7XG4gIH1cblxuICBAbWVkaWEgI3skbWluTUR9IHtcbiAgICBmb250LXNpemU6IDI0cHg7XG5cbiAgICBzdmcge1xuICAgICAgd2lkdGg6IDM2cHg7XG4gICAgICBoZWlnaHQ6IDQycHg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDE0cHg7XG4gICAgfVxuICB9XG59XG4iLCIuaGVhZGVyX25hdl9idXR0b24ge1xuICB3aWR0aDogMzBweDtcbiAgaGVpZ2h0OiAkaGVhZGVySGVpZ2h0O1xuXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LWluZGVudDogLTk5OTk5OXB4O1xuICB6LWluZGV4OiAxMDtcblxuICBzcGFuLFxuICAmOmJlZm9yZSxcbiAgJjphZnRlciB7XG4gICAgd2lkdGg6IDI1cHg7XG4gICAgaGVpZ2h0OiAycHg7XG5cbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAzNHB4O1xuICAgIHJpZ2h0OiAwO1xuXG4gICAgY29udGVudDogXCJcIjtcbiAgICBiYWNrZ3JvdW5kOiAkd2hpdGU7XG4gICAgdHJhbnNpdGlvbjogYWxsICRzcGVlZDtcbiAgfVxuXG4gICY6YmVmb3JlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTlweCk7XG4gIH1cblxuICAmOmFmdGVyIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoOXB4KTtcbiAgfVxuXG4gIC5tZW51X29wZW4gJiB7XG4gICAgc3BhbiB7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgIH1cblxuICAgICY6YmVmb3JlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSByb3RhdGUoNDVkZWcpO1xuICAgIH1cblxuICAgICY6YWZ0ZXIge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHJvdGF0ZSgtNDVkZWcpO1xuICAgIH1cbiAgfVxuXG4gIEBtZWRpYSAjeyRtaW5NRH0ge1xuICAgIHdpZHRoOiAkaGVhZGVySGVpZ2h0O1xuXG4gICAgc3BhbixcbiAgICAmOmJlZm9yZSxcbiAgICAmOmFmdGVyIHtcbiAgICAgIHdpZHRoOiAzMHB4O1xuICAgIH1cbiAgfVxufVxuXG5cbi5oZWFkZXJfbmF2X21lbnUge1xuICB3aWR0aDogMTAwJTtcblxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcblxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMCUpO1xuICB0cmFuc2l0aW9uOiBhbGwgJHNwZWVkICogMjtcblxuICAubWVudV9vcGVuICYge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgfVxufVxuXG5cbi5tYWluX25hdl93cmFwcGVyIHtcbiAgYmFja2dyb3VuZDogJHJlZDtcbiAgY29sb3I6ICR3aGl0ZTtcblxuICBoMiB7XG4gICAgaGVpZ2h0OiAkaGVhZGVySGVpZ2h0O1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBwYWRkaW5nOiAyMHB4IDA7XG4gIH1cbn1cbiIsIi5tYWluIHtcbiAgcGFkZGluZy10b3A6ICRoZWFkZXJIZWlnaHQ7XG5cbiAgLmhlcm9fd3JhcHBlciArICYge1xuICAgIHBhZGRpbmctdG9wOiAwO1xuICB9XG59XG4iLCIuZm9vdGVyIHtcbiAgYmFja2dyb3VuZDogJHJlZDtcbiAgY29sb3I6ICR3aGl0ZTtcblxuICBhIHtcbiAgICBjb2xvcjogJHdoaXRlO1xuICAgIHBhZGRpbmc6IDAgMnB4O1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBvcGFjaXR5OiAwLjY7XG4gICAgfVxuICB9XG59XG5cbi5mb290ZXJfdG9wIHtcbiAgJixwLGgzLGg0LGg1LGg2IHtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgZm9udC13ZWlnaHQ6ICRub3JtYWw7XG4gICAgbGluZS1oZWlnaHQ6IDEuNWVtO1xuICB9XG5cbiAgcGFkZGluZzogNDVweCAwIDY0cHg7XG5cbiAgQG1lZGlhICN7JG1heExHfSB7XG4gICAgLnJvdyA+IGRpdiB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogJGd1dHRlcjtcbiAgICB9XG4gIH1cbn1cblxuLmZvb3Rlcl9ib3R0b20ge1xuICBiYWNrZ3JvdW5kOiAkcmVkX2RrO1xuICBmb250LXNpemU6IDE0cHg7XG4gIHBhZGRpbmc6IDIxcHggMDtcbn1cblxuLmZvb3Rlcl91dGlsaXR5X25hdiB7XG4gIHVsIHtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICB9XG5cbiAgbGkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcblxuICAgICsgbGk6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6IFwifFwiO1xuICAgIH1cbiAgfVxufVxuXG4uZm9vdGVyX25hdiB7XG4gIHVsIHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0byBhdXRvO1xuICAgIGdyaWQtZ2FwOiAkZ3V0dGVyIC8gMiAkZ3V0dGVyO1xuXG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGZvbnQtd2VpZ2h0OiAkbGlnaHQ7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB9XG5cbiAgbGkge1xuICAgIGxpbmUtaGVpZ2h0OiAxLjJlbTtcbiAgfVxufVxuIiwiLnNjaGVtYV9uYW1lIHtcbiAgQGluY2x1ZGUgdmlzdWFsbHlfaGlkZTtcbn1cbiIsIkBtaXhpbiB2aXN1YWxseV9oaWRlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgY2xpcDogcmVjdCgxcHggMXB4IDFweCAxcHgpO1xuICBjbGlwOiByZWN0KDFweCwgMXB4LCAxcHgsIDFweCk7XG59XG5cbkBtaXhpbiBpbWdfYmxvY2sge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLy8gVHlwZVxuQG1peGluIGZ3X2xpZ2h0IHtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbn1cblxuQG1peGluIGZ3X3JlZyB7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5cbkBtaXhpbiBmd19ib2xkIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuQG1peGluIGxldHRlcnNwYWNlKCR0cmFjazogMCkge1xuICBsZXR0ZXItc3BhY2luZzogKCR0cmFjayAvIDEwMDApICogMWVtO1xufVxuXG5cbi8vIEJ1dHRvbnNcbkBtaXhpbiBidG5fYmFzZSB7XG4gIEBpbmNsdWRlIGZ3X2xpZ2h0O1xuICBAaW5jbHVkZSBsZXR0ZXJzcGFjZSgxKTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LXNpemU6IDE4cHg7XG4gIHBhZGRpbmc6IDE0cHggJGd1dHRlcjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zO1xufVxuXG5AbWl4aW4gYnRuX3JldmVyc2Uge1xuICBAaW5jbHVkZSBidG5fYmFzZTtcbiAgYmFja2dyb3VuZDogcmdiYSgkcmVkLDAuOSk7XG4gIGNvbG9yOiAkd2hpdGU7XG5cbiAgJjpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogcmdiYSgkcmVkLDAuNik7XG4gIH1cbn1cbiIsIi5oZXJvX3dyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDA7XG59XG5cbi5oZXJvIHtcblxufVxuXG4uaGVyb19pdGVtIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBAbWVkaWEgI3skbWluTUR9IHtcbiAgICBtYXgtaGVpZ2h0OiA2MDBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICB9XG59XG5cbi5oZXJvX2ltYWdlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAwO1xuXG4gIGltZyB7XG4gICAgQGluY2x1ZGUgaW1nX2Jsb2NrO1xuICB9XG59XG5cbi5oZXJvX2NvbnRlbnQge1xuICB3aWR0aDogMTAwJTtcblxuICBAbWVkaWEgI3skbWluTUR9IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICBib3R0b206IDEwcHg7XG4gIH1cblxuICBAbWVkaWEgI3skbWluWEx9IHtcbiAgICBib3R0b206IDM2cHg7XG4gIH1cbn1cblxuLmhlcm9fY29weSB7XG4gIHdpZHRoOiAxMDAlO1xuXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICBiYWNrZ3JvdW5kOiAkcmVkO1xuICBjb2xvcjogJHdoaXRlO1xuICBmb250LXNpemU6IDI0cHg7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIHBhZGRpbmc6ICRndXR0ZXI7XG5cbiAgQG1lZGlhICN7JG1pbk1EfSB7XG4gICAgYmFja2dyb3VuZDogcmdiYSgkcmVkLDAuNzUpO1xuICB9XG5cbiAgQG1lZGlhICN7JG1pbkxHfSB7XG4gICAgbGVmdDogJGd1dHRlciAqIC0xO1xuICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAgIGZvbnQtc2l6ZTogMzZweDtcbiAgfVxufVxuXG4uaGVyb19jdGEge1xuICBAaW5jbHVkZSBidG5fcmV2ZXJzZTtcblxuICBAbWVkaWEgI3skbWluTEd9IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbGVmdDogJGd1dHRlciAqIC0xO1xuICB9XG59XG4iLCIvKlxuICogIE93bCBDYXJvdXNlbCAtIENvcmVcbiAqL1xuLm93bC1jYXJvdXNlbCB7XG5cdGRpc3BsYXk6IG5vbmU7XG5cdHdpZHRoOiAxMDAlO1xuXHQtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuXHQvKiBwb3NpdGlvbiByZWxhdGl2ZSBhbmQgei1pbmRleCBmaXggd2Via2l0IHJlbmRlcmluZyBmb250cyBpc3N1ZSAqL1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdHotaW5kZXg6IDE7XG5cblx0Lm93bC1zdGFnZSB7XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdC1tcy10b3VjaC1hY3Rpb246IHBhbi1ZO1xuXHRcdHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xuXHRcdC1tb3otYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuOyAvKiBmaXggZmlyZWZveCBhbmltYXRpb24gZ2xpdGNoICovXG5cdH1cblxuXHQub3dsLXN0YWdlOmFmdGVyIHtcblx0XHRjb250ZW50OiBcIi5cIjtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRjbGVhcjogYm90aDtcblx0XHR2aXNpYmlsaXR5OiBoaWRkZW47XG5cdFx0bGluZS1oZWlnaHQ6IDA7XG5cdFx0aGVpZ2h0OiAwO1xuXHR9XG5cblx0Lm93bC1zdGFnZS1vdXRlciB7XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdG92ZXJmbG93OiBoaWRkZW47XG5cdFx0LyogZml4IGZvciBmbGFzaGluZyBiYWNrZ3JvdW5kICovXG5cdFx0LXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDBweCwgMHB4LCAwcHgpO1xuXHR9XG5cblx0Lm93bC13cmFwcGVyLFxuXHQub3dsLWl0ZW17XG5cdFx0LXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG5cdFx0LW1vei1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG5cdFx0LW1zLWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcblx0XHQtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwwLDApO1xuXHRcdC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLDAsMCk7XG5cdFx0LW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwwLDApO1xuXHR9XG5cblx0Lm93bC1pdGVtIHtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0bWluLWhlaWdodDogMXB4O1xuXHRcdGZsb2F0OiBsZWZ0O1xuXHRcdC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuXHRcdC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cdFx0LXdlYmtpdC10b3VjaC1jYWxsb3V0OiBub25lO1xuXHR9XG5cdC5vd2wtaXRlbSBpbWcge1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdHdpZHRoOiAxMDAlO1xuXHR9XG5cblx0Lm93bC1uYXYuZGlzYWJsZWQsXG5cdC5vd2wtZG90cy5kaXNhYmxlZCB7XG5cdFx0ZGlzcGxheTogbm9uZTtcblx0fVxuXG5cdC5vd2wtbmF2IC5vd2wtcHJldixcblx0Lm93bC1uYXYgLm93bC1uZXh0LFxuXHQub3dsLWRvdCB7XG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHRcdC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG5cdFx0LWtodG1sLXVzZXItc2VsZWN0OiBub25lO1xuXHRcdC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG5cdFx0LW1zLXVzZXItc2VsZWN0OiBub25lO1xuXHRcdHVzZXItc2VsZWN0OiBub25lO1xuXHR9XG5cblx0Lm93bC1uYXYgYnV0dG9uLm93bC1wcmV2LFxuXHQub3dsLW5hdiBidXR0b24ub3dsLW5leHQsXG5cdGJ1dHRvbi5vd2wtZG90IHtcblx0XHRiYWNrZ3JvdW5kOiBub25lO1xuXHRcdGNvbG9yOiBpbmhlcml0O1xuXHRcdGJvcmRlcjogbm9uZTtcblx0XHRwYWRkaW5nOjAhaW1wb3J0YW50O1xuXHRcdGZvbnQ6IGluaGVyaXQ7XG5cdH1cblxuXHQmLm93bC1sb2FkZWQge1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHR9XG5cblx0Ji5vd2wtbG9hZGluZyB7XG5cdFx0b3BhY2l0eTogMDtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0fVxuXG5cdCYub3dsLWhpZGRlbiB7XG5cdFx0b3BhY2l0eTogMDtcblx0fVxuXG5cdCYub3dsLXJlZnJlc2ggLm93bC1pdGVtIHtcblx0XHR2aXNpYmlsaXR5OiBoaWRkZW47XG5cdH1cblxuXHQmLm93bC1kcmFnIC5vd2wtaXRlbSB7XG5cdFx0dG91Y2gtYWN0aW9uOiBwYW4teTtcblx0XHQtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xuXHRcdC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG5cdFx0LW1zLXVzZXItc2VsZWN0OiBub25lO1xuXHRcdHVzZXItc2VsZWN0OiBub25lO1xuXHR9XG5cblx0Ji5vd2wtZ3JhYiB7XG5cdFx0Y3Vyc29yOiBtb3ZlO1xuXHRcdGN1cnNvcjogZ3JhYjtcblx0fVxuXG5cdCYub3dsLXJ0bCB7XG5cdFx0ZGlyZWN0aW9uOiBydGw7XG5cdH1cblxuXHQmLm93bC1ydGwgLm93bC1pdGVtIHtcblx0XHRmbG9hdDogcmlnaHQ7XG5cdH1cbn1cblxuLyogTm8gSnMgKi9cbi5uby1qcyAub3dsLWNhcm91c2VsIHtcblx0ZGlzcGxheTogYmxvY2s7XG59XG4iLCIvKlxuICogIE93bCBDYXJvdXNlbCAtIEFuaW1hdGUgUGx1Z2luXG4gKi9cbi5vd2wtY2Fyb3VzZWx7XG5cdC5hbmltYXRlZCB7XG5cdFx0YW5pbWF0aW9uLWR1cmF0aW9uOiAxMDAwbXM7XG5cdFx0YW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcblx0fVxuXHQub3dsLWFuaW1hdGVkLWluIHtcblx0XHR6LWluZGV4OiAwO1xuXHR9XG5cdC5vd2wtYW5pbWF0ZWQtb3V0IHtcblx0XHR6LWluZGV4OiAxO1xuXHR9XG5cdC5mYWRlT3V0IHtcblx0XHRhbmltYXRpb24tbmFtZTogZmFkZU91dDtcblx0fVxufVxuXG5Aa2V5ZnJhbWVzIGZhZGVPdXQge1xuXHQwJSB7XG5cdFx0b3BhY2l0eTogMTtcblx0fVxuXG5cdDEwMCUge1xuXHRcdG9wYWNpdHk6IDA7XG5cdH1cbn1cbiIsIi8qXG4gKiBcdE93bCBDYXJvdXNlbCAtIEF1dG8gSGVpZ2h0IFBsdWdpblxuICovXG5cbi5vd2wtaGVpZ2h0IHtcblx0dHJhbnNpdGlvbjogaGVpZ2h0IDUwMG1zIGVhc2UtaW4tb3V0O1xufVxuIiwiLypcbiAqIFx0T3dsIENhcm91c2VsIC0gTGF6eSBMb2FkIFBsdWdpblxuICovXG5cbi5vd2wtY2Fyb3VzZWwge1xuXHQub3dsLWl0ZW0ge1xuXHRcdC5vd2wtbGF6eSB7XG5cdFx0XHRcdG9wYWNpdHk6IDA7XG5cdFx0XHRcdHRyYW5zaXRpb246IG9wYWNpdHkgNDAwbXMgZWFzZTtcblx0XHR9XG5cblx0XHQvKipcblx0XHRcdFRoaXMgaXMgaW50cm9kdWNlZCBkdWUgdG8gYSBidWcgaW4gSUUxMSB3aGVyZSBsYXp5IGxvYWRpbmcgY29tYmluZWQgd2l0aCBhdXRvaGVpZ2h0IHBsdWdpbiBjYXVzZXMgYSB3cm9uZ1xuXHRcdFx0Y2FsY3VsYXRpb24gb2YgdGhlIGhlaWdodCBvZiB0aGUgb3dsLWl0ZW0gdGhhdCBicmVha3MgcGFnZSBsYXlvdXRzXG5cdFx0ICovXG5cdFx0Lm93bC1sYXp5W3NyY149XCJcIl0sIC5vd2wtbGF6eTpub3QoW3NyY10pIHtcblx0XHRcdG1heC1oZWlnaHQ6IDA7XG5cdFx0fVxuXG5cdFx0aW1nLm93bC1sYXp5IHtcblx0XHRcdHRyYW5zZm9ybS1zdHlsZTogcHJlc2VydmUtM2Q7XG5cdFx0fVxuXHR9XG59XG5cbiIsIiRvd2wtaW1hZ2UtcGF0aDogXCJcIiAhZGVmYXVsdDtcblxuLypcbiAqIFx0T3dsIENhcm91c2VsIC0gVmlkZW8gUGx1Z2luXG4gKi9cblxuLm93bC1jYXJvdXNlbHtcblx0Lm93bC12aWRlby13cmFwcGVyIHtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0aGVpZ2h0OiAxMDAlO1xuXHRcdGJhY2tncm91bmQ6ICMwMDA7XG5cdH1cblxuXHQub3dsLXZpZGVvLXBsYXktaWNvbiB7XG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdGhlaWdodDogODBweDtcblx0XHR3aWR0aDogODBweDtcblx0XHRsZWZ0OiA1MCU7XG5cdFx0dG9wOiA1MCU7XG5cdFx0bWFyZ2luLWxlZnQ6IC00MHB4O1xuXHRcdG1hcmdpbi10b3A6IC00MHB4O1xuXHRcdGJhY2tncm91bmQ6IHVybChcIiN7JG93bC1pbWFnZS1wYXRofW93bC52aWRlby5wbGF5LnBuZ1wiKSBuby1yZXBlYXQ7XG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHRcdHotaW5kZXg6IDE7XG5cdFx0LXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG5cdFx0dHJhbnNpdGlvbjogdHJhbnNmb3JtIDEwMG1zIGVhc2U7XG5cdH1cblxuXHQub3dsLXZpZGVvLXBsYXktaWNvbjpob3ZlciB7XG5cdFx0dHJhbnNmb3JtOiBzY2FsZSgxLjMsIDEuMyk7XG5cdH1cblxuXHQub3dsLXZpZGVvLXBsYXlpbmcgLm93bC12aWRlby10bixcblx0Lm93bC12aWRlby1wbGF5aW5nIC5vd2wtdmlkZW8tcGxheS1pY29uIHtcblx0XHRkaXNwbGF5OiBub25lO1xuXHR9XG5cblx0Lm93bC12aWRlby10biB7XG5cdFx0b3BhY2l0eTogMDtcblx0XHRoZWlnaHQ6IDEwMCU7XG5cdFx0YmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcblx0XHRiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuXHRcdGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcblx0XHR0cmFuc2l0aW9uOiBvcGFjaXR5IDQwMG1zIGVhc2U7XG5cdH1cblxuXHQub3dsLXZpZGVvLWZyYW1lIHtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0ei1pbmRleDogMTtcblx0XHRoZWlnaHQ6IDEwMCU7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdH1cbn1cbiIsIi8qXG4gKiBcdERlZmF1bHQgdGhlbWUgLSBPd2wgQ2Fyb3VzZWwgQ1NTIEZpbGVcbiAqL1xuXG4kY29sb3ItYmFzZTpcdFx0XHQjODY5NzkxICFkZWZhdWx0O1xuJGNvbG9yLXdoaXRlOlx0XHRcdCNGRkYgIWRlZmF1bHQ7XG4kY29sb3ItZ3JheTpcdFx0XHQjRDZENkQ2ICFkZWZhdWx0O1xuXG4vL25hdlxuXG4kbmF2LWNvbG9yOiBcdFx0XHQkY29sb3Itd2hpdGUgIWRlZmF1bHQ7XG4kbmF2LWNvbG9yLWhvdmVyOlx0XHQkY29sb3Itd2hpdGUgIWRlZmF1bHQ7XG4kbmF2LWZvbnQtc2l6ZTogXHRcdDE0cHggIWRlZmF1bHQ7XG4kbmF2LXJvdW5kZWQ6IFx0XHRcdDNweCAhZGVmYXVsdDtcbiRuYXYtbWFyZ2luOiBcdFx0XHQ1cHggIWRlZmF1bHQ7XG4kbmF2LXBhZGRpbmc6IFx0XHRcdDRweCA3cHggIWRlZmF1bHQ7XG4kbmF2LWJhY2tncm91bmQ6IFx0XHQkY29sb3ItZ3JheSAhZGVmYXVsdDtcbiRuYXYtYmFja2dyb3VuZC1ob3ZlcjpcdCRjb2xvci1iYXNlICFkZWZhdWx0O1xuJG5hdi1kaXNhYmxlZC1vcGFjaXR5OiBcdDAuNSAhZGVmYXVsdDtcblxuLy9kb3RzXG5cbiRkb3Qtd2lkdGg6XHRcdFx0XHQxMHB4ICFkZWZhdWx0O1xuJGRvdC1oZWlnaHQ6XHRcdFx0MTBweCAhZGVmYXVsdDtcbiRkb3Qtcm91bmRlZDpcdFx0XHQzMHB4ICFkZWZhdWx0O1xuJGRvdC1tYXJnaW46IFx0XHRcdDVweCA3cHggIWRlZmF1bHQ7XG4kZG90LWJhY2tncm91bmQ6XHRcdCRjb2xvci1ncmF5ICFkZWZhdWx0O1xuJGRvdC1iYWNrZ3JvdW5kLWFjdGl2ZTpcdCRjb2xvci1iYXNlICFkZWZhdWx0O1xuXG5AaW1wb3J0ICd0aGVtZSc7XG4iLCJcbi5vd2wtdGhlbWUge1xuXHQvLyBTdHlsaW5nIE5leHQgYW5kIFByZXYgYnV0dG9uc1xuXHQub3dsLW5hdiB7XG5cdFx0bWFyZ2luLXRvcDogMTBweDtcblx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdFx0LXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcblxuXHRcdFtjbGFzcyo9J293bC0nXSB7XG5cdFx0XHRjb2xvcjogJG5hdi1jb2xvcjtcblx0XHRcdGZvbnQtc2l6ZTogJG5hdi1mb250LXNpemU7XG5cdFx0XHRtYXJnaW46ICRuYXYtbWFyZ2luO1xuXHRcdFx0cGFkZGluZzogJG5hdi1wYWRkaW5nO1xuXHRcdFx0YmFja2dyb3VuZDogJG5hdi1iYWNrZ3JvdW5kO1xuXHRcdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRcdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHRcdFx0Ym9yZGVyLXJhZGl1czogM3B4O1xuXG5cdFx0XHQmOmhvdmVyIHtcblx0XHRcdFx0YmFja2dyb3VuZDogJG5hdi1iYWNrZ3JvdW5kLWhvdmVyO1xuXHRcdFx0XHRjb2xvcjokbmF2LWNvbG9yLWhvdmVyO1xuXHRcdFx0XHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdC5kaXNhYmxlZCB7XG5cdFx0XHRvcGFjaXR5OiAkbmF2LWRpc2FibGVkLW9wYWNpdHk7XG5cdFx0XHRjdXJzb3I6IGRlZmF1bHQ7XG5cdFx0fVxuXHR9XG5cblx0Ly8gU3R5bGluZyBkb3RzXG5cdC5vd2wtbmF2LmRpc2FibGVkICsgLm93bC1kb3RzIHtcblx0XHRtYXJnaW4tdG9wOiAxMHB4O1xuXHR9XG5cblx0Lm93bC1kb3RzIHtcblx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdFx0LXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcblxuXHRcdC5vd2wtZG90IHtcblx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0XHRcdHpvb206IDE7XG5cdFx0XHQqZGlzcGxheTogaW5saW5lO1xuXG5cdFx0XHRzcGFuIHtcblx0XHRcdFx0d2lkdGg6ICRkb3Qtd2lkdGg7XG5cdFx0XHRcdGhlaWdodDogJGRvdC1oZWlnaHQ7XG5cdFx0XHRcdG1hcmdpbjogJGRvdC1tYXJnaW47XG5cdFx0XHRcdGJhY2tncm91bmQ6ICRkb3QtYmFja2dyb3VuZDtcblx0XHRcdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0XHRcdC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogdmlzaWJsZTtcblx0XHRcdFx0dHJhbnNpdGlvbjogb3BhY2l0eSAyMDBtcyBlYXNlO1xuXHRcdFx0XHRib3JkZXItcmFkaXVzOiAkZG90LXJvdW5kZWQ7XG5cdFx0XHR9XG5cblx0XHRcdCYuYWN0aXZlLFxuXHRcdFx0Jjpob3ZlciB7XG5cdFx0XHRcdHNwYW4ge1xuXHRcdFx0XHRcdGJhY2tncm91bmQ6ICRkb3QtYmFja2dyb3VuZC1hY3RpdmU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cbn1cbiJdfQ== */