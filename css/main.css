@import url("https://fonts.googleapis.com/css?family=Lato:300,400,400i,700");
* {
  margin: 0;
  padding: 0;
  outline: none;
  border: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

a {
  text-decoration: none;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
}

.page_wrapper {
  min-height: 100vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.page_wrapper > main {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  padding-top: 70px;
}

/* GRID */
.row {
  max-width: 1400px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin: auto;
  padding: 0 10px;
}

.space_between {
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.align_center {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

[class^="col"] {
  padding: 0 10px;
}

/* General */
.col_1 {
  width: 9.09091%;
}

.col_2 {
  width: 18.18182%;
}

.col_3 {
  width: 27.27273%;
}

.col_4 {
  width: 36.36364%;
}

.col_5 {
  width: 45.45455%;
}

.col_6 {
  width: 54.54545%;
}

.col_7 {
  width: 63.63636%;
}

.col_8 {
  width: 72.72727%;
}

.col_9 {
  width: 81.81818%;
}

.col_10 {
  width: 90.90909%;
}

.col_11 {
  width: 100%;
}

.push_0 {
  margin-left: 0%;
}

.push_1 {
  margin-left: 9.09091%;
}

.push_2 {
  margin-left: 18.18182%;
}

.push_3 {
  margin-left: 27.27273%;
}

.push_4 {
  margin-left: 36.36364%;
}

.push_5 {
  margin-left: 45.45455%;
}

.push_6 {
  margin-left: 54.54545%;
}

.push_7 {
  margin-left: 63.63636%;
}

.push_8 {
  margin-left: 72.72727%;
}

.push_9 {
  margin-left: 81.81818%;
}

.push_10 {
  margin-left: 90.90909%;
}

/* Phone */
@media screen and (max-width: 425px) {
  .col_sm_1 {
    width: 50%;
  }
  .col_sm_2 {
    width: 100%;
  }
  .push_sm_0 {
    margin-left: 0%;
  }
  .push_sm_1 {
    margin-left: 50%;
  }
}

/* Tablet */
@media screen and (min-width: 426px) {
  .col_md_1 {
    width: 25%;
  }
  .col_md_2 {
    width: 50%;
  }
  .col_md_3 {
    width: 75%;
  }
  .col_md_4 {
    width: 100%;
  }
  .push_md_0 {
    margin-left: 0%;
  }
  .push_md_1 {
    margin-left: 25%;
  }
  .push_md_2 {
    margin-left: 50%;
  }
  .push_md_3 {
    margin-left: 75%;
  }
}

/* Desktop */
@media screen and (min-width: 769px) {
  .col_lg_1 {
    width: 9.09091%;
  }
  .col_lg_2 {
    width: 18.18182%;
  }
  .col_lg_3 {
    width: 27.27273%;
  }
  .col_lg_4 {
    width: 36.36364%;
  }
  .col_lg_5 {
    width: 45.45455%;
  }
  .col_lg_6 {
    width: 54.54545%;
  }
  .col_lg_7 {
    width: 63.63636%;
  }
  .col_lg_8 {
    width: 72.72727%;
  }
  .col_lg_9 {
    width: 81.81818%;
  }
  .col_lg_10 {
    width: 90.90909%;
  }
  .col_lg_11 {
    width: 100%;
  }
  .push_lg_0 {
    margin-left: 0%;
  }
  .push_lg_1 {
    margin-left: 9.09091%;
  }
  .push_lg_2 {
    margin-left: 18.18182%;
  }
  .push_lg_3 {
    margin-left: 27.27273%;
  }
  .push_lg_4 {
    margin-left: 36.36364%;
  }
  .push_lg_5 {
    margin-left: 45.45455%;
  }
  .push_lg_6 {
    margin-left: 54.54545%;
  }
  .push_lg_7 {
    margin-left: 63.63636%;
  }
  .push_lg_8 {
    margin-left: 72.72727%;
  }
  .push_lg_9 {
    margin-left: 81.81818%;
  }
  .push_lg_10 {
    margin-left: 90.90909%;
  }
}

body,
input,
button {
  font-family: 'Lato', sans-serif;
}

.logo_path {
  fill: currentColor;
}

.site_logo {
  display: none;
}

.header {
  width: 100%;
  height: 70px;
  position: fixed;
  top: 0;
  left: 0;
  background: #C20000;
}

.header_logo {
  font-size: 1rem;
  line-height: 1em;
}

.header_logo a {
  height: 70px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  color: #FFFFFF;
}

.header_logo a:hover {
  opacity: 0.7;
}

.header_logo svg {
  width: 26px;
  height: 31px;
  margin-right: 7px;
}

@media screen and (min-width: 769px) {
  .header_logo {
    font-size: 1.5rem;
  }
  .header_logo svg {
    width: 36px;
    height: 42px;
    margin-right: 14px;
  }
}

.header_nav_button {
  width: 30px;
  height: 70px;
  position: relative;
  background-color: transparent;
  cursor: pointer;
  overflow: hidden;
  text-indent: -999999px;
  z-index: 10;
}

.header_nav_button span, .header_nav_button:before, .header_nav_button:after {
  width: 25px;
  height: 2px;
  position: absolute;
  top: 34px;
  right: 0;
  content: "";
  background: #FFFFFF;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
}

.header_nav_button:before {
  -webkit-transform: translateY(-9px);
          transform: translateY(-9px);
}

.header_nav_button:after {
  -webkit-transform: translateY(9px);
          transform: translateY(9px);
}

.menu_open .header_nav_button span {
  opacity: 0;
}

.menu_open .header_nav_button:before {
  -webkit-transform: translateY(0) rotate(45deg);
          transform: translateY(0) rotate(45deg);
}

.menu_open .header_nav_button:after {
  -webkit-transform: translateY(0) rotate(-45deg);
          transform: translateY(0) rotate(-45deg);
}

@media screen and (min-width: 769px) {
  .header_nav_button {
    width: 70px;
  }
  .header_nav_button span, .header_nav_button:before, .header_nav_button:after {
    width: 30px;
  }
}

.header_nav_menu {
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
}

.menu_open .header_nav_menu {
  -webkit-transform: translateY(0);
          transform: translateY(0);
}

.footer {
  background: #C20000;
  color: #FFFFFF;
}

.footer a {
  color: #FFFFFF;
  padding: 0 2px;
}

.footer a:hover {
  opacity: 0.6;
}

.footer_top {
  padding: 45px 0 64px;
}

.footer_top, .footer_top p, .footer_top h3, .footer_top h4, .footer_top h5, .footer_top h6 {
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5em;
}

@media screen and (max-width: 1024px) {
  .footer_top .row > div {
    padding-bottom: 20px;
  }
}

.footer_bottom {
  background: #8F0000;
  font-size: 0.875rem;
  padding: 21px 0;
}

.footer_utility_nav ul {
  list-style: none;
}

.footer_utility_nav li {
  display: inline-block;
}

.footer_utility_nav li + li:before {
  content: "|";
}

.footer_nav ul {
  display: grid;
  grid-template-columns: auto auto;
  grid-gap: 10px 20px;
  font-size: 1rem;
  font-weight: 300;
  list-style: none;
  text-transform: uppercase;
}

.footer_nav li {
  line-height: 1.2em;
}

.schema_name {
  position: absolute;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(1px 1px 1px 1px);
  clip: rect(1px, 1px, 1px, 1px);
}

/*
 *  Owl Carousel - Core
 */
.owl-carousel {
  display: none;
  width: 100%;
  -webkit-tap-highlight-color: transparent;
  /* position relative and z-index fix webkit rendering fonts issue */
  position: relative;
  z-index: 1;
}

.owl-carousel .owl-stage {
  position: relative;
  -ms-touch-action: pan-Y;
  touch-action: manipulation;
  -moz-backface-visibility: hidden;
  /* fix firefox animation glitch */
}

.owl-carousel .owl-stage:after {
  content: ".";
  display: block;
  clear: both;
  visibility: hidden;
  line-height: 0;
  height: 0;
}

.owl-carousel .owl-stage-outer {
  position: relative;
  overflow: hidden;
  /* fix for flashing background */
  -webkit-transform: translate3d(0px, 0px, 0px);
}

.owl-carousel .owl-wrapper,
.owl-carousel .owl-item {
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  -ms-backface-visibility: hidden;
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
}

.owl-carousel .owl-item {
  position: relative;
  min-height: 1px;
  float: left;
  -webkit-backface-visibility: hidden;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}

.owl-carousel .owl-item img {
  display: block;
  width: 100%;
}

.owl-carousel .owl-nav.disabled,
.owl-carousel .owl-dots.disabled {
  display: none;
}

.owl-carousel .owl-nav .owl-prev,
.owl-carousel .owl-nav .owl-next,
.owl-carousel .owl-dot {
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.owl-carousel .owl-nav button.owl-prev,
.owl-carousel .owl-nav button.owl-next,
.owl-carousel button.owl-dot {
  background: none;
  color: inherit;
  border: none;
  padding: 0 !important;
  font: inherit;
}

.owl-carousel.owl-loaded {
  display: block;
}

.owl-carousel.owl-loading {
  opacity: 0;
  display: block;
}

.owl-carousel.owl-hidden {
  opacity: 0;
}

.owl-carousel.owl-refresh .owl-item {
  visibility: hidden;
}

.owl-carousel.owl-drag .owl-item {
  -ms-touch-action: pan-y;
      touch-action: pan-y;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.owl-carousel.owl-grab {
  cursor: move;
  cursor: -webkit-grab;
  cursor: grab;
}

.owl-carousel.owl-rtl {
  direction: rtl;
}

.owl-carousel.owl-rtl .owl-item {
  float: right;
}

/* No Js */
.no-js .owl-carousel {
  display: block;
}

/*
 *  Owl Carousel - Animate Plugin
 */
.owl-carousel .animated {
  -webkit-animation-duration: 1000ms;
          animation-duration: 1000ms;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both;
}

.owl-carousel .owl-animated-in {
  z-index: 0;
}

.owl-carousel .owl-animated-out {
  z-index: 1;
}

.owl-carousel .fadeOut {
  -webkit-animation-name: fadeOut;
          animation-name: fadeOut;
}

@-webkit-keyframes fadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes fadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

/*
 * 	Owl Carousel - Auto Height Plugin
 */
.owl-height {
  -webkit-transition: height 500ms ease-in-out;
  transition: height 500ms ease-in-out;
}

/*
 * 	Owl Carousel - Lazy Load Plugin
 */
.owl-carousel .owl-item {
  /**
			This is introduced due to a bug in IE11 where lazy loading combined with autoheight plugin causes a wrong
			calculation of the height of the owl-item that breaks page layouts
		 */
}

.owl-carousel .owl-item .owl-lazy {
  opacity: 0;
  -webkit-transition: opacity 400ms ease;
  transition: opacity 400ms ease;
}

.owl-carousel .owl-item .owl-lazy[src^=""], .owl-carousel .owl-item .owl-lazy:not([src]) {
  max-height: 0;
}

.owl-carousel .owl-item img.owl-lazy {
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
}

/*
 * 	Owl Carousel - Video Plugin
 */
.owl-carousel .owl-video-wrapper {
  position: relative;
  height: 100%;
  background: #000;
}

.owl-carousel .owl-video-play-icon {
  position: absolute;
  height: 80px;
  width: 80px;
  left: 50%;
  top: 50%;
  margin-left: -40px;
  margin-top: -40px;
  background: url("owl.video.play.png") no-repeat;
  cursor: pointer;
  z-index: 1;
  -webkit-backface-visibility: hidden;
  -webkit-transition: -webkit-transform 100ms ease;
  transition: -webkit-transform 100ms ease;
  transition: transform 100ms ease;
  transition: transform 100ms ease, -webkit-transform 100ms ease;
}

.owl-carousel .owl-video-play-icon:hover {
  -webkit-transform: scale(1.3, 1.3);
          transform: scale(1.3, 1.3);
}

.owl-carousel .owl-video-playing .owl-video-tn,
.owl-carousel .owl-video-playing .owl-video-play-icon {
  display: none;
}

.owl-carousel .owl-video-tn {
  opacity: 0;
  height: 100%;
  background-position: center center;
  background-repeat: no-repeat;
  background-size: contain;
  -webkit-transition: opacity 400ms ease;
  transition: opacity 400ms ease;
}

.owl-carousel .owl-video-frame {
  position: relative;
  z-index: 1;
  height: 100%;
  width: 100%;
}

/*
 * 	Default theme - Owl Carousel CSS File
 */
.owl-theme .owl-nav {
  margin-top: 10px;
  text-align: center;
  -webkit-tap-highlight-color: transparent;
}

.owl-theme .owl-nav [class*='owl-'] {
  color: #FFF;
  font-size: 0.875rem;
  margin: 5px;
  padding: 4px 7px;
  background: #D6D6D6;
  display: inline-block;
  cursor: pointer;
  border-radius: 3px;
}

.owl-theme .owl-nav [class*='owl-']:hover {
  background: #869791;
  color: #FFF;
  text-decoration: none;
}

.owl-theme .owl-nav .disabled {
  opacity: 0.5;
  cursor: default;
}

.owl-theme .owl-nav.disabled + .owl-dots {
  margin-top: 10px;
}

.owl-theme .owl-dots {
  text-align: center;
  -webkit-tap-highlight-color: transparent;
}

.owl-theme .owl-dots .owl-dot {
  display: inline-block;
  zoom: 1;
  *display: inline;
}

.owl-theme .owl-dots .owl-dot span {
  width: 10px;
  height: 10px;
  margin: 5px 7px;
  background: #D6D6D6;
  display: block;
  -webkit-backface-visibility: visible;
  -webkit-transition: opacity 200ms ease;
  transition: opacity 200ms ease;
  border-radius: 30px;
}

.owl-theme .owl-dots .owl-dot.active span, .owl-theme .owl-dots .owl-dot:hover span {
  background: #869791;
}

/*# sourceMappingURL=data:application/json;base64, */